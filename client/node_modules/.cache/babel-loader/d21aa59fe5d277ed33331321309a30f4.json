{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport Header from \"./components/Header\";\nimport ProductForm from \"./components/ProductForm\";\nimport Track from \"./components/TrackForm\"; // import Navbar from \"./components/Navbar\"\n// import MaterialsList from \"./components/MaterialsList\";\n\nimport Inventory from \"./components/Inventory\";\nimport AddProduct from \"./components/AddProduct\";\nimport LogTrack from \"./components/LogTrack\"; // import SimpleStorageContract from \"./contracts/SimpleStorage.json\";\n// import SandboxContract from './contracts/Sandbox.json';\n\nimport NewDemoTestContract from \"./contracts/NewDemoTest.json\";\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport \"./App.css\"; //  class Welcome extends Component {\n//   render() {\n//     return (\n//       <div> Welcome! </div>\n//     );\n//   }\n// }\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        //  const web3 = await getWeb3();\n        // // // // Use web3 to get the user's accounts.\n        //  const accounts = await web3.eth.getAccounts();\n        //  const balance = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether');\n        // // // Get the contract instance.\n        //   const networkId = await web3.eth.net.getId();\n        //   const deployedNetwork = NewDemoTestContract.networks[networkId];\n        //   const instance = new web3.eth.Contract(\n        //     NewDemoTestContract.abi,\n        //     deployedNetwork && deployedNetwork.address,\n        //   );\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        // this.setState({ web3, accounts, contract: instance }, this.runExample);\n        this.setState({\n          web3,\n          accounts,\n          contract: instance,\n          balance\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load blockchain data. Check console for details.\");\n        console.error(error);\n      }\n    };\n  }\n\n  // onSubmit = (e) => {\n  //   e.preventDefault();\n  //   // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //   // this.logProsduct();\n  //   console.log(this.state.input)\n  //   this.setState({ input: '' });\n  // }\n  // onChange = (e) => this.setState({ input : e.target.value });\n  // runExample = async () => {\n  //   const {contract } = this.state;\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   const supplier =  await contract.methods.getSupplier('0xf333028b8Fc7a030F1186Db50BceF0C0607c2CF2').call();\n  //   // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n  //   // Update state with the result.\n  //   this.setState({ supplier });\n  // };\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Header, {\n      accounts: this.state.accounts,\n      balance: this.state.balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navbar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/add-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"ADD PRODUCT\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/supply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"REQUEST MATERIAL\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/track\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"TRACK REQUESTS\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/inventory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"VIEW INVENTORY\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/track-log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"LOG TRACK\"), \" \"))), React.createElement(Route, {\n      path: \"/supply\",\n      exact: true,\n      component: ProductForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/inventory\",\n      exact: true,\n      component: Inventory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/track\",\n      exact: true,\n      component: Track,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-product\",\n      exact: true,\n      render: props => React.createElement(AddProduct, Object.assign({}, props, {\n        accounts: this.state.accounts,\n        contract: this.state.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/track-log\",\n      exact: true,\n      component: LogTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/App.js"],"names":["React","Component","getWeb3","Header","ProductForm","Track","Inventory","AddProduct","LogTrack","NewDemoTestContract","BrowserRouter","Route","NavLink","App","state","web3","accounts","contract","componentDidMount","setState","instance","balance","error","alert","console","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport Header from \"./components/Header\"\nimport ProductForm from \"./components/ProductForm\"\nimport Track from \"./components/TrackForm\"\n// import Navbar from \"./components/Navbar\"\n// import MaterialsList from \"./components/MaterialsList\";\nimport Inventory from \"./components/Inventory\";\nimport AddProduct from \"./components/AddProduct\";\nimport LogTrack from \"./components/LogTrack\";\n// import SimpleStorageContract from \"./contracts/SimpleStorage.json\";\n// import SandboxContract from './contracts/Sandbox.json';\nimport NewDemoTestContract from \"./contracts/NewDemoTest.json\";\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport \"./App.css\";\n\n\n//  class Welcome extends Component {\n//   render() {\n//     return (\n//       <div> Welcome! </div>\n//     );\n//   }\n// }\n\n\nclass App extends Component {\n\n  // state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  state = { web3: null , accounts: null, contract: null}\n\n  componentDidMount = async () => {\n\n    try {\n      // Get network provider and web3 instance.\n      //  const web3 = await getWeb3();\n\n      // // // // Use web3 to get the user's accounts.\n      //  const accounts = await web3.eth.getAccounts();\n      //  const balance = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether');\n      // // // Get the contract instance.\n      //   const networkId = await web3.eth.net.getId();\n      //   const deployedNetwork = NewDemoTestContract.networks[networkId];\n      //   const instance = new web3.eth.Contract(\n      //     NewDemoTestContract.abi,\n      //     deployedNetwork && deployedNetwork.address,\n      //   );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n        // this.setState({ web3, accounts, contract: instance }, this.runExample);\n       this.setState({web3, accounts, contract: instance, balance});\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n       alert(\n         `Failed to load blockchain data. Check console for details.`,\n       );\n       console.error(error);\n    }\n\n  };\n\n\n  // onSubmit = (e) => {\n  //   e.preventDefault();\n  //   // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //   // this.logProsduct();\n  //   console.log(this.state.input)\n  //   this.setState({ input: '' });\n  // }\n\n// onChange = (e) => this.setState({ input : e.target.value });\n\n\n  // runExample = async () => {\n  //   const {contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   const supplier =  await contract.methods.getSupplier('0xf333028b8Fc7a030F1186Db50BceF0C0607c2CF2').call();\n\n  //   // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n\n  //   // Update state with the result.\n  //   this.setState({ supplier });\n  // };\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n     return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Header accounts= {this.state.accounts}  balance = {this.state.balance} />\n        <div className = \"navbar-container\">\n          <ul className=\"nav-list\">\n          <li className = 'nav-item'> <NavLink to=\"/add-product\">ADD PRODUCT</NavLink> </li>\n          <li className = 'nav-item'> <NavLink to=\"/supply\">REQUEST MATERIAL</NavLink> </li>\n          <li className = 'nav-item'> <NavLink to=\"/track\" >TRACK REQUESTS</NavLink> </li>\n          <li className = 'nav-item'> <NavLink to=\"/inventory\">VIEW INVENTORY</NavLink> </li>\n          <li className = 'nav-item'> <NavLink to=\"/track-log\">LOG TRACK</NavLink> </li>\n          </ul>\n        </div>\n\n        {/* <Route path=\"/\" exact component={App} /> */}\n        {/* <Route path=\"/add-product\" exact \n        render={(props) => (\n          <AddProduct {...props} accounts={this.state.accounts} contract={this.state.contract} />\n        )} /> */}\n        \n        <Route path=\"/supply\" exact component= {ProductForm} />\n        <Route path=\"/inventory\" exact component={Inventory} />\n        <Route path=\"/track\" exact component={Track} />\n        <Route path=\"/add-product\" exact \n        render={props => (\n          <AddProduct {...props} accounts={this.state.accounts} contract={this.state.contract} />\n        )} />\n        <Route path=\"/track-log\" exact component={LogTrack} />\n        {/* <Navbar /> */}\n        {/* <ProductForm contract = {this.state.contract} accounts = {this.state.accounts} /> */}\n        {/* <Inventory /> */}\n        {/* <MaterialsList/> */}\n        {/* <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <p>\n          Try changing the value stored on <strong>line 40</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div> */}\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}