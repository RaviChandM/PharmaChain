{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/ProductForm.js\";\nimport React, { Component } from 'react'; // let myStyle = {\n//     display:'none'\n// }\n// let suppliers = [\"0x8660D38DCE7CC16d5fD6dc4b5Dc079109890E4A5\",\n//                    \"0x65e439CC22968836e8Db9e30B6450ef9d7816C2E\", \n//                    \"0x913D7882cEF7F8243c26cEb67947C78981729ed5\" ]\n// let costs = [\"10\",\"15\",\"13\",\"12\",\"51\",\"12\",\"14\",\"25\",\"20\",\"9\",\"8\",\"20\",\"40\"]\n// let types = [\"active\", \"packaging\", \"support\"]\n// let inventoryCount = 0;\n\nclass ProductForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      materialName: '',\n      materialsVisibility: false,\n      proName: '',\n      supplier: ''\n    };\n\n    this.componentDidMount = async () => {// if (!this.props.contract || !this.props.accounts) {\n      //     return <h2> PLEASE WAIT... </h2>;\n      // }\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      // this.logProduct();\n      // const material = this.state.materialName;\n      // const proName = this.state.proName;\n      // const supplierId = this.state.supplier;\n\n      this.setState({\n        matName: '',\n        proName: '',\n        supplier: '',\n        materialsVisibility: true\n      });\n      this.viewMaterialBySupplierAddress();\n    };\n\n    this.onChange = e => {\n      e.preventDefault();\n      this.setState({\n        proName: this.productRef.current.value,\n        // materialName : this.materialRef.current.value,\n        supplier: this.supplierRef.current.value\n      });\n    };\n\n    this.viewSpecs = async () => {\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n\n      if (specs.length === 0) {\n        this.setState({\n          specs: specs.push(\"Didn't find any specs for the given product ID, please try again!\")\n        });\n      }\n\n      console.log(specs);\n      this.setState({\n        specs\n      });\n    };\n\n    this.viewMaterialBySupplierAddress = async () => {\n      // console.log()\n      if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n        const materials = await this.props.contract.methods.getMaterialBySupplier(\"\".concat(this.state.supplier)).call();\n        this.setState({\n          materials\n        });\n      } else {\n        console.log('wrong material');\n      }\n    };\n\n    this.productRef = React.createRef();\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.viewMaterialBySupplierAddress = this.viewMaterialBySupplierAddress.bind(this);\n    this.viewSpecs = this.viewSpecs.bind(this);\n  }\n\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" Enter Product \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.productRef,\n      placeholder: \"e.g. pro101\",\n      value: this.state.proName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        cursor: 'pointer'\n      },\n      className: \"btn-alt\",\n      type: \"submit\",\n      onClick: this.viewSpecs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"VIEW PRODUCT SPECS\"), React.createElement(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontStyle: 'italic'\n      },\n      className: \"product-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.specs), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Enter Supplier ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"supplier-id\",\n      ref: this.supplierRef,\n      placeholder: \"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\",\n      autoComplete: \"off\",\n      value: this.state.supplier,\n      onChange: this.onChange,\n      onClick: this.viewMaterialBySupplierAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: 'pointer'\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"SEARCH AVAILABLE MATERIAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontStyle: 'italic'\n      },\n      className: \"material-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.materials)));\n  }\n\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/ProductForm.js"],"names":["React","Component","ProductForm","constructor","props","state","materialName","materialsVisibility","proName","supplier","componentDidMount","onSubmit","e","preventDefault","setState","matName","viewMaterialBySupplierAddress","onChange","productRef","current","value","supplierRef","viewSpecs","specs","contract","methods","getProductSpecs","call","length","push","console","log","Web3","utils","isAddress","materials","getMaterialBySupplier","createRef","materialRef","bind","render","acc","account","cont","cursor","marginTop","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// let myStyle = {\n//     display:'none'\n// }\n\n// let suppliers = [\"0x8660D38DCE7CC16d5fD6dc4b5Dc079109890E4A5\",\n//                    \"0x65e439CC22968836e8Db9e30B6450ef9d7816C2E\", \n//                    \"0x913D7882cEF7F8243c26cEb67947C78981729ed5\" ]\n\n// let costs = [\"10\",\"15\",\"13\",\"12\",\"51\",\"12\",\"14\",\"25\",\"20\",\"9\",\"8\",\"20\",\"40\"]\n\n// let types = [\"active\", \"packaging\", \"support\"]\n\n// let inventoryCount = 0;\n\nclass ProductForm extends Component {\n    state = {materialName: '' , materialsVisibility:  false , proName: '' , supplier: '' }\n\n\n    constructor(props) {\n        super(props);\n        this.productRef = React.createRef();\n        this.materialRef = React.createRef();\n        this.supplierRef = React.createRef();\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.viewMaterialBySupplierAddress = this.viewMaterialBySupplierAddress.bind(this)\n        this.viewSpecs = this.viewSpecs.bind(this)\n    }\n\n    componentDidMount = async() => {\n      \n        // if (!this.props.contract || !this.props.accounts) {\n        //     return <h2> PLEASE WAIT... </h2>;\n        // }\n        \n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n        // this.logProduct();\n        // const material = this.state.materialName;\n        // const proName = this.state.proName;\n        // const supplierId = this.state.supplier;\n\n        this.setState({  matName: '', proName: '', supplier: '', materialsVisibility: true });\n \n        this.viewMaterialBySupplierAddress();\n      }\n\n    onChange = (e) => {\n        e.preventDefault();\n        this.setState({ \n    \n            proName : this.productRef.current.value,\n            // materialName : this.materialRef.current.value,\n            supplier: this.supplierRef.current.value\n            });\n    }\n\n    // logProduct = async () => {\n    //     const product = await this.props.contract.methods.getProductDetails('5').call();\n    //     console.table(product);\n    // }\n\n    // fakeTransact = async () => {\n    //     //await contract.methods.set(5).send({ from: accounts[0] });\n    //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n    //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n    //     console.log(this.state.materialsVisibility)\n    // }\n        viewSpecs = async() => {\n            const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call()\n            if(specs.length === 0) {\n\n                this.setState({specs: specs.push(\"Didn't find any specs for the given product ID, please try again!\") })\n            }\n            console.log(specs)\n            this.setState({specs})\n        }\n\n        viewMaterialBySupplierAddress = async () => {\n            // console.log()\n            if(this.props.Web3.utils.isAddress(this.state.supplier)) {\n                const materials = await this.props.contract.methods.getMaterialBySupplier(`${this.state.supplier}`).call()\n                this.setState({materials})\n            } else {\n                console.log('wrong material')\n            }\n            \n            \n        }\n    render() {\n        // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n        // const random = Math.floor(Math.random() * 100);\n        let acc = this.props.account;\n        let cont = this.props.contract;\n        if (!acc || !cont) {\n            return <div> Loading..... </div>\n        }\n        return (\n            <form onSubmit= {this.onSubmit} className='form-container'>\n                {/* <div className= {`${vis}`}> INVENTORY LEVEL: {inventoryCount} </div> */}\n                <div className=\"form-row\">\n                    <h4> Enter Product </h4> \n                    {/* <select id=\"products\">\n                        <option> pro101 </option>\n                    </select> */}\n                    <input type=\"text\"\n                    ref={this.productRef}\n                    placeholder=\"e.g. pro101\" \n                    value={this.state.proName} \n                    onChange={this.onChange}/>\n        \n                      {/* <input \n                      style= {{cursor:'pointer'}}\n                      className=\"btn-alt\"\n                      type=\"submit\"\n                      onClick = {this.viewSpecs}\n                      value=\"VIEW PRODUCT SPECS\"/> */}\n                      <button\n                      style= {{cursor:'pointer'}}\n                      className=\"btn-alt\"\n                      type=\"submit\"\n                      onClick = {this.viewSpecs}\n                      \n                      >\n                          VIEW PRODUCT SPECS\n                      </button>\n                    <div style={{marginTop: '20px', fontStyle: 'italic'}} className='product-data-container'>\n                        {this.state.specs}\n                    </div>\n                    {/* <h4>Choose Material</h4>\n                     <input onChange= { this.onChange } type=\"text\" id=\"product-name\" \n                    placeholder=\"Enter Material Name\" autoComplete=\"off\"/>  \n                    <select id= \"materials\"\n                     value={this.state.materialName} \n                     onChange = {this.onChange} \n                     ref ={this.materialRef} >\n                        <option id='1' value='vitamin-a'>VITAMIN A </option>\n                        <option id='2' value='vitmain-b-complex'>VITAMIN B COMPLEX</option>\n                        <option id='3' value='vitamin-c-extract'>VITAMIN C EXTRACT</option>\n                        <option id='4' value='vitamin-d'>VITAMIN D</option>\n                        <option id='5' value='potassium'>POTASSIUM</option>\n                        <option id='6' value='zinc'>ZINC</option>\n                        <option id='7' value='plastic'>PLASTIC</option>\n                        <option id='8' value='glass'>GLASS</option>\n                        <option id='9' value='wood'>WOOD</option>\n                    </select> */}\n\n                    <h4>Enter Supplier ID</h4>\n                        <input\n                        type=\"text\" id=\"supplier-id\" \n                        ref={this.supplierRef}\n                        placeholder=\"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\"\n                        autoComplete=\"off\"\n                        value = {this.state.supplier}\n                        onChange = {this.onChange}\n                        onClick = {this.viewMaterialBySupplierAddress}\n                       /> \n                        \n                       {/* <button\n                       style= {{cursor:'pointer'}}\n                       className=\"btn\"\n                       type=\"submit\"\n                       onClick = {this.getProductSpecs}\n                       >SEARCH FOR MATERIAL </button> */}\n\n                        <input style= {{ cursor:'pointer'}} className=\"btn\" type=\"submit\" value=\"SEARCH AVAILABLE MATERIAL\"/> \n\n                        <div style={{marginTop: '20px', fontStyle: 'italic'}} className='material-data-container'>\n                        {this.state.materials}\n                    </div>\n                </div>\n                \n                {/* <div id= 'material-content' className={`material-card ${vis}`} >   \n                    <ul>\n                        <li><strong>SUPPLIER:</strong> {suppliers[0]} </li>\n                        <li><strong>MATERIAL ID:</strong> uid{14+2} </li>\n                        <li><strong>MATERIAL NAME:</strong> {this.state.input.toUpperCase()} </li> \n                        <li> <strong>MATERIAL TYPE: </strong> {types[0]}</li>\n                        <li> <strong>UNIT COST: {costs[1]} </strong> </li>\n                    </ul>\n                    <input  type=\"number\" placeholder=\"amount (KGs)\"/> \n                    <button onClick = {this.fakeTransact} className='btn'> REQUEST </button>\n                </div>\n                <div id= 'material-content' className={`material-card ${vis}`} >   \n                    <ul>\n                        <li><strong>SUPPLIER:</strong> {suppliers[1]} </li>\n                        <li><strong>MATERIAL ID:</strong> uid{21+12} </li>\n                        <li><strong>MATERIAL NAME:</strong> {this.state.input.toUpperCase()} </li> \n                        <li> <strong>MATERIAL TYPE: </strong> {types[0]}</li>\n                        <li> <strong>UNIT COST: {costs[3]} </strong> </li>\n                    </ul> \n                    <input  type=\"number\" placeholder=\"amount (KGs)\"/> \n                    <button onClick = {this.fakeTransact} className='btn'> REQUEST </button>\n                </div> */}\n\n            </form>\n            \n         );\n\n        \n\n    }\n}\n\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}