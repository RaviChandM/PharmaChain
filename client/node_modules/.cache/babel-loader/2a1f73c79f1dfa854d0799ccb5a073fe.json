{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(this.props.status);\n    return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.props.status);\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      console.log(response);\n      let log1 = response.map((item, index) => {\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      });\n      let log2 = response[0];\n      console.log(log1, log2);\n      this.setState({\n        response,\n        log1\n      });\n      this.setState({\n        requestID: \"\"\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW SHIPMENT STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"response-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.log1));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","TrackRecord","constructor","props","render","console","log","status","Track","state","logs","componentDidMount","requestID","handleSubmit","e","preventDefault","id","parseInt","response","contract","methods","getTrackLogs","call","log1","map","item","index","log2","setState","handleChange","requestIdRef","current","value","createRef","bind","acc","account","cont","marginRight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    console.log(this.props.status)\n    return (\n      <div className=\"track-record-container\"> \n      {this.props.status}\n      \n      </div>\n    );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [] };\n\n  componentDidMount = async () => {};\n\n  state = { requestID: \"\" };\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    console.log(response);\n    let log1 = response.map((item,index) => {\n      return <TrackRecord key={index} status = {item} />\n    })\n    let log2 = response[0]\n    console.log(log1, log2);\n    this.setState({ response, log1 });\n    this.setState({\n      requestID: \"\",\n    });\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{marginRight: '5px'}}> Request ID: </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n          />\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW SHIPMENT STATUS\"\n          />\n        </div>\n\n        <div className=\"response-text\">{this.state.log1}</div>\n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}