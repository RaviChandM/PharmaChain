{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/ProductForm.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proName: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      // const material = this.state.materialName;\n      // const proName = this.state.proName;\n      // const supplierId = this.state.supplier;\n\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n\n      if (specs.length === 0) {\n        this.setState({\n          specs: specs.push(\"Didn't find any specs for the given product ID, please try again!\")\n        });\n      }\n\n      this.setState({\n        specs\n      });\n      this.setState({\n        proName: \"\"\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        proName: this.productRef.current.value\n      });\n    };\n\n    this.productRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    console.log(acc, cont);\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Enter Product ID \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.productRef,\n      placeholder: \"e.g. pro101\",\n      value: this.state.proName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"VIEW PRODUCT SPECS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        fontStyle: \"italic\"\n      },\n      className: \"product-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.specs));\n  }\n\n}\n\nclass RequestMaterials extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      materialName: \"\",\n      materialsVisibility: false,\n      supplier: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n\n      if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n        const materials = await this.props.contract.methods.getMaterialBySupplier(\"\".concat(this.state.supplier)).call();\n\n        if (materials.length === 0) {\n          this.setState({\n            materials: materials.push(\"This supplier has no recently created materials!\")\n          });\n        } // this.setState({  matName: '', proName: '', supplier: '', materialsVisibility: true });\n\n\n        this.setState({\n          materials\n        });\n      } // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      //  const material = this.state.materialName;\n      // const proName = this.state.proName;\n      //  const supplierId = this.state.supplier;\n\n\n      this.setState({\n        supplier: '',\n        materialName: ''\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        materialName: this.materialRef.current.value,\n        supplier: this.supplierRef.current.value\n      });\n    };\n\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n\n    if (!acc || !cont || !web) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Enter Supplier ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"supplier-id\",\n      ref: this.supplierRef,\n      placeholder: \"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\",\n      autoComplete: \"off\",\n      value: this.state.supplier,\n      onChange: this.onChange,\n      onClick: this.viewMaterialBySupplierAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" Material Name: \"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.onChange,\n      value: this.state.materialName,\n      ref: this.materialRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"WOOD\")), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"SEARCH AVAILABLE MATERIAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        fontStyle: \"italic\"\n      },\n      className: \"material-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.materials));\n  }\n\n}\n\nclass ProductForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {// if (!this.props.contract || !this.props.accounts) {\n      //     return <h2> PLEASE WAIT... </h2>;\n      // }\n    };\n\n    this.viewSpecs = async () => {\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n\n      if (specs.length === 0) {\n        this.setState({\n          specs: specs.push(\"Didn't find any specs for the given product ID, please try again!\")\n        });\n      }\n\n      console.log(specs);\n      this.setState({\n        specs\n      });\n    };\n\n    this.viewMaterialBySupplierAddress = async () => {\n      // console.log()\n      if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n        const materials = await this.props.contract.methods.getMaterialBySupplier(\"\".concat(this.state.supplier)).call();\n\n        if (materials.length === 0) {\n          this.setState({\n            materials: materials.push(\"This supplier has no materials created currently!\")\n          });\n        }\n\n        this.setState({\n          materials\n        });\n      }\n    };\n  }\n\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"side-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"mini-nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/querySpecs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"+ QUERY PRODUCT SPECS\"), \" \"), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/supply/requestMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"+ REQUEST MATERIALS\")))), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/supply/querySpecs\",\n      exact: true,\n      render: props => React.createElement(QueryProductSpecs, Object.assign({}, props, {\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/requestMaterial\",\n      exact: true,\n      render: props => React.createElement(RequestMaterials, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/ProductForm.js"],"names":["React","Component","BrowserRouter","Route","NavLink","QueryProductSpecs","constructor","props","state","proName","onSubmit","e","preventDefault","specs","contract","methods","getProductSpecs","call","length","setState","push","onChange","productRef","current","value","createRef","bind","render","acc","account","cont","console","log","cursor","marginTop","fontStyle","RequestMaterials","materialName","materialsVisibility","supplier","Web3","utils","isAddress","materials","getMaterialBySupplier","materialRef","supplierRef","web","viewMaterialBySupplierAddress","ProductForm","componentDidMount","viewSpecs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,kBAA9C;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAGxCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,KAEmB,GAFX;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAEW;;AAAA,SAOnBC,QAPmB,GAOR,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF,GADsB,CAGtB;AACA;AACA;AACA;;AAEA,YAAMC,KAAK,GAAG,MAAM,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,OAApB,CACjBC,eADiB,CACD,KAAKR,KAAL,CAAWC,OADV,EAEjBQ,IAFiB,EAApB;;AAGA,UAAIJ,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAKC,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAEA,KAAK,CAACO,IAAN,CACL,mEADK;AADK,SAAd;AAKD;;AACD,WAAKD,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AAEA,WAAKM,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA5BkB;;AAAA,SA8BnBY,QA9BmB,GA8BPV,CAAD,IAAO;AAChB,WAAKQ,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAE,KAAKa,UAAL,CAAgBC,OAAhB,CAAwBC;AADrB,OAAd;AAGD,KAlCkB;;AAEjB,SAAKF,UAAL,GAAkBtB,KAAK,CAACyB,SAAN,EAAlB;AACA,SAAKf,QAAL,GAAgB,KAAKA,QAAL,CAAcgB,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKL,QAAL,GAAgB,KAAKA,QAAL,CAAcK,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AA+BDC,EAAAA,MAAM,GAAG;AACP,QAAIC,GAAG,GAAG,KAAKrB,KAAL,CAAWsB,OAArB;AACA,QAAIC,IAAI,GAAG,KAAKvB,KAAL,CAAWO,QAAtB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAAiBE,IAAjB;;AACA,QAAI,CAACF,GAAD,IAAQ,CAACE,IAAb,EAAmB;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AACD,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKpB,QAArB;AAA+B,MAAA,SAAS,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,GAAG,EAAE,KAAKY,UAFZ;AAGE,MAAA,WAAW,EAAC,aAHd;AAIE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,OAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKY,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAWE;AACE,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,KAAK,EAAC,oBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAkBE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OADT;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAK3B,KAAL,CAAWK,KAJd,CAlBF,CADF;AA2BD;;AAzEuC;;AA4E1C,MAAMuB,gBAAN,SAA+BnC,SAA/B,CAAyC;AAOvCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SANnBC,KAMmB,GANX;AACN6B,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,mBAAmB,EAAE,KAFf;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAMW;;AAAA,SASnB7B,QATmB,GASR,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAI,KAAKL,KAAL,CAAWiC,IAAX,CAAgBC,KAAhB,CAAsBC,SAAtB,CAAgC,KAAKlC,KAAL,CAAW+B,QAA3C,CAAJ,EAA0D;AACxD,cAAMI,SAAS,GAAG,MAAM,KAAKpC,KAAL,CAAWO,QAAX,CAAoBC,OAApB,CACrB6B,qBADqB,WACI,KAAKpC,KAAL,CAAW+B,QADf,GAErBtB,IAFqB,EAAxB;;AAGA,YAAI0B,SAAS,CAACzB,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAKC,QAAL,CAAc;AACZwB,YAAAA,SAAS,EAAEA,SAAS,CAACvB,IAAV,CACT,kDADS;AADC,WAAd;AAKD,SAVuD,CAWxD;;;AACA,aAAKD,QAAL,CAAc;AAAEwB,UAAAA;AAAF,SAAd;AACD,OAhBqB,CAkBtB;AACA;AACA;AACA;;;AACA,WAAKxB,QAAL,CAAc;AAAEoB,QAAAA,QAAQ,EAAE,EAAZ;AAAiBF,QAAAA,YAAY,EAAE;AAA/B,OAAd;AACD,KAhCkB;;AAAA,SAkCnBhB,QAlCmB,GAkCPV,CAAD,IAAO;AAChB,WAAKQ,QAAL,CAAc;AACZkB,QAAAA,YAAY,EAAG,KAAKQ,WAAL,CAAiBtB,OAAjB,CAAyBC,KAD5B;AAEZe,QAAAA,QAAQ,EAAE,KAAKO,WAAL,CAAiBvB,OAAjB,CAAyBC;AAFvB,OAAd;AAID,KAvCkB;;AAGjB,SAAKqB,WAAL,GAAmB7C,KAAK,CAACyB,SAAN,EAAnB;AACA,SAAKqB,WAAL,GAAmB9C,KAAK,CAACyB,SAAN,EAAnB;AACA,SAAKf,QAAL,GAAgB,KAAKA,QAAL,CAAcgB,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKL,QAAL,GAAgB,KAAKA,QAAL,CAAcK,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAkCDC,EAAAA,MAAM,GAAG;AACP,QAAIC,GAAG,GAAG,KAAKrB,KAAL,CAAWsB,OAArB;AACA,QAAIC,IAAI,GAAG,KAAKvB,KAAL,CAAWO,QAAtB;AACA,QAAIiC,GAAG,GAAG,KAAKxC,KAAL,CAAWiC,IAArB;;AACA,QAAI,CAACZ,GAAD,IAAQ,CAACE,IAAT,IAAiB,CAACiB,GAAtB,EAA2B;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AACD,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKrC,QAArB;AAA+B,MAAA,SAAS,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,GAAG,EAAE,KAAKoC,WAHZ;AAIE,MAAA,WAAW,EAAC,iDAJd;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,KAAK,EAAE,KAAKtC,KAAL,CAAW+B,QANpB;AAOE,MAAA,QAAQ,EAAE,KAAKlB,QAPjB;AAQE,MAAA,OAAO,EAAE,KAAK2B,6BARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BArBF,EAsBE;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,QAAQ,EAAI,KAAK3B,QAFnB;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAW6B,YAHpB;AAIE,MAAA,GAAG,EAAE,KAAKQ,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EASE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATF,EAYE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAZF,EAeE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,EAkBE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBF,EAqBE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,EAwBE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBF,EA2BE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3BF,EA8BE;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF,CAtBF,EAyDE;AACE,MAAA,KAAK,EAAE;AAAEZ,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,KAAK,EAAC,2BAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDF,EAgEE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OADT;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAK3B,KAAL,CAAWmC,SAJd,CAhEF,CADF;AAyED;;AAhIsC;;AAmIzC,MAAMM,WAAN,SAA0BhD,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAclCiD,iBAdkC,GAcd,YAAY,CAC9B;AACA;AACA;AACD,KAlBiC;;AAAA,SAoDlCC,SApDkC,GAoDtB,YAAY;AACtB,YAAMtC,KAAK,GAAG,MAAM,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,OAApB,CACjBC,eADiB,CACD,KAAKR,KAAL,CAAWC,OADV,EAEjBQ,IAFiB,EAApB;;AAGA,UAAIJ,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAKC,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAEA,KAAK,CAACO,IAAN,CACL,mEADK;AADK,SAAd;AAKD;;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAjEiC;;AAAA,SAmElCmC,6BAnEkC,GAmEF,YAAY;AAC1C;AACA,UAAI,KAAKzC,KAAL,CAAWiC,IAAX,CAAgBC,KAAhB,CAAsBC,SAAtB,CAAgC,KAAKlC,KAAL,CAAW+B,QAA3C,CAAJ,EAA0D;AACxD,cAAMI,SAAS,GAAG,MAAM,KAAKpC,KAAL,CAAWO,QAAX,CAAoBC,OAApB,CACrB6B,qBADqB,WACI,KAAKpC,KAAL,CAAW+B,QADf,GAErBtB,IAFqB,EAAxB;;AAGA,YAAI0B,SAAS,CAACzB,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAKC,QAAL,CAAc;AACZwB,YAAAA,SAAS,EAAEA,SAAS,CAACvB,IAAV,CACT,mDADS;AADC,WAAd;AAKD;;AACD,aAAKD,QAAL,CAAc;AAAEwB,UAAAA;AAAF,SAAd;AACD;AACF,KAlFiC;AAAA;;AAmFlChB,EAAAA,MAAM,GAAG;AACP;AACA;AACA,QAAIC,GAAG,GAAG,KAAKrB,KAAL,CAAWsB,OAArB;AACA,QAAIC,IAAI,GAAG,KAAKvB,KAAL,CAAWO,QAAtB;;AACA,QAAI,CAACc,GAAD,IAAQ,CAACE,IAAb,EAAmB;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AACD,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EACmE,GADnE,CADF,EAIE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAJF,CADF,CADF,EAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,oBADP;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,MAAM,EAAGvB,KAAD,IACN,oBAAC,iBAAD,oBACMA,KADN;AAEE,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWsB,OAFtB;AAGE,QAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWO,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,yBADP;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,MAAM,EAAGP,KAAD,IACN,oBAAC,gBAAD,oBACMA,KADN;AAEE,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWiC,IAFnB;AAGE,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWsB,OAHtB;AAIE,QAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWO,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAdF,CADF,CADF;AA4CD;;AAvIiC;;AA0IpC,eAAemC,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  state = { proName: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.productRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    \n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    // const material = this.state.materialName;\n    // const proName = this.state.proName;\n    // const supplierId = this.state.supplier;\n\n    const specs = await this.props.contract.methods\n      .getProductSpecs(this.state.proName)\n      .call();\n    if (specs.length === 0) {\n      this.setState({\n        specs: specs.push(\n          \"Didn't find any specs for the given product ID, please try again!\"\n        ),\n      });\n    }\n    this.setState({ specs });\n\n    this.setState({ proName: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      proName: this.productRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    console.log(acc, cont);\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <h4> Enter Product ID </h4>\n\n        <input\n          type=\"text\"\n          ref={this.productRef}\n          placeholder=\"e.g. pro101\"\n          value={this.state.proName}\n          onChange={this.onChange}\n        />\n\n        <input\n          style={{ cursor: \"pointer\" }}\n          className=\"btn\"\n          type=\"submit\"\n          value=\"VIEW PRODUCT SPECS\"\n        />\n\n        <div\n          style={{ marginTop: \"20px\", fontStyle: \"italic\" }}\n          className=\"product-data-container\"\n        >\n          {this.state.specs}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass RequestMaterials extends Component {\n  state = {\n    materialName: \"\",\n    materialsVisibility: false,\n    supplier: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n      const materials = await this.props.contract.methods\n        .getMaterialBySupplier(`${this.state.supplier}`)\n        .call();\n      if (materials.length === 0) {\n        this.setState({\n          materials: materials.push(\n            \"This supplier has no recently created materials!\"\n          ),\n        });\n      }\n      // this.setState({  matName: '', proName: '', supplier: '', materialsVisibility: true });\n      this.setState({ materials });\n    }\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    //  const material = this.state.materialName;\n    // const proName = this.state.proName;\n    //  const supplierId = this.state.supplier;\n    this.setState({ supplier: '' , materialName: ''});\n  };\n\n  onChange = (e) => {\n    this.setState({\n      materialName : this.materialRef.current.value,\n      supplier: this.supplierRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n    if (!acc || !cont || !web) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <h4>Enter Supplier ID</h4>\n\n        <input\n          type=\"text\"\n          id=\"supplier-id\"\n          ref={this.supplierRef}\n          placeholder=\"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\"\n          autoComplete=\"off\"\n          value={this.state.supplier}\n          onChange={this.onChange}\n          onClick={this.viewMaterialBySupplierAddress}\n        />\n\n        {/* <button\n                    style= {{cursor:'pointer'}}\n                    className=\"btn\"\n                    type=\"submit\"\n                    onClick = {this.getProductSpecs}\n                    >SEARCH FOR MATERIAL </button> */}\n\n        <label> Material Name: </label>\n        <select\n          name=\"material-name\"\n          onChange = {this.onChange}\n          value={this.state.materialName}\n          ref={this.materialRef}\n        >\n          <option id=\"1\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"2\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"3\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n        </select>\n\n        <input\n          style={{ cursor: \"pointer\" }}\n          className=\"btn\"\n          type=\"submit\"\n          value=\"SEARCH AVAILABLE MATERIAL\"\n        />\n\n        <div\n          style={{ marginTop: \"20px\", fontStyle: \"italic\" }}\n          className=\"material-data-container\"\n        >\n          {this.state.materials}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass ProductForm extends Component {\n  // state = {materialName: '' , materialsVisibility:  false , proName: '' , supplier: '' }\n\n  // constructor(props) {\n  //     super(props);\n\n  //     this.materialRef = React.createRef();\n  //     this.supplierRef = React.createRef();\n  //     this.onSubmit = this.onSubmit.bind(this)\n  //     this.onChange = this.onChange.bind(this)\n  //     this.viewMaterialBySupplierAddress = this.viewMaterialBySupplierAddress.bind(this)\n  //     this.viewSpecs = this.viewSpecs.bind(this)\n  // }\n\n  componentDidMount = async () => {\n    // if (!this.props.contract || !this.props.accounts) {\n    //     return <h2> PLEASE WAIT... </h2>;\n    // }\n  };\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n  viewSpecs = async () => {\n    const specs = await this.props.contract.methods\n      .getProductSpecs(this.state.proName)\n      .call();\n    if (specs.length === 0) {\n      this.setState({\n        specs: specs.push(\n          \"Didn't find any specs for the given product ID, please try again!\"\n        ),\n      });\n    }\n    console.log(specs);\n    this.setState({ specs });\n  };\n\n  viewMaterialBySupplierAddress = async () => {\n    // console.log()\n    if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n      const materials = await this.props.contract.methods\n        .getMaterialBySupplier(`${this.state.supplier}`)\n        .call();\n      if (materials.length === 0) {\n        this.setState({\n          materials: materials.push(\n            \"This supplier has no materials created currently!\"\n          ),\n        });\n      }\n      this.setState({ materials });\n    }\n  };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"product-form-container\">\n          <div className=\"side-nav\">\n            <ul className=\"mini-nav-list\">\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/querySpecs\">+ QUERY PRODUCT SPECS</NavLink>{\" \"}\n              </li>\n              <li className=\"link-item\">\n                {\" \"}\n                <NavLink to=\"/supply/requestMaterial\">\n                  + REQUEST MATERIALS\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-content\">\n            <Route\n              path=\"/supply/querySpecs\"\n              exact\n              render={(props) => (\n                <QueryProductSpecs\n                  {...props}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/requestMaterial\"\n              exact\n              render={(props) => (\n                <RequestMaterials\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default ProductForm;\n"]},"metadata":{},"sourceType":"module"}