{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/invalid-1.svg\"),\n      alt: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/valid-3.svg\"),\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  }\n}\n\nclass TrackRecord extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (this.props.ship === \"ABNORMAL\" ? statusColor = \"alert-text\" : statusColor = \"good-text\") return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(TrackImg, {\n      status: this.props.ship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"head log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" \", this.props.request), React.createElement(\"li\", {\n      style: {\n        fontStyle: 'normal'\n      },\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" SHIPMENT VERIFIED\"), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.description, \".\"), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"STATUS:\"), React.createElement(\"span\", {\n      className: \"\".concat(statusColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", this.props.ship))));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      wholeActive: false,\n      isTab1Active: false,\n      isTab2Active: false\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\"\n    };\n\n    this.toggleSection1 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab1Active: !this.state.isTab1Active,\n        active: !this.state.active\n      });\n    };\n\n    this.toggleSection2 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab2Active: !this.state.isTab2Active,\n        active: !this.state.active\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call();\n      let tempTrackHistory = trackHistory.temp.map((item, index) => {\n        return React.createElement(\"div\", {\n          key: \"index\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \" \", parseInt(item, 10), \" \");\n      });\n      const event = await this.props.contract.events.ShipmentStateUpdate({\n        fromBlock: 0\n      }, function (error, event) {\n        console.log(event);\n      }).on('data', function (event) {\n        console.log(event); // same results as the optional callback above\n      }).on('changed', function (event) {// remove event from local database\n      }).on('error', console.error);\n      console.log(tempTrackHistory);\n      console.log(event);\n\n      if (response.length === 0) {\n        this.setState({\n          msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase()\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \"\"\n        });\n      }, 3000);\n      let log = response.map((item, index) => {\n        const shipmentStatus = item.shipmentStatus;\n        const requestStatus = item.requestStatus;\n        const loggedBy = item.logger;\n        const description = item.description;\n        const time = item.logTime;\n        this.setState({\n          shipmentStatus,\n          requestStatus,\n          loggedBy,\n          description,\n          time,\n          trackHistory,\n          tempTrackHistory\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.state.time,\n          request: this.state.requestStatus,\n          ship: this.state.shipmentStatus,\n          logger: this.state.loggedBy,\n          description: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \" \",\n        isTab1Active: true,\n        wholeActive: true\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  render() {\n    let view1, view2, wholeView, activated;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.wholeActive ? wholeView = \"show\" : wholeView = \"hide\";\n    this.state.isTab1Active ? view1 = \"show\" : view1 = \"hide\";\n    this.state.isTab2Active ? view2 = \"show\" : view2 = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Tracking Number : \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"div\", {\n      className: \" \".concat(wholeView, \" accordion-tabs\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection1,\n      className: \"\".concat(activated, \"  accordion-toggle one \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"+ TRACKING SUMMARY  \"), React.createElement(\"div\", {\n      className: \"\".concat(view1, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.log), React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection2,\n      className: \"\".concat(this.state.active, \"  accordion-toggle two \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"+ TEMPRATURE HISTORY \"), React.createElement(\"div\", {\n      className: \" \".concat(view2, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.tempTrackHistory)));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","TrackImg","props","status","require","TrackRecord","render","statusColor","dateStr","Date","time","toString","dateArr","split","timestamp","join","ship","request","fontStyle","description","Track","constructor","state","logs","wholeActive","isTab1Active","isTab2Active","componentDidMount","requestID","toggleSection1","e","preventDefault","setState","active","toggleSection2","handleSubmit","id","parseInt","response","contract","methods","getTrackLogs","call","trackHistory","getShipmentTrackData","tempTrackHistory","temp","map","item","index","event","events","ShipmentStateUpdate","fromBlock","error","console","log","on","length","msg","toUpperCase","setTimeout","shipmentStatus","requestStatus","loggedBy","logger","logTime","handleChange","requestIdRef","current","value","createRef","bind","view1","view2","wholeView","activated","acc","account","cont","marginRight","cursor","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return <img src={require(\"../assets/invalid-1.svg\")} alt=\"invalid\" />;\n  } else {\n    return <img src={require(\"../assets/valid-3.svg\")} alt=\"valid\" />;\n  }\n}\nclass TrackRecord extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (\n      this.props.ship === \"ABNORMAL\"\n        ? (statusColor = \"alert-text\")\n        : (statusColor = \"good-text\")\n    )\n      return (\n        <div className=\"track-record-container\">\n          <TrackImg status={this.props.ship} />\n          <ul className=\"record-list\">\n            <li className=\"timestamp log-item\"> {timestamp}</li>\n            <li className=\"head log-item\"> {this.props.request}</li>\n            <li style={{fontStyle: 'normal'}}className=\"timestamp log-item\"> SHIPMENT VERIFIED</li>\n            <hr className=\"custom-hr-full\" />\n            <li className=\"log-item\">\n            {this.props.description}.\n            </li>\n            {/* <li className=\"log-item\">\n              <strong>TEMP:</strong> {this.props.temp} °C \n            </li>\n            <li className=\"log-item\">\n              <strong>HUMIDITY:</strong>  {this.props.humid} %\n            </li> */}\n            <li className=\"log-item\">\n              <strong>STATUS:</strong>\n              <span className={`${statusColor}`}> {this.props.ship}</span>\n            </li>\n          </ul>\n        </div>\n      );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [], wholeActive:false, isTab1Active: false , isTab2Active: false };\n\n  componentDidMount = async () => {};\n\n  state = { requestID: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  toggleSection1= async(e) => {\n    e.preventDefault();\n    this.setState({isTab1Active: !this.state.isTab1Active ,\n     active: !this.state.active})\n    \n  }\n  toggleSection2= async(e) => {\n    e.preventDefault();\n    this.setState({isTab2Active: !this.state.isTab2Active,\n       active: !this.state.active})\n  }\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call()\n    let tempTrackHistory = trackHistory.temp.map((item,index)=> {\n      return(\n        <div key=\"index\"> {parseInt(item,10)} </div>\n      );\n    })\n    const event = await this.props.contract.events.ShipmentStateUpdate ({\n      fromBlock: 0\n  }, function(error, event){ console.log(event); })\n  .on('data', function(event){\n      console.log(event); // same results as the optional callback above\n  })\n  .on('changed', function(event){\n      // remove event from local database\n  })\n  .on('error', console.error);\n    console.log(tempTrackHistory)\n    console.log(event)\n    if (response.length === 0) {\n      this.setState({\n        msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase(),\n      });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \"\" });\n    }, 3000);\n\n    let log = response.map((item, index) => {\n      const shipmentStatus = item.shipmentStatus;\n      const requestStatus = item.requestStatus;\n      const loggedBy = item.logger;\n      const description = item.description;\n      const time = item.logTime;\n      this.setState({ shipmentStatus, requestStatus, loggedBy, description,\n         time , trackHistory , tempTrackHistory });\n\n      return (\n        <TrackRecord\n          key={index}\n          status={item}\n          time={this.state.time}\n          request={this.state.requestStatus}\n          ship={this.state.shipmentStatus}\n          logger ={this.state.loggedBy}\n          description = {this.state.description}\n        />\n      );\n    });\n\n    this.setState({ response, log });\n    this.setState({\n      requestID: \" \",\n      isTab1Active: true,\n      wholeActive:true\n    });\n    \n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let view1, view2, wholeView , activated;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    this.state.wholeActive ? wholeView =\"show\" : wholeView =\"hide\"\n    this.state.isTab1Active ? view1 =\"show\": view1 =\"hide\" \n    this.state.isTab2Active ? view2 =\"show\" : view2 =\"hide\" \n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{ marginRight: \"5px\" }}> Tracking Number : </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n            required = \"required\"\n          />\n\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW STATUS\"\n          />\n        </div>\n\n        <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n          {this.state.msg}\n        </div>\n        <div className={` ${wholeView} accordion-tabs`}>\n        <a href=\"/track\" onClick={this.toggleSection1}\n         className=  {`${activated}  accordion-toggle one `} >\n          + TRACKING SUMMARY  </a>\n          <div className={`${view1} response-logs tab`}>\n            {this.state.log} \n          </div>\n          <a href=\"/track\" onClick={this.toggleSection2}\n            className=  {`${this.state.active}  accordion-toggle two `} >\n          + TEMPRATURE HISTORY </a>\n          <div className={` ${view2} response-logs tab`}>\n          \n            {/* 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 */}\n            {this.state.tempTrackHistory}\n            {/* <p> Chart Goes here </p> */}\n          </div>\n        </div>\n        \n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}