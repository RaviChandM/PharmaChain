{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/invalid-1.svg\"),\n      alt: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/valid-3.svg\"),\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  }\n}\n\nclass TrackRecord extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (this.props.material === \"ABNORMAL\" ? statusColor = \"alert-text\" : statusColor = \"good-text\") return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(TrackImg, {\n      status: this.props.material,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"head log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" \", this.props.ship), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"TEMP:\"), \" \", this.props.temp), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"HUMIDITY:\"), \" \", this.props.humid), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"STATUS:\"), React.createElement(\"span\", {\n      className: \"\".concat(statusColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" \", this.props.material))));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      isTabActive: false,\n      isVisible: false\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n\n      if (response.length === 0) {\n        this.setState({\n          msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase()\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \"\"\n        });\n      }, 3000);\n      let log = response.map((item, index) => {\n        const shipStatus = item.shipStatus;\n        const matStatus = item.materialStatus;\n        const temp = item.currentTemp;\n        const humid = item.currentHumidity;\n        const time = item.logTime;\n        this.setState({\n          shipStatus,\n          matStatus,\n          temp,\n          humid,\n          time\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.state.time,\n          ship: this.state.shipStatus,\n          material: this.state.matStatus,\n          temp: this.state.temp,\n          humid: this.state.humid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \" \"\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW SHIPMENT STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"div\", {\n      className: \"accordion-tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"response-logs tab1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \" SUMMARY \"), this.state.log), React.createElement(\"div\", {\n      className: \"history-logs tab2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" SUMMARY \"), this.state.log)));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","TrackImg","props","status","require","TrackRecord","render","statusColor","dateStr","Date","time","toString","dateArr","split","timestamp","join","material","ship","temp","humid","Track","constructor","state","logs","isTabActive","isVisible","componentDidMount","requestID","handleSubmit","e","preventDefault","id","parseInt","response","contract","methods","getTrackLogs","call","length","setState","msg","toUpperCase","setTimeout","log","map","item","index","shipStatus","matStatus","materialStatus","currentTemp","currentHumidity","logTime","handleChange","requestIdRef","current","value","createRef","bind","acc","account","cont","marginRight","cursor","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return <img src={require(\"../assets/invalid-1.svg\")} alt=\"invalid\" />;\n  } else {\n    return <img src={require(\"../assets/valid-3.svg\")} alt=\"valid\" />;\n  }\n}\nclass TrackRecord extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (\n      this.props.material === \"ABNORMAL\"\n        ? (statusColor = \"alert-text\")\n        : (statusColor = \"good-text\")\n    )\n      return (\n        <div className=\"track-record-container\">\n          <TrackImg status={this.props.material} />\n          <ul className=\"record-list\">\n            <li className=\"timestamp log-item\"> {timestamp}</li>\n            <li className=\"head log-item\"> {this.props.ship}</li>\n            <hr className=\"custom-hr-full\" />\n            <li className=\"log-item\">\n              <strong>TEMP:</strong> {this.props.temp}\n            </li>\n            <li className=\"log-item\">\n              {\" \"}\n              <strong>HUMIDITY:</strong> {this.props.humid}\n            </li>\n            <li className=\"log-item\">\n              <strong>STATUS:</strong>\n              <span className={`${statusColor}`}> {this.props.material}</span>\n            </li>\n          </ul>\n        </div>\n      );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [], isTabActive: false , isVisible: false };\n\n  componentDidMount = async () => {};\n\n  state = { requestID: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n\n    if (response.length === 0) {\n      this.setState({\n        msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase(),\n      });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \"\" });\n    }, 3000);\n\n    let log = response.map((item, index) => {\n      const shipStatus = item.shipStatus;\n      const matStatus = item.materialStatus;\n      const temp = item.currentTemp;\n      const humid = item.currentHumidity;\n      const time = item.logTime;\n      this.setState({ shipStatus, matStatus, temp, humid, time });\n\n      return (\n        <TrackRecord\n          key={index}\n          status={item}\n          time={this.state.time}\n          ship={this.state.shipStatus}\n          material={this.state.matStatus}\n          temp={this.state.temp}\n          humid={this.state.humid}\n        />\n      );\n    });\n\n    this.setState({ response, log });\n    this.setState({\n      requestID: \" \",\n    });\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{ marginRight: \"5px\" }}> Request ID: </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n            required = \"required\"\n          />\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW SHIPMENT STATUS\"\n          />\n        </div>\n\n        <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n          {this.state.msg}\n        </div>\n        <div className=\"accordion-tabs\">\n          <div className=\"response-logs tab1\">\n            <button> SUMMARY </button>\n            {this.state.log} \n          </div>\n          <div className=\"history-logs tab2\">\n          <button> SUMMARY </button>\n            {this.state.log} \n          </div>\n        </div>\n        \n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}