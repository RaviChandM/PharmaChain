{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/SupplyForm.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proName: \"\",\n      tableVisibility: false\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n\n      this.btnRef.current.setAttribute(\"disabled\", \"disabled\");\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n      const specsRow = specs.map((spec, index) => {\n        let name = spec.materialName;\n        let amount = spec.materialAmount;\n        let form = spec.materialForm;\n        let type = spec.materialType;\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", name, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \" \", type, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, amount, \" mg \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, form, \" \"));\n      });\n\n      if (specs.length === 0) {\n        this.setState({\n          msg: \"Didn't find any specs for the given product ID, please try again!\".toUpperCase()\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \" \"\n        });\n      }, 3000);\n      this.setState({\n        proName: \"\",\n        specsRow\n      });\n      this.setState({\n        tableVisibility: true\n      });\n      this.btnRef.current.removeAttribute(\"disabled\");\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        proName: this.productRef.current.value\n      });\n    };\n\n    this.productRef = React.createRef();\n    this.btnRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let table;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.tableVisibility ? table = \"show\" : table = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Enter Product ID \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.productRef,\n      placeholder: \"e.g. pro101\",\n      value: this.state.proName,\n      onChange: this.onChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"VIEW PRODUCT SPECS\",\n      ref: this.btnRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"\".concat(table, \" product-data-container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.msg, \" \"), React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"TYPE \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"AMOUNT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"FORM\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.specsRow))));\n  }\n\n}\n\nclass RequestMaterials extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      materialName: \"\",\n      supplier: \"\",\n      amount: 0,\n      form: \"\",\n      strength: 0,\n      msg: \" \"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const material = this.state.materialName; // const proName = this.state.proName;\n      // const supplierId = this.state.supplier;\n      // const matform = this.state.form;\n      // const matamount = this.state.amount;\n      // const matstr = this.state.strength;\n\n      console.log(material);\n      const query = await this.props.contract.methods.getMaterials().call();\n      console.log(query);\n      const result = query.filter((item, index) => {\n        let found;\n        item.materialName === material ? found = true : found = false;\n        console.log(found);\n        return React.createElement(\"div\", {\n          key: \"index\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \" item \");\n      });\n      console.log(result); // if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n      //   await this.props.contract.methods\n      //     .createRequest(\n      //       supplierId,\n      //       material,\n      //       matform,\n      //       matstr,\n      //       matamount\n      //     )\n      //     .send({ from: this.props.account[0] })\n      //     .once(\"receipt\", (receipt) => {\n      //       this.setState({ msg: \"Request was sent successfully!\"});\n      //       setTimeout(() => {\n      //         this.setState({ msg: \" \" });\n      //       }, 2000);\n      //     });\n      //     const request = await this.props.contract.methods.getMyRequests().call();\n      //     const requestNo = request[request.length -1].requestId;\n      //     this.setState({ requestInfo: \"Your Tracking Number: \" + requestNo});\n      //       setTimeout(() => {\n      //         this.setState({ requestInfo: \" \" });\n      //       }, 15000);\n      //   // if (request.length === 0) {\n      //   //   this.setState({\n      //   //     materials: materials.push(\n      //   //       \"This supplier has no recently created materials!\"\n      //   //     ),\n      //   //   });\n      //   // }\n      //   this.setState({\n      //     matName: \"\",\n      //     proName: \"\",\n      //     supplier: \"\",\n      //     form: \"\",\n      //     amount: \"\",\n      //     strength: \"\",\n      //   });\n      //   // this.setState({ requests: this.state.requests + 1 });\n      // } else {\n      //   this.setState({ msg: \"Please Try Again!\" });\n      //   setTimeout(() => {\n      //     this.setState({ msg: \" \" });\n      //   }, 2000);\n      // }\n      // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      //  const material = this.state.materialName;\n      // // const proName = this.state.proName;\n      //  const supplierId = this.state.supplier;\n      //  const matform = this.state.form;\n      //  const matamount =this.state.amount;\n      // this.setState({ supplier: \"\", materialName: \"\", amount: null, form: \"\" });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        materialName: this.materialRef.current.value // supplier: this.supplierRef.current.value,\n        // amount: this.amountRef.current.value,\n        // form: this.formRef.current.value,\n        // strength: this.matStrRef.current.value,\n\n      });\n    };\n\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.formRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n\n    if (!acc || !cont || !web) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" Material Name: \"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.onChange,\n      ref: this.materialRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"WHEAT GERM OIL\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"SEARCH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, this.state.msg), \" \"), React.createElement(\"div\", {\n      style: {\n        color: '#222',\n        fontSize: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, this.state.requestInfo))));\n  }\n\n}\n\nclass CreateMaterial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matId: \"\",\n      matName: \"\",\n      matForm: \"\",\n      matStr: 0,\n      matAmount: 0,\n      matUnitCost: 0\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const id = this.state.matId;\n      const name = this.state.matName;\n      const form = this.state.matForm;\n      const strength = this.state.matStr;\n      const amount = this.state.matAmount;\n      const cost = this.state.matUnitCost;\n      await this.props.contract.methods.createMaterial(id, name, strength, form, amount, cost).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Materials Created Successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      });\n      this.setState({\n        matId: \"\",\n        matName: \"\",\n        matForm: \"\",\n        matStr: \"\",\n        matAmount: \"\",\n        matUnitCost: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        matId: this.idRef.current.value,\n        matName: this.matRef.current.value,\n        matForm: this.formRef.current.value,\n        matStr: this.strRef.current.value,\n        matAmount: this.amountRef.current.value,\n        matUnitCost: this.unitCostRef.current.value\n      });\n    };\n\n    this.idRef = React.createRef();\n    this.matRef = React.createRef();\n    this.formRef = React.createRef();\n    this.strRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.unitCostRef = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"Material ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.matId,\n      onChange: this.onChange,\n      ref: this.idRef,\n      placeholder: \"e.g. mat101\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Material Name:\"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.OnChange,\n      ref: this.matRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"11\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"22\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"33\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"WHEAT GERM OIl\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \" Material Form: \"), React.createElement(\"select\", {\n      name: \"material-form\",\n      onChange: this.onChange,\n      ref: this.formRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"powder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, \"POWDER\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"liquid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"LIQUID\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"n/a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"N/A\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \" Material Strength: \"), React.createElement(\"input\", {\n      value: this.state.matStr,\n      onChange: this.onChange,\n      ref: this.strRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, \" Material Amount: \"), React.createElement(\"input\", {\n      value: this.state.matAmount,\n      onChange: this.onChange,\n      ref: this.amountRef,\n      type: \"number\",\n      placeholder: \"e.g. 1000\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, \" Material Unit Cost: \"), React.createElement(\"input\", {\n      value: this.state.matUnitCost,\n      onChange: this.onChange,\n      ref: this.unitCostRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"CREATE MATERIAL\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass SupplyForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {// if (!this.props.contract || !this.props.accounts) {\n      //     return <h2> PLEASE WAIT... </h2>;\n      // }\n    };\n  }\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n  // viewSpecs = async () => {\n  //   const specs = await this.props.contract.methods\n  //     .getProductSpecs(this.state.proName)\n  //     .call();\n  //   if (specs.length === 0) {\n  //     this.setState({\n  //       specs: specs.push(\n  //         \"Didn't find any specs for the given product ID, please try again!\"\n  //       ),\n  //     });\n  //   }\n  //   console.log(specs);\n  //   this.setState({ specs });\n  // };\n  // viewMaterialBySupplierAddress = async () => {\n  //   // console.log()\n  //   if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n  //     const materials = await this.props.contract.methods\n  //       .getMaterialBySupplier(`${this.state.supplier}`)\n  //       .call();\n  //     if (materials.length === 0) {\n  //       this.setState({\n  //         materials: materials.push(\n  //           \"This supplier has no materials created currently!\"\n  //         ),\n  //       });\n  //     }\n  //     this.setState({ materials });\n  //   }\n  // };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"side-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"mini-nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/querySpecs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, \"+ QUERY PRODUCT SPECS\")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/requestMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, \"+ REQUEST MATERIAL\")), React.createElement(\"label\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, \" SUPPLIER \")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/supplier/createMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, \"+ CREATE MATERIAL\")))), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/supply/querySpecs\",\n      exact: true,\n      render: props => React.createElement(QueryProductSpecs, Object.assign({}, props, {\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/requestMaterial\",\n      exact: true,\n      render: props => React.createElement(RequestMaterials, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/supplier/createMaterial\",\n      exact: true,\n      render: props => React.createElement(CreateMaterial, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SupplyForm;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/SupplyForm.js"],"names":["React","Component","BrowserRouter","Route","NavLink","QueryProductSpecs","constructor","props","state","proName","tableVisibility","onSubmit","e","preventDefault","btnRef","current","setAttribute","specs","contract","methods","getProductSpecs","call","specsRow","map","spec","index","name","materialName","amount","materialAmount","form","materialForm","type","materialType","length","setState","msg","toUpperCase","setTimeout","removeAttribute","onChange","productRef","value","createRef","bind","render","table","acc","account","cont","marginTop","margin","RequestMaterials","supplier","strength","material","console","log","query","getMaterials","result","filter","item","found","materialRef","supplierRef","amountRef","formRef","matStrRef","web","Web3","cursor","color","fontSize","requestInfo","CreateMaterial","matId","matName","matForm","matStr","matAmount","matUnitCost","id","cost","createMaterial","send","from","once","receipt","idRef","matRef","strRef","unitCostRef","OnChange","SupplyForm","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  state = { proName: \"\", tableVisibility: false };\n\n  constructor(props) {\n    super(props);\n    this.productRef = React.createRef();\n    this.btnRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    this.btnRef.current.setAttribute(\"disabled\", \"disabled\");\n    const specs = await this.props.contract.methods\n      .getProductSpecs(this.state.proName)\n      .call();\n\n    const specsRow = specs.map((spec, index) => {\n      let name = spec.materialName;\n      let amount = spec.materialAmount;\n      let form = spec.materialForm;\n      let type = spec.materialType;\n      return (\n        <tr key={index}>\n          <td> {name} </td>\n          <td> {type} </td>\n          <td>{amount} mg </td>\n          <td>{form} </td>\n        </tr>\n      );\n    });\n\n    if (specs.length === 0) {\n      this.setState({\n        msg: \"Didn't find any specs for the given product ID, please try again!\".toUpperCase(),\n      });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \" \" });\n    }, 3000);\n\n    this.setState({ proName: \"\", specsRow });\n    this.setState({ tableVisibility: true });\n\n    this.btnRef.current.removeAttribute(\"disabled\");\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      proName: this.productRef.current.value,\n    });\n  };\n\n  render() {\n    let table;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    this.state.tableVisibility ? (table = \"show\") : (table = \"hide\");\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label> Enter Product ID </label>\n\n        <input\n          type=\"text\"\n          ref={this.productRef}\n          placeholder=\"e.g. pro101\"\n          value={this.state.proName}\n          onChange={this.onChange}\n          required = \"required\"\n        />\n\n        <input\n          className=\"btn\"\n          type=\"submit\"\n          value=\"VIEW PRODUCT SPECS\"\n          ref={this.btnRef}\n        />\n\n        <div\n          style={{ marginTop: \"20px\" }}\n          className={`${table} product-data-container`}\n        >\n          <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n            {this.state.msg}{\" \"}\n          </div>\n          <table border=\"1\">\n            <thead>\n              <tr>\n                <th>NAME</th>\n                <th>TYPE </th>\n                <th>AMOUNT</th>\n                <th>FORM</th>\n              </tr>\n            </thead>\n            <tbody>{this.state.specsRow}</tbody>\n          </table>\n        </div>\n      </form>\n    );\n  }\n}\n\nclass RequestMaterials extends Component {\n  state = {\n    materialName: \"\",\n    supplier: \"\",\n    amount: 0,\n    form: \"\",\n    strength: 0,\n    msg: \" \",\n  };\n\n  constructor(props) {\n    super(props);\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.formRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const material = this.state.materialName;\n    // const proName = this.state.proName;\n    // const supplierId = this.state.supplier;\n    // const matform = this.state.form;\n    // const matamount = this.state.amount;\n    // const matstr = this.state.strength;\n\n    console.log(material);\n    const query = await this.props.contract.methods.getMaterials().call();\n    console.log(query);\n    const result = query.filter( (item,index) => {\n       let found;\n       item.materialName === material ?  found = true : found = false\n       console.log(found)\n       return <div key=\"index\"> item </div>;\n    })\n    console.log(result);\n    // if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n    //   await this.props.contract.methods\n    //     .createRequest(\n    //       supplierId,\n    //       material,\n    //       matform,\n    //       matstr,\n    //       matamount\n    //     )\n    //     .send({ from: this.props.account[0] })\n    //     .once(\"receipt\", (receipt) => {\n    //       this.setState({ msg: \"Request was sent successfully!\"});\n    //       setTimeout(() => {\n    //         this.setState({ msg: \" \" });\n    //       }, 2000);\n    //     });\n\n    //     const request = await this.props.contract.methods.getMyRequests().call();\n    //     const requestNo = request[request.length -1].requestId;\n\n    //     this.setState({ requestInfo: \"Your Tracking Number: \" + requestNo});\n    //       setTimeout(() => {\n    //         this.setState({ requestInfo: \" \" });\n    //       }, 15000);\n\n\n    //   // if (request.length === 0) {\n    //   //   this.setState({\n    //   //     materials: materials.push(\n    //   //       \"This supplier has no recently created materials!\"\n    //   //     ),\n    //   //   });\n    //   // }\n\n    \n    //   this.setState({\n    //     matName: \"\",\n    //     proName: \"\",\n    //     supplier: \"\",\n    //     form: \"\",\n    //     amount: \"\",\n    //     strength: \"\",\n    //   });\n    //   // this.setState({ requests: this.state.requests + 1 });\n    // } else {\n    //   this.setState({ msg: \"Please Try Again!\" });\n    //   setTimeout(() => {\n    //     this.setState({ msg: \" \" });\n    //   }, 2000);\n    // }\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    //  const material = this.state.materialName;\n    // // const proName = this.state.proName;\n    //  const supplierId = this.state.supplier;\n    //  const matform = this.state.form;\n    //  const matamount =this.state.amount;\n    // this.setState({ supplier: \"\", materialName: \"\", amount: null, form: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      materialName: this.materialRef.current.value,\n      // supplier: this.supplierRef.current.value,\n      // amount: this.amountRef.current.value,\n      // form: this.formRef.current.value,\n      // strength: this.matStrRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n    if (!acc || !cont || !web) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        {/* <label> Supplier ID:</label>\n\n        <input\n          type=\"text\"\n          id=\"supplier-id\"\n          ref={this.supplierRef}\n          placeholder=\"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\"\n          autoComplete=\"off\"\n          value={this.state.supplier}\n          onChange={this.onChange}\n          required = \"required\"\n        /> */}\n\n        {/* <button\n                    style= {{cursor:'pointer'}}\n                    className=\"btn\"\n                    type=\"submit\"\n                    onClick = {this.getProductSpecs}\n                    >SEARCH FOR MATERIAL </button> */}\n\n        <label> Material Name: </label>\n        <select\n          name=\"material-name\"\n          onChange={this.onChange}\n          ref={this.materialRef}\n        >\n          <option id=\"1\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"2\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"3\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIL\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n\n        {/* <label> Material Form: </label>\n        <select\n          name=\"requested-mat-form\"\n          onChange={this.handleChange}\n          ref={this.formRef}\n        >\n          <option id=\"pow\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"liq\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"na\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.handleChange}\n          ref={this.matStrRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n\n        <label>Requested Amount: </label>\n\n        <input\n          type=\"number\"\n          id=\"material-amount\"\n          value={this.state.amount}\n          ref={this.amountRef}\n          placeholder=\"e.g. 1000 KGs\"\n          autoComplete=\"off\"\n          onChange={this.onChange}\n          required = \"required\"\n        /> */}\n\n        <input\n          style={{ cursor: \"pointer\" }}\n          className=\"btn\"\n          type=\"submit\"\n          value=\"SEARCH\"\n        />\n\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text\"\n        >\n          <div><strong>{this.state.msg}</strong> </div>\n          <div style={{color: '#222', fontSize: '16px' }}><strong>{this.state.requestInfo}</strong></div>\n        </div>\n      </form>\n    );\n  }\n}\n\nclass CreateMaterial extends Component {\n  state = {\n    matId: \"\",\n    matName: \"\",\n    matForm: \"\",\n    matStr: 0,\n    matAmount: 0,\n    matUnitCost: 0,\n  };\n  constructor(props) {\n    super(props);\n    this.idRef = React.createRef();\n    this.matRef = React.createRef();\n    this.formRef = React.createRef();\n    this.strRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.unitCostRef = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const id = this.state.matId;\n    const name = this.state.matName;\n    const form = this.state.matForm;\n    const strength = this.state.matStr;\n    const amount = this.state.matAmount;\n    const cost = this.state.matUnitCost;\n\n    await this.props.contract.methods\n      .createMaterial(id, name, strength, form, amount, cost)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Materials Created Successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 2000);\n      });\n\n    this.setState({\n      matId: \"\",\n      matName: \"\",\n      matForm: \"\",\n      matStr: \"\",\n      matAmount: \"\",\n      matUnitCost: \"\",\n    });\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      matId: this.idRef.current.value,\n      matName: this.matRef.current.value,\n      matForm: this.formRef.current.value,\n      matStr: this.strRef.current.value,\n      matAmount: this.amountRef.current.value,\n      matUnitCost: this.unitCostRef.current.value,\n    });\n  };\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label>Material ID:</label>\n        <input\n          type=\"text\"\n          value={this.state.matId}\n          onChange={this.onChange}\n          ref={this.idRef}\n          placeholder=\"e.g. mat101\"\n          required = \"required\"\n          \n        />\n        <label>Material Name:</label>\n        <select name=\"material-name\" onChange={this.OnChange} ref={this.matRef}>\n          <option id=\"11\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"22\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"33\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIl\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n\n        <label> Material Form: </label>\n        <select\n          name=\"material-form\"\n          onChange={this.onChange}\n          ref={this.formRef}\n        >\n          <option id=\"1\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"2\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"3\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.onChange}\n          ref={this.strRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n        <label> Material Amount: </label>\n        <input\n          value={this.state.matAmount}\n          onChange={this.onChange}\n          ref={this.amountRef}\n          type=\"number\"\n          placeholder=\"e.g. 1000\"\n          required = \"required\"\n        />\n\n        <label> Material Unit Cost: </label>\n        <input\n          value={this.state.matUnitCost}\n          onChange={this.onChange}\n          ref={this.unitCostRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n          required = \"required\"\n        />\n\n        <input type=\"submit\" value=\"CREATE MATERIAL\" className=\"btn\" />\n\n        <div style={{ marginTop: \"20px\" }} className=\"notify-text\">\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass SupplyForm extends Component {\n  // state = {materialName: '' , materialsVisibility:  false , proName: '' , supplier: '' }\n\n  // constructor(props) {\n  //     super(props);\n\n  //     this.materialRef = React.createRef();\n  //     this.supplierRef = React.createRef();\n  //     this.onSubmit = this.onSubmit.bind(this)\n  //     this.onChange = this.onChange.bind(this)\n  //     this.viewMaterialBySupplierAddress = this.viewMaterialBySupplierAddress.bind(this)\n  //     this.viewSpecs = this.viewSpecs.bind(this)\n  // }\n\n  componentDidMount = async () => {\n    // if (!this.props.contract || !this.props.accounts) {\n    //     return <h2> PLEASE WAIT... </h2>;\n    // }\n  };\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n\n  // viewSpecs = async () => {\n  //   const specs = await this.props.contract.methods\n  //     .getProductSpecs(this.state.proName)\n  //     .call();\n  //   if (specs.length === 0) {\n  //     this.setState({\n  //       specs: specs.push(\n  //         \"Didn't find any specs for the given product ID, please try again!\"\n  //       ),\n  //     });\n  //   }\n  //   console.log(specs);\n  //   this.setState({ specs });\n  // };\n\n  // viewMaterialBySupplierAddress = async () => {\n  //   // console.log()\n  //   if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n  //     const materials = await this.props.contract.methods\n  //       .getMaterialBySupplier(`${this.state.supplier}`)\n  //       .call();\n  //     if (materials.length === 0) {\n  //       this.setState({\n  //         materials: materials.push(\n  //           \"This supplier has no materials created currently!\"\n  //         ),\n  //       });\n  //     }\n  //     this.setState({ materials });\n  //   }\n  // };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"product-form-container\">\n          <div className=\"side-nav\">\n            <ul className=\"mini-nav-list\">\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/querySpecs\">+ QUERY PRODUCT SPECS</NavLink>\n              </li>\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/requestMaterial\">\n                  + REQUEST MATERIAL\n                </NavLink>\n              </li>\n              <label style={{ marginTop: \"10px\" }}>\n                <strong> SUPPLIER </strong>\n              </label>\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/supplier/createMaterial\">\n                  + CREATE MATERIAL\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-content\">\n            <Route\n              path=\"/supply/querySpecs\"\n              exact\n              render={(props) => (\n                <QueryProductSpecs\n                  {...props}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/requestMaterial\"\n              exact\n              render={(props) => (\n                <RequestMaterials\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/supplier/createMaterial\"\n              exact\n              render={(props) => (\n                <CreateMaterial\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default SupplyForm;\n"]},"metadata":{},"sourceType":"module"}