{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/AddProduct.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass CreateProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productName: \"\",\n      productId: \"\",\n      productForm: \"\",\n      msg: \" \"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let name = this.state.productName;\n      let id = this.state.productId;\n      let form = this.state.productForm;\n      await this.props.contract.methods.addProduct(name, id, form).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Product was created successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      });\n      this.setState({\n        productName: \"\",\n        productId: \"\",\n        productForm: \"\"\n      }); // await this.props.contract.methods.addProduct(id,name,form).send({from: this.props.accounts[0]});\n\n      console.log(name, id, form);\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        productName: this.nameRef.current.value,\n        productId: this.idRef.current.value,\n        productForm: this.formRef.current.value\n      });\n    };\n\n    this.nameRef = React.createRef();\n    this.idRef = React.createRef();\n    this.formRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // sendData() {  }\n\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Product Name: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      ref: this.nameRef,\n      type: \"text\",\n      placeholder: \"e.g. MyProduct\",\n      value: this.state.productName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Product ID: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      ref: this.idRef,\n      type: \"text\",\n      placeholder: \"e.g. pro101\",\n      value: this.state.productId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Product Form: \"), React.createElement(\"select\", {\n      ref: this.formRef,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"tablets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"TABLETS\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"capsules\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"CAPSULES\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"tablets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"OTHER\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"CREATE PRODUCT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass AddMaterial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proID: \"\",\n      matName: \"\",\n      matType: \"\",\n      matStr: 0,\n      matForm: \"\",\n      matAmount: 0,\n      msg: \" \"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let proID = this.state.proID;\n      let name = this.state.matName;\n      let type = this.state.matType;\n      let strength = this.state.matStr;\n      let form = this.state.matForm;\n      let amount = this.state.matAmount;\n      await this.props.contract.methods.addProductSpecs(this.state.proID, this.state.matName, this.state.matType, this.state.matStr, this.state.matForm, this.state.matAmount).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Added product specification successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      });\n      this.setState({\n        proID: \"\",\n        matName: \"\",\n        matType: \"\",\n        matStr: \"\",\n        matForm: \"\",\n        matAmount: \"\"\n      });\n      console.log(proID, name, type, strength, form, amount);\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        proID: this.proIdRef.current.value,\n        matName: this.matNameRef.current.value,\n        matType: this.matTypeRef.current.value,\n        matStr: this.matStrRef.current.value,\n        matForm: this.matFormRef.current.value,\n        matAmount: this.matAmountRef.current.value\n      });\n    };\n\n    this.proIdRef = React.createRef();\n    this.matNameRef = React.createRef();\n    this.matTypeRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.matFormRef = React.createRef();\n    this.matAmountRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Product ID: \"), React.createElement(\"input\", {\n      value: this.state.proID,\n      onChange: this.handleChange,\n      ref: this.proIdRef,\n      type: \"text\",\n      placeholder: \"e.g. pro101\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \" Material Name: \"), React.createElement(\"select\", {\n      name: \"mat-name\",\n      onChange: this.handleChange,\n      ref: this.matNameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"11\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"22\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"33\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"WHEAT GERM OIl\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \" Material Type: \"), React.createElement(\"select\", {\n      name: \"mat-type\",\n      onChange: this.handleChange,\n      ref: this.matTypeRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"ACTIVE\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"support\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"SUPPORT/SECONDARY\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"packaging\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"PACKAGING\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \" Material Amount: \"), React.createElement(\"input\", {\n      value: this.state.matAmount,\n      onChange: this.handleChange,\n      ref: this.matAmountRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \" Material Strength: \"), React.createElement(\"input\", {\n      value: this.state.matStr,\n      onChange: this.handleChange,\n      ref: this.matStrRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \" Material Form: \"), React.createElement(\"select\", {\n      name: \"material-form\",\n      onChange: this.handleChange,\n      ref: this.matFormRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"powder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"POWDER\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"liquid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"LIQUID\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"n/a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"N/A\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"ADD PRODUCT SPECIFICATION\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass CreateCostPlan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: \"\",\n      directMaterialStdCost: 0,\n      packagingMaterialStdCost: 0,\n      laborStdCost: 0,\n      manuIndirectStdCost: 0,\n      mrkStdCost: 0,\n      rsrhStdCost: 0,\n      totalStdCost: 0,\n      budget: 0\n    };\n\n    this.calculateTotalStd = async () => {};\n\n    this.OnSubmit = async e => {\n      e.preventDefault();\n      const pro = this.state.product;\n      const matStd = parseInt(this.state.directMaterialStdCost, 10);\n      const pkgMatStd = parseInt(this.staste.packagingMaterialStdCost, 10);\n      const labStd = parseInt(this.state.laborStdCost, 10);\n      const manuIndirectStdCost = parseInt(this.state.manuIndirectStdCost, 10);\n      const totBudget = parseInt(this.state.budget, 10);\n      const totalStandard = matStd + labStd + manuIndirectStdCost;\n      this.setState({\n        totalStdCost: totalStandard\n      });\n      console.log(pro, matStd, labStd, manuIndirectStdCost, totalStandard, totBudget, pkgMatStd);\n      await this.props.contract.methods.setStdCostPlan(pro, matStd, labStd, manuIndirectStdCost).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Standard Cost Plan Was Set Successfully\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      });\n      this.setState({\n        product: \"\",\n        directMaterialStdCost: \"\",\n        packagingMaterialStdCost: \"\",\n        laborStdCost: \"\",\n        manuIndirectStdCost: \"\",\n        mrkStdCost: \"\",\n        rsrhStdCost: \"\",\n        budget: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        product: this.proRef.current.value,\n        directMaterialStdCost: this.dirMatStdRef.current.value,\n        packagingMaterialStdCost: this.pkgMatStdRef.current.value,\n        laborStdCost: this.labStdRef.current.value,\n        manuIndirectStdCost: this.manIndStdRef.current.value,\n        mrkStdCost: this.mrkStdRef.current.value,\n        rsrhStdCost: this.rsrhStdRef.current.value,\n        budget: this.budgetRef.current.value\n      });\n    };\n\n    this.proRef = React.createRef();\n    this.dirMatStdRef = React.createRef();\n    this.pkgMatStdRef = React.createRef();\n    this.labStdRef = React.createRef();\n    this.manIndStdRef = React.createRef();\n    this.mrkStdRef = React.createRef();\n    this.rsrhStdRef = React.createRef();\n    this.budgetRef = React.createRef();\n    this.OnChange = this.onChange.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.OnSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Product ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.proRef,\n      value: this.state.product,\n      placeholder: \"e.g. pro101\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \" Set Standard Costs \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Raw Materials: \"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.dirMatStdRef,\n      value: this.state.directMaterialStdCost,\n      placeholder: \"e.g. 5000\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Packaging Materials: \"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.pkgMatStdRef,\n      value: this.state.packagingMatStdCost,\n      placeholder: \"e.g. 5000\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Direct Labor: \"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.labStdRef,\n      value: this.state.laborStdCost,\n      placeholder: \"e.g. 5000\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Manufacturing Overhead (Indirect Costs): \"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.manIndStdRef,\n      value: this.state.manuIndirectStdCost,\n      placeholder: \"e.g. 5000\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Marketing: \"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.mrkStdRef,\n      value: this.state.mrkStdCost,\n      placeholder: \"e.g. 5000\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"Research: \"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.rsrhStdRef,\n      value: this.state.rsrhStdCost,\n      placeholder: \"e.g. 5000\",\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \" Set Product Budget \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Product Budget:\"), React.createElement(\"input\", {\n      type: \"number\",\n      ref: this.budgetRef,\n      value: this.state.budget,\n      placeholder: \"e.g. 5000\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"standard-cost-total-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn\",\n      value: \"CREATE STANDARD COST PLAN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      className: \"notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass AddProduct extends Component {\n  render() {\n    let account = this.props.accounts;\n    let contract = this.props.contract;\n\n    if (!account || !contract) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, \"Loading ..... \");\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"side-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"mini-nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/add-product/createProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, \"+ CREATE PRODUCT\")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/add-product/addMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"+ ADD PRODUCT SPECS\")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/add-product/costPlan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"+ CREATE COST PLAN\")))), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/add-product/createProduct\",\n      exact: true,\n      render: props => React.createElement(CreateProduct, Object.assign({}, props, {\n        account: this.props.accounts,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-product/addMaterial\",\n      exact: true,\n      render: props => React.createElement(AddMaterial, Object.assign({}, props, {\n        account: this.props.accounts,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-product/costPlan\",\n      exact: true,\n      render: props => React.createElement(CreateCostPlan, Object.assign({}, props, {\n        account: this.props.accounts,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AddProduct;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/AddProduct.js"],"names":["React","Component","BrowserRouter","Route","NavLink","CreateProduct","constructor","props","state","productName","productId","productForm","msg","handleSubmit","e","preventDefault","name","id","form","contract","methods","addProduct","send","from","account","once","receipt","setState","setTimeout","console","log","handleChange","nameRef","current","value","idRef","formRef","createRef","bind","render","acc","cont","marginTop","AddMaterial","proID","matName","matType","matStr","matForm","matAmount","type","strength","amount","addProductSpecs","proIdRef","matNameRef","matTypeRef","matStrRef","matFormRef","matAmountRef","CreateCostPlan","product","directMaterialStdCost","packagingMaterialStdCost","laborStdCost","manuIndirectStdCost","mrkStdCost","rsrhStdCost","totalStdCost","budget","calculateTotalStd","OnSubmit","pro","matStd","parseInt","pkgMatStd","staste","labStd","totBudget","totalStandard","setStdCostPlan","onChange","proRef","dirMatStdRef","pkgMatStdRef","labStdRef","manIndStdRef","mrkStdRef","rsrhStdRef","budgetRef","OnChange","packagingMatStdCost","AddProduct","accounts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass CreateProduct extends Component {\n  state = {\n    productName: \"\",\n    productId: \"\",\n    productForm: \"\",\n    msg: \" \",\n  };\n\n  constructor(props) {\n    super(props);\n    this.nameRef = React.createRef();\n    this.idRef = React.createRef();\n    this.formRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // sendData() {  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let name = this.state.productName;\n    let id = this.state.productId;\n    let form = this.state.productForm;\n    \n\n    await this.props.contract.methods\n      .addProduct(name, id, form)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Product was created successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 2000);\n      });\n    this.setState({\n      productName: \"\",\n      productId: \"\",\n      productForm: \"\",\n    });\n    // await this.props.contract.methods.addProduct(id,name,form).send({from: this.props.accounts[0]});\n    console.log(name, id, form);\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      productName: this.nameRef.current.value,\n      productId: this.idRef.current.value,\n      productForm: this.formRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"newform-container\">\n        <label> Product Name: </label>\n        <input\n          onChange={this.handleChange}\n          ref={this.nameRef}\n          type=\"text\"\n          placeholder=\"e.g. MyProduct\"\n          value={this.state.productName}\n        />\n        <label> Product ID: </label>\n        <input\n          onChange={this.handleChange}\n          ref={this.idRef}\n          type=\"text\"\n          placeholder=\"e.g. pro101\"\n          value={this.state.productId}\n        />\n        <label> Product Form: </label>\n        <select ref={this.formRef} onChange={this.handleChange}>\n          <option id=\"1\" value=\"tablets\">\n            TABLETS\n          </option>\n          <option id=\"2\" value=\"capsules\">\n            CAPSULES\n          </option>\n          <option id=\"3\" value=\"tablets\">\n            OTHER\n          </option>\n        </select>\n\n        <div>\n          <input className=\"btn\" type=\"submit\" value=\"CREATE PRODUCT\" />\n        </div>\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text \"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass AddMaterial extends Component {\n  state = {\n    proID: \"\",\n    matName: \"\",\n    matType: \"\",\n    matStr: 0,\n    matForm: \"\",\n    matAmount: 0,\n    msg: \" \",\n  };\n  constructor(props) {\n    super(props);\n    this.proIdRef = React.createRef();\n    this.matNameRef = React.createRef();\n    this.matTypeRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.matFormRef = React.createRef();\n    this.matAmountRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let proID = this.state.proID;\n    let name = this.state.matName;\n    let type = this.state.matType;\n    let strength = this.state.matStr;\n    let form = this.state.matForm;\n    let amount = this.state.matAmount;\n    await this.props.contract.methods\n\n      .addProductSpecs(\n        this.state.proID,\n        this.state.matName,\n        this.state.matType,\n        this.state.matStr,\n        this.state.matForm,\n        this.state.matAmount\n      )\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Added product specification successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 2000);\n      });\n    this.setState({\n      proID: \"\",\n      matName: \"\",\n      matType: \"\",\n      matStr: \"\",\n      matForm: \"\",\n      matAmount: \"\",\n    });\n    console.log(proID, name, type, strength, form, amount);\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      proID: this.proIdRef.current.value,\n      matName: this.matNameRef.current.value,\n      matType: this.matTypeRef.current.value,\n      matStr: this.matStrRef.current.value,\n      matForm: this.matFormRef.current.value,\n      matAmount: this.matAmountRef.current.value,\n    });\n  };\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"newform-container\">\n        <label>Product ID: </label>\n        <input\n          value={this.state.proID}\n          onChange={this.handleChange}\n          ref={this.proIdRef}\n          type=\"text\"\n          placeholder=\"e.g. pro101\"\n          autoComplete=\"off\"\n        />\n        <label> Material Name: </label>\n        <select\n          name=\"mat-name\"\n          onChange={this.handleChange}\n          ref={this.matNameRef}\n        >\n          <option id=\"11\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"22\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"33\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIl\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n\n        <label> Material Type: </label>\n        <select\n          name=\"mat-type\"\n          onChange={this.handleChange}\n          ref={this.matTypeRef}\n        >\n          <option id=\"1\" value=\"active\">\n            ACTIVE\n          </option>\n          <option id=\"2\" value=\"support\">\n            SUPPORT/SECONDARY\n          </option>\n          <option id=\"3\" value=\"packaging\">\n            PACKAGING\n          </option>\n        </select>\n        <label> Material Amount: </label>\n        <input\n          value={this.state.matAmount}\n          onChange={this.handleChange}\n          ref={this.matAmountRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.handleChange}\n          ref={this.matStrRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n        <label> Material Form: </label>\n        <select\n          name=\"material-form\"\n          onChange={this.handleChange}\n          ref={this.matFormRef}\n        >\n          <option id=\"1\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"2\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"3\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n        <div>\n          <input className=\"btn\" type=\"submit\" value=\"ADD PRODUCT SPECIFICATION\" />\n        </div>\n\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text\"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass CreateCostPlan extends Component {\n  state = {\n    product: \"\",\n    directMaterialStdCost: 0,\n    packagingMaterialStdCost: 0,\n    laborStdCost: 0,\n    manuIndirectStdCost: 0,\n    mrkStdCost: 0,\n    rsrhStdCost: 0,\n    totalStdCost: 0,\n    budget: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    this.proRef = React.createRef();\n    this.dirMatStdRef = React.createRef();\n    this.pkgMatStdRef = React.createRef();\n    this.labStdRef = React.createRef();\n    this.manIndStdRef = React.createRef();\n    this.mrkStdRef = React.createRef();\n    this.rsrhStdRef = React.createRef();\n    this.budgetRef = React.createRef();\n    this.OnChange = this.onChange.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n  }\n\n  calculateTotalStd = async () => {};\n\n  OnSubmit = async (e) => {\n    e.preventDefault();\n\n    const pro = this.state.product;\n    const matStd = parseInt(this.state.directMaterialStdCost, 10);\n    const pkgMatStd = parseInt(this.staste.packagingMaterialStdCost,10)\n    const labStd = parseInt(this.state.laborStdCost, 10);\n    const manuIndirectStdCost = parseInt(this.state.manuIndirectStdCost, 10);\n    const totBudget = parseInt(this.state.budget,10);\n    \n    const totalStandard = matStd + labStd + manuIndirectStdCost;\n    \n    this.setState({ totalStdCost: totalStandard });\n\n    console.log(pro, matStd, labStd, manuIndirectStdCost, totalStandard, totBudget, pkgMatStd);\n    await this.props.contract.methods.setStdCostPlan(pro,matStd,labStd, manuIndirectStdCost)\n    .send({from: this.props.account[0]}).once(\"receipt\", (receipt) => {\n      this.setState({ msg: \"Standard Cost Plan Was Set Successfully\" });\n      setTimeout(() => {\n        this.setState({ msg: \" \" });\n      }, 2000);\n    });\n\n    this.setState({\n      product: \"\",\n      directMaterialStdCost: \"\",\n      packagingMaterialStdCost: \"\",\n      laborStdCost: \"\",\n      manuIndirectStdCost: \"\",\n      mrkStdCost: \"\",\n      rsrhStdCost: \"\",\n      budget: \"\"\n    });\n\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      product: this.proRef.current.value,\n      directMaterialStdCost: this.dirMatStdRef.current.value,\n      packagingMaterialStdCost: this.pkgMatStdRef.current.value,\n      laborStdCost: this.labStdRef.current.value,\n      manuIndirectStdCost: this.manIndStdRef.current.value,\n      mrkStdCost: this.mrkStdRef.current.value,\n      rsrhStdCost: this.rsrhStdRef.current.value,\n      budget: this.budgetRef.current.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.OnSubmit}  className=\"newform-container\">\n        <label>Product ID:</label>\n        <input\n          type=\"text\"\n          ref={this.proRef}\n          value={this.state.product}\n          placeholder=\"e.g. pro101\"\n          onChange={this.OnChange}\n        />\n\n        <h4> Set Standard Costs </h4>\n        <div>\n        <div>\n        <label>Raw Materials: </label>\n        <input\n          type=\"number\"\n          ref={this.dirMatStdRef}\n          value={this.state.directMaterialStdCost}\n          placeholder=\"e.g. 5000\"\n          onChange={this.OnChange}\n        />\n\n        <label>Packaging Materials: </label>\n        <input\n          type=\"number\"\n          ref={this.pkgMatStdRef}\n          value={this.state.packagingMatStdCost}\n          placeholder=\"e.g. 5000\"\n          onChange={this.OnChange}\n        />\n\n        <label>Direct Labor: </label>\n        <input\n          type=\"number\"\n          ref={this.labStdRef}\n          value={this.state.laborStdCost}\n          placeholder=\"e.g. 5000\"\n          onChange={this.OnChange}\n        />\n        </div>\n\n        <div>\n        <label>Manufacturing Overhead (Indirect Costs): </label>\n        <input\n          type=\"number\"\n          ref={this.manIndStdRef}\n          value={this.state.manuIndirectStdCost}\n          placeholder=\"e.g. 5000\"\n          onChange={this.OnChange}\n        />\n\n        <label>Marketing: </label>\n        <input\n          type=\"number\"\n          ref={this.mrkStdRef}\n          value={this.state.mrkStdCost}\n          placeholder=\"e.g. 5000\"\n          onChange={this.OnChange}\n        />\n\n        <label>Research: </label>\n        <input\n          type=\"number\"\n          ref={this.rsrhStdRef}\n          value={this.state.rsrhStdCost}\n          placeholder=\"e.g. 5000\"\n          onChange={this.OnChange}\n        />\n        </div>\n        </div>\n\n\n        <h4> Set Product Budget </h4>\n\n        <label>Product Budget:</label>\n        <input\n          type=\"number\"\n          ref={this.budgetRef}\n          value={this.state.budget}\n          placeholder=\"e.g. 5000\"\n          onChange={this.onChange}\n        />\n\n        <div className=\"standard-cost-total-container\"></div>\n\n        <input\n          type=\"submit\"\n          className=\"btn\"\n          value=\"CREATE STANDARD COST PLAN\"\n        />\n\n\n        <div style={{marginTop:'20px'}} className = \"notify-text\">\n          {this.state.msg}\n\n        </div>\n      </form>\n    );\n  }\n}\n\nclass AddProduct extends Component {\n  render() {\n    let account = this.props.accounts;\n    let contract = this.props.contract;\n    if (!account || !contract) {\n      return <div>Loading ..... </div>;\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"product-form-container\">\n          <div className=\"side-nav\">\n            <ul className=\"mini-nav-list\">\n              <li className=\"link-item\">\n                <NavLink to=\"/add-product/createProduct\">\n                  + CREATE PRODUCT\n                </NavLink>\n              </li>\n              <li className=\"link-item\">\n                \n                <NavLink to=\"/add-product/addMaterial\">\n                  + ADD PRODUCT SPECS\n                </NavLink>\n              </li>\n              <li className=\"link-item\">\n                \n                <NavLink to=\"/add-product/costPlan\">+ CREATE COST PLAN</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-content\">\n            <Route\n              path=\"/add-product/createProduct\"\n              exact\n              render={(props) => (\n                <CreateProduct\n                  {...props}\n                  account={this.props.accounts}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/add-product/addMaterial\"\n              exact\n              render={(props) => (\n                <AddMaterial\n                  {...props}\n                  account={this.props.accounts}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/add-product/costPlan\"\n              exact\n              render={(props) => (\n                <CreateCostPlan\n                  {...props}\n                  account={this.props.accounts}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}