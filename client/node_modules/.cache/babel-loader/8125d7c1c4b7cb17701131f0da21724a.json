{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from 'react';\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: ''\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10);\n      console.log(id, typeof id); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      this.setState({\n        response\n      });\n      this.setState({\n        requestID: ''\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: 'pointer'\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"response-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.response));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","Track","constructor","props","state","logs","componentDidMount","requestID","handleSubmit","e","preventDefault","id","parseInt","console","log","response","contract","methods","getTrackLogs","call","setState","handleChange","requestIdRef","current","value","createRef","bind","render","acc","account","cont","cursor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAW1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SATnBC,KASmB,GATX;AAAEC,MAAAA,IAAI,EAAE;AAAR,KASW;;AAAA,SAPnBC,iBAOmB,GAPC,YAAW,CAI9B,CAGkB;;AAAA,SADnBF,KACmB,GADX;AAACG,MAAAA,SAAS,EAAG;AAAb,KACW;;AAAA,SAOnBC,YAPmB,GAOJ,MAAOC,CAAP,IAAa;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,EAAE,GAAGC,QAAQ,CAAC,KAAKR,KAAL,CAAWG,SAAZ,EAAsB,EAAtB,CAAjB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAe,OAAOA,EAAtB,EAHoB,CAIpB;;AACC,UAAII,QAAQ,GAAG,MAAM,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,OAApB,CAA4BC,YAA5B,CAAyCP,EAAzC,EAA6CQ,IAA7C,EAArB;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACD,WAAKK,QAAL,CAAc;AACVb,QAAAA,SAAS,EAAE;AADD,OAAd;AAGP,KAjBkB;;AAAA,SAmBnBc,YAnBmB,GAmBJ,MAAOZ,CAAP,IAAa;AACxB,WAAKW,QAAL,CAAc;AACVb,QAAAA,SAAS,EAAE,KAAKe,YAAL,CAAkBC,OAAlB,CAA0BC;AAD3B,OAAd;AAGH,KAvBkB;;AAEf,SAAKF,YAAL,GAAoBvB,KAAK,CAAC0B,SAAN,EAApB;AACA,SAAKJ,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKlB,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAoBDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAG,KAAKzB,KAAL,CAAW0B,OAArB;AACA,QAAIC,IAAI,GAAG,KAAK3B,KAAL,CAAWa,QAAtB;;AAEA,QAAI,CAACY,GAAD,IAAQ,CAACE,IAAb,EAAmB;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AACD,WACI;AAAM,MAAA,QAAQ,EAAI,KAAKtB,YAAvB;AAAqC,MAAA,SAAS,EAAC,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,WAAW,EAAC,SADZ;AAEA,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,SAFlB;AAGA,MAAA,GAAG,EAAG,KAAKe,YAHX;AAIA,MAAA,QAAQ,EAAG,KAAKD,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAO,MAAA,KAAK,EAAE;AAACU,QAAAA,MAAM,EAAE;AAAT,OAAd;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,SAAS,EAAC,KAA3D;AAAiE,MAAA,KAAK,EAAC,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAK3B,KAAL,CAAWW,QADf,CAZJ,CADJ;AAmBH;;AA9DyB;;AAoE9B,eAAed,KAAf","sourcesContent":["import React, {Component} from 'react' \n\nclass Track extends Component {\n\n    state = { logs: [] }\n    \n    componentDidMount = async() => {\n\n        \n\n    }\n        \n    state = {requestID : ''}\n    constructor(props) {\n        super(props);\n        this.requestIdRef = React.createRef();\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = async (e) => {\n            e.preventDefault();\n            let id = parseInt(this.state.requestID,10);\n            console.log(id,typeof(id))\n            // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n             let response = await this.props.contract.methods.getTrackLogs(id).call()\n             this.setState({response});\n            this.setState({\n                requestID: ''\n            })\n    }\n\n    handleChange = async (e) => {\n        this.setState({\n            requestID: this.requestIdRef.current.value\n        })\n    }\n\n    render() {\n        let acc = this.props.account;\n        let cont = this.props.contract;\n\n        if (!acc || !cont) {\n            return <div> Loading..... </div>\n        }\n        return(\n            <form onSubmit = {this.handleSubmit} className=\"form-container\">\n                <div className=\"form-row\">\n                    <h4>Track Requested Shipments </h4>\n                    <input type=\"text\" \n                    placeholder=\"e.g 101\"\n                    value={this.state.requestID}\n                    ref= {this.requestIdRef}\n                    onChange ={this.handleChange}\n                    />\n                    <input style={{cursor: 'pointer'}} type=\"submit\" className=\"btn\" value=\"VIEW STATUS\"/>\n                </div>\n\n                <div className=\"response-text\">\n                   {this.state.response}\n                </div>\n               \n            </form>\n        );\n    }\n\n}\n\n\n\nexport default Track"]},"metadata":{},"sourceType":"module"}