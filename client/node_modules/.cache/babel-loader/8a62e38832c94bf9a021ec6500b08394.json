{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/App.js\";\nimport React, { Component } from \"react\"; // import getWeb3 from \"./getWeb3\";\n\nimport Header from \"./components/Header\";\nimport ProductForm from \"./components/ProductForm\";\nimport Inventory from \"./components/Inventory\"; // import SimpleStorageContract from \"./contracts/SimpleStorage.json\";\n// import SandboxContract from './contracts/Sandbox.json';\n\nimport \"./App.css\";\nimport MaterialList from \"./components/MaterialsList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n\n    this.componentDidMount = async () => {\n      try {// Get network provider and web3 instance.\n        // const web3 = await getWeb3();\n        // // Use web3 to get the user's accounts.\n        // const accounts = await web3.eth.getAccounts();\n        // const balance = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether');\n        // Get the contract instance.\n        //  const networkId = await web3.eth.net.getId();\n        //  const deployedNetwork = SandboxContract.networks[networkId];\n        //  const instance = new web3.eth.Contract(\n        //    SandboxContract.abi,\n        //    deployedNetwork && deployedNetwork.address,\n        //  );\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        // this.setState({ web3, accounts, contract: instance }, this.runExample);\n        // this.setState({web3, accounts, balance,});\n      } catch (error) {// Catch any errors for any of the above operations.\n        // alert(\n        //   `Failed to load web3, accounts, or contract. Check console for details.`,\n        // );\n        // console.error(error);\n      }\n    };\n  }\n\n  // runExample = async () => {\n  //   const {contract } = this.state;\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   const supplier =  await contract.methods.getSupplier('0xf333028b8Fc7a030F1186Db50BceF0C0607c2CF2').call();\n  //   // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n  //   // Update state with the result.\n  //   this.setState({ supplier });\n  // };\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Header, {\n      accounts: this.state.accounts,\n      balance: this.state.balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ProductForm, {\n      accounts: this.state.accounts,\n      contract: this.state.contract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(MaterialList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/App.js"],"names":["React","Component","Header","ProductForm","Inventory","MaterialList","App","state","web3","accounts","contract","componentDidMount","error","render","balance"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAG1BM,KAH0B,GAGlB;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAeC,MAAAA,QAAQ,EAAE,IAAzB;AAA+BC,MAAAA,QAAQ,EAAE;AAAzC,KAHkB;;AAAA,SAK1BC,iBAL0B,GAKN,YAAY;AAE9B,UAAI,CACF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,OAnBD,CAmBE,OAAOC,KAAP,EAAc,CACd;AACA;AACA;AACA;AACA;AACD;AAEF,KAlCyB;AAAA;;AAoC1B;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACC,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAG,KAAKN,KAAL,CAAWE,QAA9B;AACA,MAAA,OAAO,EAAI,KAAKF,KAAL,CAAWO,OADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAI,KAAKP,KAAL,CAAWE,QAApC;AAA8C,MAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWG,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADD;AAmBF;;AAzEyB;;AA4E5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\n// import getWeb3 from \"./getWeb3\";\nimport Header from \"./components/Header\"\nimport ProductForm from \"./components/ProductForm\"\nimport Inventory from \"./components/Inventory\"\n// import SimpleStorageContract from \"./contracts/SimpleStorage.json\";\n// import SandboxContract from './contracts/Sandbox.json';\nimport \"./App.css\";\nimport MaterialList from \"./components/MaterialsList\";\n\n\nclass App extends Component {\n\n  // state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  state = { web3: null , accounts: null, contract: null}\n\n  componentDidMount = async () => {\n\n    try {\n      // Get network provider and web3 instance.\n      // const web3 = await getWeb3();\n\n      // // Use web3 to get the user's accounts.\n      // const accounts = await web3.eth.getAccounts();\n      // const balance = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether');\n      // Get the contract instance.\n      //  const networkId = await web3.eth.net.getId();\n      //  const deployedNetwork = SandboxContract.networks[networkId];\n      //  const instance = new web3.eth.Contract(\n      //    SandboxContract.abi,\n      //    deployedNetwork && deployedNetwork.address,\n      //  );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      // this.setState({ web3, accounts, contract: instance }, this.runExample);\n      // this.setState({web3, accounts, balance,});\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      // alert(\n      //   `Failed to load web3, accounts, or contract. Check console for details.`,\n      // );\n      // console.error(error);\n    }\n\n  };\n\n  // runExample = async () => {\n  //   const {contract } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   const supplier =  await contract.methods.getSupplier('0xf333028b8Fc7a030F1186Db50BceF0C0607c2CF2').call();\n\n  //   // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n\n  //   // Update state with the result.\n  //   this.setState({ supplier });\n  // };\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n     return (\n      <div className=\"App\">\n        <Header accounts= {this.state.accounts} \n        balance = {this.state.balance} />\n        <ProductForm accounts = {this.state.accounts} contract = {this.state.contract} />\n        <MaterialList/>\n        {/* <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <p>\n          Try changing the value stored on <strong>line 40</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}