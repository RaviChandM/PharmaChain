{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/SupplyForm.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proName: \"\",\n      tableVisibility: false\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n\n      this.btnRef.current.setAttribute(\"disabled\", \"disabled\");\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n      const specsRow = specs.map((spec, index) => {\n        let name = spec.materialName;\n        let amount = spec.materialAmount;\n        let form = spec.materialForm;\n        let type = spec.materialType;\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", name, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \" \", type, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, amount, \" mg \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, form, \" \"));\n      });\n\n      if (specs.length === 0) {\n        this.setState({\n          msg: \"Didn't find any specs for the given product ID, please try again!\".toUpperCase()\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \" \"\n        });\n      }, 3000);\n      this.setState({\n        proName: \"\",\n        specsRow\n      });\n      this.setState({\n        tableVisibility: true\n      });\n      this.btnRef.current.removeAttribute(\"disabled\");\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        proName: this.productRef.current.value\n      });\n    };\n\n    this.productRef = React.createRef();\n    this.btnRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let table;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.tableVisibility ? table = \"show\" : table = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Enter Product ID \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.productRef,\n      placeholder: \"e.g. pro101\",\n      value: this.state.proName,\n      onChange: this.onChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"VIEW PRODUCT SPECS\",\n      ref: this.btnRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"\".concat(table, \" product-data-container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"TYPE \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"AMOUNT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"FORM\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.specsRow))));\n  }\n\n}\n\nclass RequestMaterials extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      materialName: \"\",\n      supplier: \"\",\n      amount: 0,\n      form: \"\",\n      strength: 0,\n      resultCount: 0,\n      msg: \" \",\n      amountToggled: false\n    };\n\n    this.addRequest = async e => {\n      e.preventDefault();\n      const amount = this.state.amount;\n      const id = this.state.matId;\n      console.log(id, amount);\n      const info = await this.props.contract.methods.getMaterialById(id).call();\n      const toAddr = info.supplier;\n      console.log(info, toAddr);\n      await this.props.contract.methods.createRequest(toAddr, id, amount).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Request was sent successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 3000);\n      });\n      const request = await this.props.contract.methods.getMyRequests().call();\n      const requestNo = request[request.length - 1].requestId;\n      this.setState({\n        requestInfo: \"Your Tracking Number: \" + requestNo\n      });\n      setTimeout(() => {\n        this.setState({\n          requestInfo: \" \"\n        });\n      }, 15000);\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const material = this.state.materialName; // const proName = this.state.proName;\n      // const supplierId = this.state.supplier;\n      // const matform = this.state.form;\n      // const matamount = this.state.amount;\n      // const matstr = this.state.strength;\n\n      console.log(material);\n      const query = await this.props.contract.methods.getMaterials().call();\n      console.log(query);\n      const queryFilter = query.filter(item => {\n        return item.materialName.includes(material);\n      });\n      console.log(queryFilter);\n      const result = queryFilter.map((item, index) => {\n        let supplier = item.supplier;\n        let id = item.materialID;\n        let name = item.materialName;\n        let cost = parseInt(item.unitCost, 10).toLocaleString('en-US', {\n          style: 'currency',\n          currency: 'USD'\n        });\n        let form = item.materialForm;\n        let availableAmount = item.createdAmount;\n        console.log(supplier, id, name, cost);\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"query-result-list\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"SUPPLIER: \"), \" \", supplier), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"ID: \"), \" \", id), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \"NAME: \"), \" \", name), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \"FORM: \"), \" \", form), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"UNIT COST: \"), \" \", cost), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"IN STOCK: \"), \" \", availableAmount, \" KG\")), React.createElement(\"hr\", {\n          className: \"custom-hr-full\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }));\n      });\n      this.setState({\n        resultCount: queryFilter.length,\n        result,\n        amountToggled: true\n      }); // if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n      //   await this.props.contract.methods\n      //     .createRequest(\n      //       supplierId,\n      //       material,\n      //       matform,\n      //       matstr,\n      //       matamount\n      //     )\n      //     .send({ from: this.props.account[0] })\n      //     .once(\"receipt\", (receipt) => {\n      //       this.setState({ msg: \"Request was sent successfully!\"});\n      //       setTimeout(() => {\n      //         this.setState({ msg: \" \" });\n      //       }, 2000);\n      //     });\n      // const request = await this.props.contract.methods.getMyRequests().call();\n      // const requestNo = request[request.length -1].requestId;\n      // this.setState({ requestInfo: \"Your Tracking Number: \" + requestNo});\n      //   setTimeout(() => {\n      //     this.setState({ requestInfo: \" \" });\n      //   }, 15000);\n      //   // if (request.length === 0) {\n      //   //   this.setState({\n      //   //     materials: materials.push(\n      //   //       \"This supplier has no recently created materials!\"\n      //   //     ),\n      //   //   });\n      //   // }\n      //   this.setState({\n      //     matName: \"\",\n      //     proName: \"\",\n      //     supplier: \"\",\n      //     form: \"\",\n      //     amount: \"\",\n      //     strength: \"\",\n      //   });\n      //   // this.setState({ requests: this.state.requests + 1 });\n      // } else {\n      //   this.setState({ msg: \"Please Try Again!\" });\n      //   setTimeout(() => {\n      //     this.setState({ msg: \" \" });\n      //   }, 2000);\n      // }\n      // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      //  const material = this.state.materialName;\n      // // const proName = this.state.proName;\n      //  const supplierId = this.state.supplier;\n      //  const matform = this.state.form;\n      //  const matamount =this.state.amount;\n      // this.setState({ supplier: \"\", materialName: \"\", amount: null, form: \"\" });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        materialName: this.materialRef.current.value,\n        matId: this.idRef.current.value,\n        // supplier: this.supplierRef.current.value,\n        amount: this.amountRef.current.value // form: this.formRef.current.value,\n        // strength: this.matStrRef.current.value,\n\n      });\n    };\n\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.formRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.idRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.addRequest = this.addRequest.bind(this);\n  }\n\n  render() {\n    let toggled;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n\n    if (!acc || !cont || !web) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.amountToggled ? toggled = \"show\" : toggled = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \" Material Name: \"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.onChange,\n      ref: this.materialRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"WHEAT GERM OIL\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"div\", {\n      className: \"\".concat(toggled, \" amount-pop-up\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Material ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.matId,\n      onChange: this.onChange,\n      ref: this.idRef,\n      placeholder: \"e.g. mat101\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Requested Amount: \"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"material-amount\",\n      value: this.state.amount,\n      ref: this.amountRef,\n      placeholder: \"e.g. 1000 KGs\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"SEARCH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"\".concat(toggled, \" btn\"),\n      onClick: this.addRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"REQUEST\")), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, this.state.msg), \" \"), React.createElement(\"div\", {\n      style: {\n        color: '#222',\n        fontSize: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, this.state.requestInfo))), React.createElement(\"div\", {\n      className: \"\".concat(toggled, \" results-counter\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \" Found \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, this.state.resultCount, \" \"), \" results for \\\"\", this.state.materialName, \"\\\". \")), React.createElement(\"div\", {\n      className: \"\".concat(toggled, \" query-result-container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, this.state.result));\n  }\n\n}\n\nclass CreateMaterial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matId: \"\",\n      matName: \"\",\n      matForm: \"\",\n      matStr: 0,\n      matAmount: 0,\n      matUnitCost: 0\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const id = this.state.matId;\n      const name = this.state.matName;\n      const form = this.state.matForm;\n      const strength = this.state.matStr;\n      const amount = this.state.matAmount;\n      const cost = this.state.matUnitCost;\n      await this.props.contract.methods.createMaterial(id, name, strength, form, amount, cost).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Materials Created Successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      });\n      this.setState({\n        matId: \"\",\n        matName: \"\",\n        matForm: \"\",\n        matStr: \"\",\n        matAmount: \"\",\n        matUnitCost: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        matId: this.idRef.current.value,\n        matName: this.matRef.current.value,\n        matForm: this.formRef.current.value,\n        matStr: this.strRef.current.value,\n        matAmount: this.amountRef.current.value,\n        matUnitCost: this.unitCostRef.current.value\n      });\n    };\n\n    this.idRef = React.createRef();\n    this.matRef = React.createRef();\n    this.formRef = React.createRef();\n    this.strRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.unitCostRef = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, \"Material ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.matId,\n      onChange: this.onChange,\n      ref: this.idRef,\n      placeholder: \"e.g. mat101\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \"Material Name:\"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.OnChange,\n      ref: this.matRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"11\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"22\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"33\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"WHEAT GERM OIl\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, \" Material Form: \"), React.createElement(\"select\", {\n      name: \"material-form\",\n      onChange: this.onChange,\n      ref: this.formRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"powder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, \"POWDER\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"liquid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"LIQUID\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"n/a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, \"N/A\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, \" Material Strength: \"), React.createElement(\"input\", {\n      value: this.state.matStr,\n      onChange: this.onChange,\n      ref: this.strRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, \" Material Amount: \"), React.createElement(\"input\", {\n      value: this.state.matAmount,\n      onChange: this.onChange,\n      ref: this.amountRef,\n      type: \"number\",\n      placeholder: \"e.g. 1000\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, \" Material Unit Cost: \"), React.createElement(\"input\", {\n      value: this.state.matUnitCost,\n      onChange: this.onChange,\n      ref: this.unitCostRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"CREATE MATERIAL\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass ApproveRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: '',\n      requestId: ''\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const requestNo = this.state.requestId;\n      console.log(requestNo); //todo transact here\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        requestId: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, \" Approve Request\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.requestId,\n      ref: this.requestIdRef,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SendShipment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: '',\n      requestId: ''\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const requestNo = this.state.requestId;\n      console.log(requestNo); //todo transact here\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        requestId: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719\n      },\n      __self: this\n    }, \" Send Shipment\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.requestId,\n      ref: this.requestIdRef,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ManageSupply extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      class: \"form-collection newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    }, React.createElement(ApproveRequest, {\n      account: this.props.account,\n      contract: this.props.contract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"custom-hr-half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }), React.createElement(SendShipment, {\n      account: this.props.account,\n      contract: this.props.contract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"custom-hr-half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SupplyForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {// if (!this.props.contract || !this.props.accounts) {\n      //     return <h2> PLEASE WAIT... </h2>;\n      // }\n    };\n  }\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n  // viewSpecs = async () => {\n  //   const specs = await this.props.contract.methods\n  //     .getProductSpecs(this.state.proName)\n  //     .call();\n  //   if (specs.length === 0) {\n  //     this.setState({\n  //       specs: specs.push(\n  //         \"Didn't find any specs for the given product ID, please try again!\"\n  //       ),\n  //     });\n  //   }\n  //   console.log(specs);\n  //   this.setState({ specs });\n  // };\n  // viewMaterialBySupplierAddress = async () => {\n  //   // console.log()\n  //   if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n  //     const materials = await this.props.contract.methods\n  //       .getMaterialBySupplier(`${this.state.supplier}`)\n  //       .call();\n  //     if (materials.length === 0) {\n  //       this.setState({\n  //         materials: materials.push(\n  //           \"This supplier has no materials created currently!\"\n  //         ),\n  //       });\n  //     }\n  //     this.setState({ materials });\n  //   }\n  // };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"side-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"mini-nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/querySpecs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, \"+ QUERY PRODUCT SPECS\")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/requestMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850\n      },\n      __self: this\n    }, \"+ REQUEST MATERIAL\")), React.createElement(\"label\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }, \" SUPPLIER \")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/supplier/createMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, \"+ CREATE MATERIAL\")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/supplyPortal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863\n      },\n      __self: this\n    }, \"+ MANAGE SUPPLY\")))), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/supply/querySpecs\",\n      exact: true,\n      render: props => React.createElement(QueryProductSpecs, Object.assign({}, props, {\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/requestMaterial\",\n      exact: true,\n      render: props => React.createElement(RequestMaterials, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/supplier/createMaterial\",\n      exact: true,\n      render: props => React.createElement(CreateMaterial, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/supplyPortal\",\n      exact: true,\n      render: props => React.createElement(ManageSupply, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SupplyForm;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/SupplyForm.js"],"names":["React","Component","BrowserRouter","Route","NavLink","QueryProductSpecs","constructor","props","state","proName","tableVisibility","onSubmit","e","preventDefault","btnRef","current","setAttribute","specs","contract","methods","getProductSpecs","call","specsRow","map","spec","index","name","materialName","amount","materialAmount","form","materialForm","type","materialType","length","setState","msg","toUpperCase","setTimeout","removeAttribute","onChange","productRef","value","createRef","bind","render","table","acc","account","cont","marginTop","margin","RequestMaterials","supplier","strength","resultCount","amountToggled","addRequest","id","matId","console","log","info","getMaterialById","toAddr","createRequest","send","from","once","receipt","request","getMyRequests","requestNo","requestId","requestInfo","material","query","getMaterials","queryFilter","filter","item","includes","result","materialID","cost","parseInt","unitCost","toLocaleString","style","currency","availableAmount","createdAmount","materialRef","idRef","amountRef","supplierRef","formRef","matStrRef","toggled","web","Web3","cursor","color","fontSize","textAlign","CreateMaterial","matName","matForm","matStr","matAmount","matUnitCost","createMaterial","matRef","strRef","unitCostRef","OnChange","ApproveRequest","requestIdRef","onClick","SendShipment","ManageSupply","SupplyForm","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  state = { proName: \"\", tableVisibility: false };\n\n  constructor(props) {\n    super(props);\n    this.productRef = React.createRef();\n    this.btnRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    this.btnRef.current.setAttribute(\"disabled\", \"disabled\");\n    const specs = await this.props.contract.methods\n      .getProductSpecs(this.state.proName)\n      .call();\n\n    const specsRow = specs.map((spec, index) => {\n      let name = spec.materialName;\n      let amount = spec.materialAmount;\n      let form = spec.materialForm;\n      let type = spec.materialType;\n      return (\n        <tr key={index}>\n          <td> {name} </td>\n          <td> {type} </td>\n          <td>{amount} mg </td>\n          <td>{form} </td>\n        </tr>\n      );\n    });\n\n    if (specs.length === 0) {\n      this.setState({\n        msg: \"Didn't find any specs for the given product ID, please try again!\".toUpperCase(),\n      });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \" \" });\n    }, 3000);\n\n    this.setState({ proName: \"\", specsRow });\n    this.setState({ tableVisibility: true });\n\n    this.btnRef.current.removeAttribute(\"disabled\");\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      proName: this.productRef.current.value,\n    });\n  };\n\n  render() {\n    let table;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    this.state.tableVisibility ? (table = \"show\") : (table = \"hide\");\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label> Enter Product ID </label>\n\n        <input\n          type=\"text\"\n          ref={this.productRef}\n          placeholder=\"e.g. pro101\"\n          value={this.state.proName}\n          onChange={this.onChange}\n          required = \"required\"\n        />\n\n        <input\n          className=\"btn\"\n          type=\"submit\"\n          value=\"VIEW PRODUCT SPECS\"\n          ref={this.btnRef}\n        />\n\n        <div\n          style={{ marginTop: \"20px\" }}\n          className={`${table} product-data-container`}\n        >\n          <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n            {this.state.msg}\n          </div>\n          <table border=\"1\">\n            <thead>\n              <tr>\n                <th>NAME</th>\n                <th>TYPE </th>\n                <th>AMOUNT</th>\n                <th>FORM</th>\n              </tr>\n            </thead>\n            <tbody>{this.state.specsRow}</tbody>\n          </table>\n        </div>\n      </form>\n    );\n  }\n}\n\nclass RequestMaterials extends Component {\n  state = {\n    materialName: \"\",\n    supplier: \"\",\n    amount: 0,\n    form: \"\",\n    strength: 0,\n    resultCount: 0,\n    msg: \" \",\n    amountToggled: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.formRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.idRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.addRequest = this.addRequest.bind(this);\n  }\n\n  addRequest = async(e) => {\n    e.preventDefault()\n    const amount = this.state.amount;\n    const id = this.state.matId;\n    console.log(id,amount);\n    const info = await this.props.contract.methods.getMaterialById(id).call();\n    const toAddr = info.supplier;\n    console.log(info,toAddr)\n    await this.props.contract.methods.createRequest(toAddr,id,amount)\n    .send({from: this.props.account[0]})\n    .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Request was sent successfully!\"});\n      setTimeout(() => {\n        this.setState({ msg: \" \" });\n      }, 3000);\n    });\n    const request = await this.props.contract.methods.getMyRequests().call();\n    const requestNo = request[request.length -1].requestId;\n\n    this.setState({ requestInfo: \"Your Tracking Number: \" + requestNo});\n      setTimeout(() => {\n        this.setState({ requestInfo: \" \" });\n      }, 15000);\n  }\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const material = this.state.materialName;\n    // const proName = this.state.proName;\n    // const supplierId = this.state.supplier;\n    // const matform = this.state.form;\n    // const matamount = this.state.amount;\n    // const matstr = this.state.strength;\n\n    console.log(material);\n    const query = await this.props.contract.methods.getMaterials().call();\n    console.log(query);\n    const queryFilter = query.filter( item => {\n      return item.materialName.includes(material) \n    });\n    console.log(queryFilter);\n    const result = queryFilter.map((item,index) => {\n      let supplier = item.supplier;\n      let id = item.materialID;\n      let name = item.materialName;\n      let cost = parseInt(item.unitCost,10).toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n      let form = item.materialForm;\n      let availableAmount = item.createdAmount;\n      console.log(supplier,id,name,cost);\n\n      return(\n          <div key={index}>\n            <ul className=\"query-result-list\" key={index}>\n              <li> <strong>SUPPLIER: </strong> {supplier}</li>\n              <li> <strong>ID: </strong> {id}</li>\n              <li> <strong>NAME: </strong> {name}</li>\n              <li> <strong>FORM: </strong> {form}</li>\n              <li> <strong>UNIT COST: </strong> {cost}</li>\n              <li> <strong>IN STOCK: </strong> {availableAmount} KG</li>     \n            </ul>\n            <hr className=\"custom-hr-full\"></hr> \n          </div>\n      );\n    })\n    this.setState({ resultCount: queryFilter.length ,result , amountToggled: true});\n    // if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n    //   await this.props.contract.methods\n    //     .createRequest(\n    //       supplierId,\n    //       material,\n    //       matform,\n    //       matstr,\n    //       matamount\n    //     )\n    //     .send({ from: this.props.account[0] })\n    //     .once(\"receipt\", (receipt) => {\n    //       this.setState({ msg: \"Request was sent successfully!\"});\n    //       setTimeout(() => {\n    //         this.setState({ msg: \" \" });\n    //       }, 2000);\n    //     });\n\n        // const request = await this.props.contract.methods.getMyRequests().call();\n        // const requestNo = request[request.length -1].requestId;\n\n        // this.setState({ requestInfo: \"Your Tracking Number: \" + requestNo});\n        //   setTimeout(() => {\n        //     this.setState({ requestInfo: \" \" });\n        //   }, 15000);\n\n\n    //   // if (request.length === 0) {\n    //   //   this.setState({\n    //   //     materials: materials.push(\n    //   //       \"This supplier has no recently created materials!\"\n    //   //     ),\n    //   //   });\n    //   // }\n\n    \n    //   this.setState({\n    //     matName: \"\",\n    //     proName: \"\",\n    //     supplier: \"\",\n    //     form: \"\",\n    //     amount: \"\",\n    //     strength: \"\",\n    //   });\n    //   // this.setState({ requests: this.state.requests + 1 });\n    // } else {\n    //   this.setState({ msg: \"Please Try Again!\" });\n    //   setTimeout(() => {\n    //     this.setState({ msg: \" \" });\n    //   }, 2000);\n    // }\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    //  const material = this.state.materialName;\n    // // const proName = this.state.proName;\n    //  const supplierId = this.state.supplier;\n    //  const matform = this.state.form;\n    //  const matamount =this.state.amount;\n    // this.setState({ supplier: \"\", materialName: \"\", amount: null, form: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      materialName: this.materialRef.current.value,\n      matId: this.idRef.current.value,\n      // supplier: this.supplierRef.current.value,\n      amount: this.amountRef.current.value,\n      // form: this.formRef.current.value,\n      // strength: this.matStrRef.current.value,\n    });\n  };\n\n  render() {\n    let toggled;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n    if (!acc || !cont || !web) {\n      return <div> Loading..... </div>;\n    }\n    this.state.amountToggled ? toggled=\"show\" : toggled =\"hide\"\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        {/* <label> Supplier ID:</label>\n\n        <input\n          type=\"text\"\n          id=\"supplier-id\"\n          ref={this.supplierRef}\n          placeholder=\"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\"\n          autoComplete=\"off\"\n          value={this.state.supplier}\n          onChange={this.onChange}\n          required = \"required\"\n        /> */}\n\n        {/* <button\n                    style= {{cursor:'pointer'}}\n                    className=\"btn\"\n                    type=\"submit\"\n                    onClick = {this.getProductSpecs}\n                    >SEARCH FOR MATERIAL </button> */}\n\n        <label> Material Name: </label>\n        <select\n          name=\"material-name\"\n          onChange={this.onChange}\n          ref={this.materialRef}\n        >\n          <option id=\"1\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"2\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"3\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIL\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n        \n        <div \n        className={`${toggled} amount-pop-up`}> \n\n        <label>Material ID:</label>\n        <input\n          type=\"text\"\n          value={this.state.matId}\n          onChange={this.onChange}\n          ref={this.idRef}\n          placeholder=\"e.g. mat101\"\n          \n        />\n        <label>Requested Amount: </label>\n        <input\n          type=\"number\"\n          id=\"material-amount\"\n          value={this.state.amount}\n          ref={this.amountRef}\n          placeholder=\"e.g. 1000 KGs\"\n          autoComplete=\"off\"\n          onChange={this.onChange}\n          required = \"required\"\n          />\n          </div>\n\n        {/* <label> Material Form: </label>\n        <select\n          name=\"requested-mat-form\"\n          onChange={this.handleChange}\n          ref={this.formRef}\n        >\n          <option id=\"pow\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"liq\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"na\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.handleChange}\n          ref={this.matStrRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n\n        <label>Requested Amount: </label>\n\n        <input\n          type=\"number\"\n          id=\"material-amount\"\n          value={this.state.amount}\n          ref={this.amountRef}\n          placeholder=\"e.g. 1000 KGs\"\n          autoComplete=\"off\"\n          onChange={this.onChange}\n          required = \"required\"\n        /> */}\n\n        <div className=\"btn-group\">\n          <input\n            style={{ cursor: \"pointer\" }}\n            className=\"btn\"\n            type=\"submit\"\n            value=\"SEARCH\"\n          />\n\n          <button\n           className={`${toggled} btn`}\n           onClick={this.addRequest}>\n            REQUEST</button>\n\n\n        </div>\n        \n\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text\"\n        >\n          <div><strong>{this.state.msg}</strong> </div>\n          <div style={{color: '#222', fontSize: '16px' }}><strong>{this.state.requestInfo}</strong></div>\n        </div>\n        <div className={`${toggled} results-counter`}>\n        <p style={{textAlign: 'left'}}> Found <strong>{this.state.resultCount} </strong> results\n            for \"{this.state.materialName}\". </p>\n        </div>\n        <div className={`${toggled} query-result-container`}>\n         \n          {this.state.result} \n        </div>\n      </form>\n    );\n  }\n}\n\nclass CreateMaterial extends Component {\n  state = {\n    matId: \"\",\n    matName: \"\",\n    matForm: \"\",\n    matStr: 0,\n    matAmount: 0,\n    matUnitCost: 0,\n  };\n  constructor(props) {\n    super(props);\n    this.idRef = React.createRef();\n    this.matRef = React.createRef();\n    this.formRef = React.createRef();\n    this.strRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.unitCostRef = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const id = this.state.matId;\n    const name = this.state.matName;\n    const form = this.state.matForm;\n    const strength = this.state.matStr;\n    const amount = this.state.matAmount;\n    const cost = this.state.matUnitCost;\n\n    await this.props.contract.methods\n      .createMaterial(id, name, strength, form, amount, cost)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Materials Created Successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 2000);\n      });\n\n    this.setState({\n      matId: \"\",\n      matName: \"\",\n      matForm: \"\",\n      matStr: \"\",\n      matAmount: \"\",\n      matUnitCost: \"\",\n    });\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      matId: this.idRef.current.value,\n      matName: this.matRef.current.value,\n      matForm: this.formRef.current.value,\n      matStr: this.strRef.current.value,\n      matAmount: this.amountRef.current.value,\n      matUnitCost: this.unitCostRef.current.value,\n    });\n  };\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label>Material ID:</label>\n        <input\n          type=\"text\"\n          value={this.state.matId}\n          onChange={this.onChange}\n          ref={this.idRef}\n          placeholder=\"e.g. mat101\"\n          required = \"required\"\n          \n        />\n        <label>Material Name:</label>\n        <select name=\"material-name\" onChange={this.OnChange} ref={this.matRef}>\n          <option id=\"11\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"22\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"33\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIl\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n\n        <label> Material Form: </label>\n        <select\n          name=\"material-form\"\n          onChange={this.onChange}\n          ref={this.formRef}\n        >\n          <option id=\"1\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"2\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"3\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.onChange}\n          ref={this.strRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n        <label> Material Amount: </label>\n        <input\n          value={this.state.matAmount}\n          onChange={this.onChange}\n          ref={this.amountRef}\n          type=\"number\"\n          placeholder=\"e.g. 1000\"\n          required = \"required\"\n        />\n\n        <label> Material Unit Cost: </label>\n        <input\n          value={this.state.matUnitCost}\n          onChange={this.onChange}\n          ref={this.unitCostRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n          required = \"required\"\n        />\n\n        <input type=\"submit\" value=\"CREATE MATERIAL\" className=\"btn\" />\n\n        <div style={{ marginTop: \"20px\" }} className=\"notify-text\">\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass ApproveRequest extends Component {\n  state = {msg: '', requestId: ''}\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n  \n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const requestNo = this.state.requestId;\n    console.log(requestNo);\n\n    //todo transact here\n\n  }\n\n  onChange = async(e) => {\n    this.setState({\n      requestId: this.requestIdRef.current.value\n    })\n    \n\n  }\n  render() {\n    return(\n      <form className=\"newform-container\">\n        <h4> Approve Request</h4>\n        <label> Request ID: </label>\n        <input \n        type=\"number\"\n        value = {this.state.requestId}\n        ref = {this.requestIdRef}\n        onChange = {this.onChange}\n        />\n      </form>\n    ); \n  }\n}\n\nclass SendShipment extends Component {\n  state = {msg: '', requestId: ''}\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n  \n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const requestNo = this.state.requestId;\n    console.log(requestNo);\n\n\n    //todo transact here\n    \n  }\n\n  onChange = async(e) => {\n    this.setState({\n      requestId: this.requestIdRef.current.value\n    })\n    \n\n  }\n  render() {\n    return(\n      <form className=\"newform-container\">\n        <h4> Send Shipment</h4>\n        <label> Request ID: </label>\n        <input \n        type=\"number\"\n        value = {this.state.requestId}\n        ref = {this.requestIdRef}\n        onChange = {this.onChange}\n        />\n      </form>\n    ); \n  }\n}\n\n\nclass ManageSupply extends Component {\n  render() {\n    return(\n      <div class=\"form-collection newform-container\">\n        <ApproveRequest account={this.props.account}\n          contract={this.props.contract} />\n        <hr className=\"custom-hr-half\"></hr>\n        <SendShipment account={this.props.account}\n          contract={this.props.contract} />\n        <hr className=\"custom-hr-half\"></hr>\n       \n      </div>\n    );\n  }\n}\n\nclass SupplyForm extends Component {\n  // state = {materialName: '' , materialsVisibility:  false , proName: '' , supplier: '' }\n\n  // constructor(props) {\n  //     super(props);\n\n  //     this.materialRef = React.createRef();\n  //     this.supplierRef = React.createRef();\n  //     this.onSubmit = this.onSubmit.bind(this)\n  //     this.onChange = this.onChange.bind(this)\n  //     this.viewMaterialBySupplierAddress = this.viewMaterialBySupplierAddress.bind(this)\n  //     this.viewSpecs = this.viewSpecs.bind(this)\n  // }\n\n  componentDidMount = async () => {\n    // if (!this.props.contract || !this.props.accounts) {\n    //     return <h2> PLEASE WAIT... </h2>;\n    // }\n  };\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n\n  // viewSpecs = async () => {\n  //   const specs = await this.props.contract.methods\n  //     .getProductSpecs(this.state.proName)\n  //     .call();\n  //   if (specs.length === 0) {\n  //     this.setState({\n  //       specs: specs.push(\n  //         \"Didn't find any specs for the given product ID, please try again!\"\n  //       ),\n  //     });\n  //   }\n  //   console.log(specs);\n  //   this.setState({ specs });\n  // };\n\n  // viewMaterialBySupplierAddress = async () => {\n  //   // console.log()\n  //   if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n  //     const materials = await this.props.contract.methods\n  //       .getMaterialBySupplier(`${this.state.supplier}`)\n  //       .call();\n  //     if (materials.length === 0) {\n  //       this.setState({\n  //         materials: materials.push(\n  //           \"This supplier has no materials created currently!\"\n  //         ),\n  //       });\n  //     }\n  //     this.setState({ materials });\n  //   }\n  // };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"product-form-container\">\n          <div className=\"side-nav\">\n            <ul className=\"mini-nav-list\">\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/querySpecs\">+ QUERY PRODUCT SPECS</NavLink>\n              </li>\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/requestMaterial\">\n                  + REQUEST MATERIAL\n                </NavLink>\n              </li>\n              <label style={{ marginTop: \"10px\" }}>\n                <strong> SUPPLIER </strong>\n              </label>\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/supplier/createMaterial\">\n                  + CREATE MATERIAL\n                </NavLink>\n              </li>\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/supplyPortal\">\n                  + MANAGE SUPPLY\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-content\">\n            <Route\n              path=\"/supply/querySpecs\"\n              exact\n              render={(props) => (\n                <QueryProductSpecs\n                  {...props}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/requestMaterial\"\n              exact\n              render={(props) => (\n                <RequestMaterials\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/supplier/createMaterial\"\n              exact\n              render={(props) => (\n                <CreateMaterial\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/supplyPortal\"\n              exact\n              render={(props) => (\n                <ManageSupply\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default SupplyForm;\n"]},"metadata":{},"sourceType":"module"}