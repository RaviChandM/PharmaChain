{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(this.props.status);\n    return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../valid.svg\"),\n      width: \"70px\",\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" \", this.props.time), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \" \", this.props.ship), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" \", this.props.temp), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" \", this.props.humid)));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      let log = response.map((item, index) => {\n        response.forEach(element => {\n          const shipStatus = element.shipStatus;\n          const matStatus = element.materialStatus;\n          const temp = element.currentTemp;\n          const humid = element.currentHumidity;\n          const time = element.logTime;\n          const timeUTC = new Date(0);\n          console.log(shipStatus, matStatus, temp, humid, time, timeUTC.setUTCSeconds(time * 1000));\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.timeUTC.setUTCDate(this.time),\n          ship: this.shipStatus,\n          material: this.matStatus,\n          temp: this.temp,\n          humid: this.humid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \"\"\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW SHIPMENT STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"response-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.log));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","TrackRecord","constructor","props","render","console","log","status","require","time","ship","temp","humid","Track","state","logs","componentDidMount","requestID","handleSubmit","e","preventDefault","id","parseInt","response","contract","methods","getTrackLogs","call","map","item","index","forEach","element","shipStatus","matStatus","materialStatus","currentTemp","currentHumidity","logTime","timeUTC","Date","setUTCSeconds","setUTCDate","setState","handleChange","requestIdRef","current","value","createRef","bind","acc","account","cont","marginRight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    console.log(this.props.status)\n    return (\n      <div className=\"track-record-container\"> \n      <img src={require(\"../valid.svg\")} width = '70px' alt= 'valid'/>\n      <ul className='record-list'>\n         <li> {this.props.time}</li>\n         <li> {this.props.ship}</li>\n         <li> {this.props.temp}</li>\n         <li> {this.props.humid}</li>\n      </ul>\n      \n      </div>\n    );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [] };\n\n  componentDidMount = async () => {};\n\n  state = { requestID: \"\" };\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    let log = response.map((item,index) => {\n      response.forEach(element => {\n        const shipStatus = element.shipStatus;\n        const matStatus = element.materialStatus;\n        const temp = element.currentTemp;\n        const humid = element.currentHumidity;\n        const time  = element.logTime;\n        const timeUTC = new Date(0);\n        console.log(shipStatus,matStatus,temp,humid,time,timeUTC.setUTCSeconds(time*1000))      \n      });\n      return <TrackRecord key={index}\n      status = {item}\n      time = {this.timeUTC.setUTCDate(this.time)}\n      ship = {this.shipStatus}\n      material = {this.matStatus}\n      temp = {this.temp}\n      humid = {this.humid}\n       />\n    })\n    this.setState({ response, log });\n    this.setState({\n      requestID: \"\",\n    });\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{marginRight: '5px'}}> Request ID: </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n          />\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW SHIPMENT STATUS\"\n          />\n        </div>\n\n        <div className=\"response-text\">{this.state.log}</div>\n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}