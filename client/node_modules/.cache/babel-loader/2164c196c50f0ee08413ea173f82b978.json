{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/SupplyForm.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proName: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      // const material = this.state.materialName;\n      // const proName = this.state.proName;\n      // const supplierId = this.state.supplier;\n\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n\n      if (specs.length === 0) {\n        this.setState({\n          specs: specs.push(\"Didn't find any specs for the given product ID, please try again!\".toUpperCase())\n        });\n      }\n\n      this.setState({\n        specs\n      });\n      this.setState({\n        proName: \"\"\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        proName: this.productRef.current.value\n      });\n    };\n\n    this.productRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Enter Product ID \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.productRef,\n      placeholder: \"e.g. pro101\",\n      value: this.state.proName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"VIEW PRODUCT SPECS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"product-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.specs));\n  }\n\n}\n\nclass RequestMaterials extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      materialName: \"\",\n      materialsVisibility: false,\n      supplier: \"\",\n      amount: 0,\n      form: \"\",\n      strength: 0,\n      msg: \" \"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const material = this.state.materialName; // const proName = this.state.proName;\n\n      const supplierId = this.state.supplier;\n      const matform = this.state.form;\n      const matamount = this.state.amount;\n      const matstr = this.state.strength;\n      console.log(supplierId, material, matform, matamount, matstr);\n\n      if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n        await this.props.contract.methods.createRequest(supplierId, this.state.materialName, matform, matstr, matamount).send({\n          from: this.props.account[0]\n        }).once(\"receipt\", receipt => {\n          this.setState({\n            msg: \"Request was sent successfully!\"\n          });\n          setTimeout(() => {\n            this.setState({\n              msg: \" \"\n            });\n          }, 2000);\n        }); // if (request.length === 0) {\n        //   this.setState({\n        //     materials: materials.push(\n        //       \"This supplier has no recently created materials!\"\n        //     ),\n        //   });\n        // }\n\n        this.setState({\n          matName: \"\",\n          proName: \"\",\n          supplier: \"\",\n          form: \"\",\n          amount: \"\",\n          strength: \"\",\n          materialsVisibility: true\n        }); // this.setState({ requests: this.state.requests + 1 });\n      } else {\n        this.setState({\n          msg: \"Please Try Again!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      } // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      //  const material = this.state.materialName;\n      // // const proName = this.state.proName;\n      //  const supplierId = this.state.supplier;\n      //  const matform = this.state.form;\n      //  const matamount =this.state.amount;\n\n\n      this.setState({\n        supplier: \"\",\n        materialName: \"\",\n        amount: null,\n        form: \"\"\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        materialName: this.materialRef.current.value,\n        supplier: this.supplierRef.current.value,\n        amount: this.amountRef.current.value,\n        form: this.formRef.current.value,\n        strength: this.strRef.current.value\n      });\n    };\n\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.formRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n\n    if (!acc || !cont || !web) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \" Supplier ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"supplier-id\",\n      ref: this.supplierRef,\n      placeholder: \"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\",\n      autoComplete: \"off\",\n      value: this.state.supplier,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" Material Name: \"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.onChange,\n      ref: this.materialRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"WHEAT GERM OIL\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \" Material Form: \"), React.createElement(\"select\", {\n      name: \"requested-mat-form\",\n      onChange: this.handleChange,\n      ref: this.formRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"pow\",\n      value: \"powder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"POWDER\"), React.createElement(\"option\", {\n      id: \"liq\",\n      value: \"liquid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"LIQUID\"), React.createElement(\"option\", {\n      id: \"na\",\n      value: \"n/a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"N/A\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \" Material Strength: \"), React.createElement(\"input\", {\n      value: this.state.matStr,\n      onChange: this.handleChange,\n      ref: this.matStrRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Requested Amount: \"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"material-amount\",\n      value: this.state.amount,\n      ref: this.amountRef,\n      placeholder: \"e.g. 1000 KGs\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"SEND MATERIAL REQUEST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass CreateMaterial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matId: \"\",\n      matName: \"\",\n      matForm: \"\",\n      matStr: 0,\n      matAmount: 0,\n      matUnitCost: 0\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const id = this.state.matId;\n      const name = this.state.matName;\n      const form = this.state.matForm;\n      const strength = this.state.matStr;\n      const amount = this.state.matAmount;\n      const cost = this.state.matUnitCost;\n      await this.props.contract.methods.createMaterial(id, name, strength, form, amount, cost).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Materials Created Successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 2000);\n      });\n      this.setState({\n        matId: '',\n        matName: '',\n        matForm: '',\n        matStr: '',\n        matAmount: '',\n        matUnitCost: ''\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        matId: this.matRef.current.value,\n        matName: this.matRef.current.value,\n        matForm: this.formRef.current.value,\n        matStr: this.strRef.current.value,\n        matAmount: this.amountRef.current.value,\n        matUnitCost: this.unitCostRef.current.value\n      });\n    };\n\n    this.idRef = React.createRef();\n    this.matRef = React.createRef();\n    this.formRef = React.createRef();\n    this.strRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.unitCostRef = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.matId,\n      onChange: this.onChange,\n      ref: this.matIdRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Material Name:\"), React.createElement(\"select\", {\n      name: \"material-name\",\n      onChange: this.OnChange,\n      ref: this.nameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"11\",\n      value: \"vitamin-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"VITAMIN A\"), React.createElement(\"option\", {\n      id: \"22\",\n      value: \"vitmain-b-complex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"VITAMIN B COMPLEX\"), React.createElement(\"option\", {\n      id: \"33\",\n      value: \"vitamin-c-extract\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"VITAMIN C EXTRACT\"), React.createElement(\"option\", {\n      id: \"4\",\n      value: \"vitamin-d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"VITAMIN D\"), React.createElement(\"option\", {\n      id: \"5\",\n      value: \"potassium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"POTASSIUM\"), React.createElement(\"option\", {\n      id: \"6\",\n      value: \"zinc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"ZINC\"), React.createElement(\"option\", {\n      id: \"7\",\n      value: \"plastic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"PLASTIC\"), React.createElement(\"option\", {\n      id: \"8\",\n      value: \"glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"GLASS\"), React.createElement(\"option\", {\n      id: \"9\",\n      value: \"wood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"WOOD\"), React.createElement(\"option\", {\n      id: \"10\",\n      value: \"wheat-germ-oil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"WHEAT GERM OIl\"), React.createElement(\"option\", {\n      id: \"11\",\n      value: \"paracetamol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"PARACETAMOL\"), React.createElement(\"option\", {\n      id: \"12\",\n      value: \"ginseng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"GINSENG\"), React.createElement(\"option\", {\n      id: \"13\",\n      value: \"selenium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"SELENIUM\"), React.createElement(\"option\", {\n      id: \"14\",\n      value: \"DHA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"DHA\"), React.createElement(\"option\", {\n      id: \"15\",\n      value: \"folic-acid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"FOLIC ACID\"), React.createElement(\"option\", {\n      id: \"16\",\n      value: \"lysine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"LYSINE\"), React.createElement(\"option\", {\n      id: \"17\",\n      value: \"nickel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"NICKEL\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \" Material Form: \"), React.createElement(\"select\", {\n      name: \"material-form\",\n      onChange: this.onChange,\n      ref: this.formRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      id: \"1\",\n      value: \"powder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"POWDER\"), React.createElement(\"option\", {\n      id: \"2\",\n      value: \"liquid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"LIQUID\"), React.createElement(\"option\", {\n      id: \"3\",\n      value: \"n/a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"N/A\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \" Material Strength: \"), React.createElement(\"input\", {\n      value: this.state.matStr,\n      onChange: this.onChange,\n      ref: this.strRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \" Material Amount: \"), React.createElement(\"input\", {\n      value: this.state.matAmount,\n      onChange: this.onChange,\n      ref: this.amountRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \" Material Unit Cost: \"), React.createElement(\"input\", {\n      value: this.state.matUnitCost,\n      onChange: this.onChange,\n      ref: this.unitCostRef,\n      type: \"number\",\n      placeholder: \"e.g. 10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"CREATE MATERIAL\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass SupplyForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {// if (!this.props.contract || !this.props.accounts) {\n      //     return <h2> PLEASE WAIT... </h2>;\n      // }\n    };\n  }\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n  // viewSpecs = async () => {\n  //   const specs = await this.props.contract.methods\n  //     .getProductSpecs(this.state.proName)\n  //     .call();\n  //   if (specs.length === 0) {\n  //     this.setState({\n  //       specs: specs.push(\n  //         \"Didn't find any specs for the given product ID, please try again!\"\n  //       ),\n  //     });\n  //   }\n  //   console.log(specs);\n  //   this.setState({ specs });\n  // };\n  // viewMaterialBySupplierAddress = async () => {\n  //   // console.log()\n  //   if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n  //     const materials = await this.props.contract.methods\n  //       .getMaterialBySupplier(`${this.state.supplier}`)\n  //       .call();\n  //     if (materials.length === 0) {\n  //       this.setState({\n  //         materials: materials.push(\n  //           \"This supplier has no materials created currently!\"\n  //         ),\n  //       });\n  //     }\n  //     this.setState({ materials });\n  //   }\n  // };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"side-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"mini-nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/supply/querySpecs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"+ QUERY PRODUCT SPECS\"), \" \"), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/supply/requestMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, \"+ REQUEST MATERIALS\")), React.createElement(\"label\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \" SUPPLIER \"), \" \"), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/supply/supplier/createMaterial\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, \"+ CREATE MATERIAL\")))), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/supply/querySpecs\",\n      exact: true,\n      render: props => React.createElement(QueryProductSpecs, Object.assign({}, props, {\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/requestMaterial\",\n      exact: true,\n      render: props => React.createElement(RequestMaterials, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/supply/supplier/createMaterial\",\n      exact: true,\n      render: props => React.createElement(CreateMaterial, Object.assign({}, props, {\n        Web3: this.props.Web3,\n        account: this.props.account,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SupplyForm;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/SupplyForm.js"],"names":["React","Component","BrowserRouter","Route","NavLink","QueryProductSpecs","constructor","props","state","proName","onSubmit","e","preventDefault","specs","contract","methods","getProductSpecs","call","length","setState","push","toUpperCase","onChange","productRef","current","value","createRef","bind","render","acc","account","cont","cursor","marginTop","RequestMaterials","materialName","materialsVisibility","supplier","amount","form","strength","msg","material","supplierId","matform","matamount","matstr","console","log","Web3","utils","isAddress","createRequest","send","from","once","receipt","setTimeout","matName","materialRef","supplierRef","amountRef","formRef","strRef","matStrRef","web","handleChange","matStr","CreateMaterial","matId","matForm","matAmount","matUnitCost","id","name","cost","createMaterial","matRef","unitCostRef","idRef","matIdRef","OnChange","nameRef","SupplyForm","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass QueryProductSpecs extends Component {\n  state = { proName: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.productRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    // const material = this.state.materialName;\n    // const proName = this.state.proName;\n    // const supplierId = this.state.supplier;\n\n    const specs = await this.props.contract.methods\n      .getProductSpecs(this.state.proName)\n      .call();\n    if (specs.length === 0) {\n      this.setState({\n        specs: specs.push(\n          \"Didn't find any specs for the given product ID, please try again!\".toUpperCase()\n        ),\n      });\n    }\n    this.setState({ specs });\n    this.setState({ proName: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      proName: this.productRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label> Enter Product ID </label>\n\n        <input\n          type=\"text\"\n          ref={this.productRef}\n          placeholder=\"e.g. pro101\"\n          value={this.state.proName}\n          onChange={this.onChange}\n        />\n\n        <input\n          style={{ cursor: \"pointer\" }}\n          className=\"btn\"\n          type=\"submit\"\n          value=\"VIEW PRODUCT SPECS\"\n        />\n\n        <div style={{ marginTop: \"20px\" }} className=\"product-data-container\">\n          {this.state.specs}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass RequestMaterials extends Component {\n  state = {\n    materialName: \"\",\n    materialsVisibility: false,\n    supplier: \"\",\n    amount: 0,\n    form: \"\",\n    strength: 0,\n    msg: \" \",\n  };\n\n  constructor(props) {\n    super(props);\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.formRef = React.createRef();\n    this.matStrRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const material = this.state.materialName;\n    // const proName = this.state.proName;\n    const supplierId = this.state.supplier;\n    const matform = this.state.form;\n    const matamount = this.state.amount;\n    const matstr = this.state.strength;\n    console.log(supplierId, material, matform, matamount, matstr);\n    if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n      await this.props.contract.methods\n        .createRequest(supplierId, this.state.materialName, matform, matstr, matamount)\n        .send({ from: this.props.account[0] })\n        .once(\"receipt\", (receipt) => {\n          this.setState({ msg: \"Request was sent successfully!\" });\n          setTimeout(() => {\n            this.setState({ msg: \" \" });\n          }, 2000);\n        });\n      // if (request.length === 0) {\n      //   this.setState({\n      //     materials: materials.push(\n      //       \"This supplier has no recently created materials!\"\n      //     ),\n      //   });\n      // }\n      this.setState({\n        matName: \"\",\n        proName: \"\",\n        supplier: \"\",\n        form: \"\",\n        amount: \"\",\n        strength: \"\",\n        materialsVisibility: true,\n      });\n      // this.setState({ requests: this.state.requests + 1 });\n    } else {\n      this.setState({ msg: \"Please Try Again!\" });\n      setTimeout(() => {\n        this.setState({ msg: \" \" });\n      }, 2000);\n    }\n\n    // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n    //  const material = this.state.materialName;\n    // // const proName = this.state.proName;\n    //  const supplierId = this.state.supplier;\n    //  const matform = this.state.form;\n    //  const matamount =this.state.amount;\n    this.setState({ supplier: \"\", materialName: \"\", amount: null, form: \"\" });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      materialName: this.materialRef.current.value,\n      supplier: this.supplierRef.current.value,\n      amount: this.amountRef.current.value,\n      form: this.formRef.current.value,\n      strength: this.strRef.current.value\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web = this.props.Web3;\n    if (!acc || !cont || !web) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label> Supplier ID:</label>\n\n        <input\n          type=\"text\"\n          id=\"supplier-id\"\n          ref={this.supplierRef}\n          placeholder=\"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\"\n          autoComplete=\"off\"\n          value={this.state.supplier}\n          onChange={this.onChange}\n        />\n\n        {/* <button\n                    style= {{cursor:'pointer'}}\n                    className=\"btn\"\n                    type=\"submit\"\n                    onClick = {this.getProductSpecs}\n                    >SEARCH FOR MATERIAL </button> */}\n\n        <label> Material Name: </label>\n        <select\n          name=\"material-name\"\n          onChange={this.onChange}\n          ref={this.materialRef}\n        >\n          <option id=\"1\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"2\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"3\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIL\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n\n        <label> Material Form: </label>\n        <select\n          name=\"requested-mat-form\"\n          onChange={this.handleChange}\n          ref={this.formRef}\n        >\n          <option id=\"pow\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"liq\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"na\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.handleChange}\n          ref={this.matStrRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n\n        <label>Requested Amount: </label>\n\n        <input\n          type=\"number\"\n          id=\"material-amount\"\n          value={this.state.amount}\n          ref={this.amountRef}\n          placeholder=\"e.g. 1000 KGs\"\n          autoComplete=\"off\"\n          onChange={this.onChange}\n        />\n\n        <input\n          style={{ cursor: \"pointer\" }}\n          className=\"btn\"\n          type=\"submit\"\n          value=\"SEND MATERIAL REQUEST\"\n        />\n\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text\"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass CreateMaterial extends Component {\n  state = { matId: \"\", matName: \"\", matForm: \"\", matStr: 0, matAmount: 0, matUnitCost: 0 };\n  constructor(props) {\n    super(props);\n    this.idRef= React.createRef();\n    this.matRef = React.createRef();\n    this.formRef = React.createRef();\n    this.strRef = React.createRef();\n    this.amountRef = React.createRef();\n    this.unitCostRef = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const id = this.state.matId;\n    const name = this.state.matName;\n    const form =  this.state.matForm;\n    const strength = this.state.matStr;\n    const amount = this.state.matAmount;\n    const cost = this.state.matUnitCost;\n    \n    await this.props.contract.methods.createMaterial(id,name,strength,form,amount,cost)\n    .send({from: this.props.account[0]})\n    .once(\"receipt\", (receipt) => {\n      this.setState({ msg: \"Materials Created Successfully!\" });\n      setTimeout(() => {\n        this.setState({ msg: \" \" });\n      }, 2000);\n    });\n\n    this.setState({\n      matId: '',\n      matName: '',\n      matForm: '',\n      matStr: '',\n      matAmount: '',\n      matUnitCost: '',\n    })\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      matId: this.matRef.current.value,\n      matName: this.matRef.current.value,\n      matForm: this.formRef.current.value,\n      matStr: this.strRef.current.value,\n      matAmount: this.amountRef.current.value,\n      matUnitCost: this.unitCostRef.current.value,\n    });\n  };\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label></label>\n        <input type=\"text\"\n        value={this.state.matId}\n        onChange= {this.onChange}\n        ref = {this.matIdRef}\n        />\n        <label>Material Name:</label>\n        <select\n          name=\"material-name\"\n          onChange={this.OnChange}\n          ref={this.nameRef}\n        >\n          <option id=\"11\" value=\"vitamin-a\">\n            VITAMIN A\n          </option>\n          <option id=\"22\" value=\"vitmain-b-complex\">\n            VITAMIN B COMPLEX\n          </option>\n          <option id=\"33\" value=\"vitamin-c-extract\">\n            VITAMIN C EXTRACT\n          </option>\n          <option id=\"4\" value=\"vitamin-d\">\n            VITAMIN D\n          </option>\n          <option id=\"5\" value=\"potassium\">\n            POTASSIUM\n          </option>\n          <option id=\"6\" value=\"zinc\">\n            ZINC\n          </option>\n          <option id=\"7\" value=\"plastic\">\n            PLASTIC\n          </option>\n          <option id=\"8\" value=\"glass\">\n            GLASS\n          </option>\n          <option id=\"9\" value=\"wood\">\n            WOOD\n          </option>\n          <option id=\"10\" value=\"wheat-germ-oil\">\n            WHEAT GERM OIl\n          </option>\n          <option id=\"11\" value=\"paracetamol\">\n            PARACETAMOL\n          </option>\n          <option id=\"12\" value=\"ginseng\">\n            GINSENG\n          </option>\n          <option id=\"13\" value=\"selenium\">\n            SELENIUM\n          </option>\n          <option id=\"14\" value=\"DHA\">\n            DHA\n          </option>\n          <option id=\"15\" value=\"folic-acid\">\n            FOLIC ACID\n          </option>\n          <option id=\"16\" value=\"lysine\">\n            LYSINE\n          </option>\n          <option id=\"17\" value=\"nickel\">\n            NICKEL\n          </option>\n        </select>\n\n        <label> Material Form: </label>\n        <select\n          name=\"material-form\"\n          onChange={this.onChange}\n          ref={this.formRef}\n        >\n          <option id=\"1\" value=\"powder\">\n            POWDER\n          </option>\n          <option id=\"2\" value=\"liquid\">\n            LIQUID\n          </option>\n          <option id=\"3\" value=\"n/a\">\n            N/A\n          </option>\n        </select>\n\n        <label> Material Strength: </label>\n        <input\n          value={this.state.matStr}\n          onChange={this.onChange}\n          ref={this.strRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n        <label> Material Amount: </label>\n        <input\n          value={this.state.matAmount}\n          onChange={this.onChange}\n          ref={this.amountRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n\n        <label> Material Unit Cost: </label>\n        <input\n          value={this.state.matUnitCost}\n          onChange={this.onChange}\n          ref={this.unitCostRef}\n          type=\"number\"\n          placeholder=\"e.g. 10\"\n        />\n\n        <input type=\"submit\" value=\"CREATE MATERIAL\" className=\"btn\" />\n      </form>\n    );\n  }\n}\n\nclass SupplyForm extends Component {\n  // state = {materialName: '' , materialsVisibility:  false , proName: '' , supplier: '' }\n\n  // constructor(props) {\n  //     super(props);\n\n  //     this.materialRef = React.createRef();\n  //     this.supplierRef = React.createRef();\n  //     this.onSubmit = this.onSubmit.bind(this)\n  //     this.onChange = this.onChange.bind(this)\n  //     this.viewMaterialBySupplierAddress = this.viewMaterialBySupplierAddress.bind(this)\n  //     this.viewSpecs = this.viewSpecs.bind(this)\n  // }\n\n  componentDidMount = async () => {\n    // if (!this.props.contract || !this.props.accounts) {\n    //     return <h2> PLEASE WAIT... </h2>;\n    // }\n  };\n\n  // onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n  //     // this.logProduct();\n  //     // const material = this.state.materialName;\n  //     // const proName = this.state.proName;\n  //     // const supplierId = this.state.supplier;\n\n  //     this.viewMaterialBySupplierAddress();\n  //   }\n\n  // onChange = (e) => {\n  //     e.preventDefault();\n  //     this.setState({\n\n  //         proName : this.productRef.current.value,\n  //         // materialName : this.materialRef.current.value,\n  //         supplier: this.supplierRef.current.value\n  //         });\n  // }\n\n  // logProduct = async () => {\n  //     const product = await this.props.contract.methods.getProductDetails('5').call();\n  //     console.table(product);\n  // }\n\n  // fakeTransact = async () => {\n  //     //await contract.methods.set(5).send({ from: accounts[0] });\n  //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n  //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n  //     console.log(this.state.materialsVisibility)\n  // }\n\n  // viewSpecs = async () => {\n  //   const specs = await this.props.contract.methods\n  //     .getProductSpecs(this.state.proName)\n  //     .call();\n  //   if (specs.length === 0) {\n  //     this.setState({\n  //       specs: specs.push(\n  //         \"Didn't find any specs for the given product ID, please try again!\"\n  //       ),\n  //     });\n  //   }\n  //   console.log(specs);\n  //   this.setState({ specs });\n  // };\n\n  // viewMaterialBySupplierAddress = async () => {\n  //   // console.log()\n  //   if (this.props.Web3.utils.isAddress(this.state.supplier)) {\n  //     const materials = await this.props.contract.methods\n  //       .getMaterialBySupplier(`${this.state.supplier}`)\n  //       .call();\n  //     if (materials.length === 0) {\n  //       this.setState({\n  //         materials: materials.push(\n  //           \"This supplier has no materials created currently!\"\n  //         ),\n  //       });\n  //     }\n  //     this.setState({ materials });\n  //   }\n  // };\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"product-form-container\">\n          <div className=\"side-nav\">\n            <ul className=\"mini-nav-list\">\n              <li className=\"link-item\">\n                <NavLink to=\"/supply/querySpecs\">+ QUERY PRODUCT SPECS</NavLink>{\" \"}\n              </li>\n              <li className=\"link-item\">\n                {\" \"}\n                <NavLink to=\"/supply/requestMaterial\">\n                  + REQUEST MATERIALS\n                </NavLink>\n              </li>\n              <label style={{ marginTop: \"10px\" }}>\n                <strong> SUPPLIER </strong>{\" \"}\n              </label>\n              <li className=\"link-item\">\n                {\" \"}\n                <NavLink to=\"/supply/supplier/createMaterial\">\n                  + CREATE MATERIAL\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-content\">\n            <Route\n              path=\"/supply/querySpecs\"\n              exact\n              render={(props) => (\n                <QueryProductSpecs\n                  {...props}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/requestMaterial\"\n              exact\n              render={(props) => (\n                <RequestMaterials\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/supply/supplier/createMaterial\"\n              exact\n              render={(props) => (\n                <CreateMaterial\n                  {...props}\n                  Web3={this.props.Web3}\n                  account={this.props.account}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default SupplyForm;\n"]},"metadata":{},"sourceType":"module"}