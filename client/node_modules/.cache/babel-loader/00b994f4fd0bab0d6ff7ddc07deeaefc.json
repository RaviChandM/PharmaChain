{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/ProductForm.js\";\nimport React, { Component } from 'react'; // let myStyle = {\n//     display:'none'\n// }\n// let suppliers = [\"0x8660D38DCE7CC16d5fD6dc4b5Dc079109890E4A5\",\n//                    \"0x65e439CC22968836e8Db9e30B6450ef9d7816C2E\", \n//                    \"0x913D7882cEF7F8243c26cEb67947C78981729ed5\" ]\n// let costs = [\"10\",\"15\",\"13\",\"12\",\"51\",\"12\",\"14\",\"25\",\"20\",\"9\",\"8\",\"20\",\"40\"]\n// let types = [\"active\", \"packaging\", \"support\"]\n// let inventoryCount = 0;\n\nclass ProductForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      materialName: '',\n      materialsVisibility: false,\n      proName: '',\n      supplier: ''\n    };\n\n    this.componentDidMount = async () => {// if (!this.props.contract || !this.props.accounts) {\n      //     return <h2> PLEASE WAIT... </h2>;\n      // }\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n      // this.logProduct();\n      // const material = this.state.materialName;\n      // const proName = this.state.proName;\n      // const supplierId = this.state.supplier;\n\n      this.setState({\n        matName: '',\n        proName: '',\n        supplier: '',\n        materialsVisibility: true\n      });\n    };\n\n    this.onChange = e => this.setState({\n      proName: this.productRef.current.value,\n      // materialName : this.materialRef.current.value,\n      supplier: this.supplierRef.current.value\n    });\n\n    this.viewSpecs = async () => {\n      const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call();\n\n      if (!specs) {\n        this.setState({\n          specs: 'No Data Found, Check Product ID!'\n        });\n      }\n\n      this.setState({\n        specs\n      });\n    };\n\n    this.productRef = React.createRef();\n    this.materialRef = React.createRef();\n    this.supplierRef = React.createRef();\n  }\n\n  render() {\n    // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n    // const random = Math.floor(Math.random() * 100);\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" Enter Product \"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.productRef,\n      placeholder: \"e.g. pro101\",\n      value: this.state.proName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: 'pointer'\n      },\n      className: \"btn-alt\",\n      type: \"submit\",\n      onClick: this.viewSpecs,\n      value: \"VIEW PRODUCT SPECS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"product-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.specs), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Enter Supplier ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"supplier-id\",\n      value: this.state.supplier,\n      placeholder: \"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      ref: this.supplierRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: 'pointer'\n      },\n      className: \"btn\",\n      type: \"submit\",\n      value: \"SEARCH FOR MATERIAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/ProductForm.js"],"names":["React","Component","ProductForm","constructor","props","state","materialName","materialsVisibility","proName","supplier","componentDidMount","onSubmit","e","preventDefault","setState","matName","onChange","productRef","current","value","supplierRef","viewSpecs","specs","contract","methods","getProductSpecs","call","createRef","materialRef","render","acc","account","cont","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// let myStyle = {\n//     display:'none'\n// }\n\n// let suppliers = [\"0x8660D38DCE7CC16d5fD6dc4b5Dc079109890E4A5\",\n//                    \"0x65e439CC22968836e8Db9e30B6450ef9d7816C2E\", \n//                    \"0x913D7882cEF7F8243c26cEb67947C78981729ed5\" ]\n\n// let costs = [\"10\",\"15\",\"13\",\"12\",\"51\",\"12\",\"14\",\"25\",\"20\",\"9\",\"8\",\"20\",\"40\"]\n\n// let types = [\"active\", \"packaging\", \"support\"]\n\n// let inventoryCount = 0;\n\nclass ProductForm extends Component {\n    state = {materialName: '' , materialsVisibility:  false , proName: '' , supplier: '' }\n\n\n    constructor(props) {\n        super(props);\n        this.productRef = React.createRef();\n        this.materialRef = React.createRef();\n        this.supplierRef = React.createRef();\n    }\n\n    componentDidMount = async() => {\n      \n        // if (!this.props.contract || !this.props.accounts) {\n        //     return <h2> PLEASE WAIT... </h2>;\n        // }\n        \n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        // this.props.contract.methods.addProduct('1', this.state.input).send({from: this.props.accounts[0]});\n        // this.logProduct();\n        // const material = this.state.materialName;\n        // const proName = this.state.proName;\n        // const supplierId = this.state.supplier;\n        this.setState({  matName: '', proName: '', supplier: '', materialsVisibility: true });\n        \n      }\n\n    onChange = (e) => this.setState({ \n        proName : this.productRef.current.value,\n        // materialName : this.materialRef.current.value,\n        supplier: this.supplierRef.current.value\n        });\n\n    // logProduct = async () => {\n    //     const product = await this.props.contract.methods.getProductDetails('5').call();\n    //     console.table(product);\n    // }\n\n    // fakeTransact = async () => {\n    //     //await contract.methods.set(5).send({ from: accounts[0] });\n    //     this.props.contract.methods.set(5).send({from: this.props.accounts[0]})\n    //     this.setState({materialsVisibility: !this.setState.materialsVisibility });\n    //     console.log(this.state.materialsVisibility)\n    // }\n        viewSpecs = async() => {\n            const specs = await this.props.contract.methods.getProductSpecs(this.state.proName).call()\n            if(!specs) {\n                this.setState({specs: 'No Data Found, Check Product ID!'})\n            }\n            this.setState({specs})\n        }\n    render() {\n        // const vis = this.state.materialsVisibility ? 'show' : 'hide';\n        // const random = Math.floor(Math.random() * 100);\n        let acc = this.props.account;\n        let cont = this.props.contract;\n        if (!acc || !cont) {\n            return <div> Loading..... </div>\n        }\n        return (\n            <form onSubmit= {this.onSubmit} className='form-container'>\n                {/* <div className= {`${vis}`}> INVENTORY LEVEL: {inventoryCount} </div> */}\n                <div className=\"form-row\">\n                    <h4> Enter Product </h4> \n                    {/* <select id=\"products\">\n                        <option> pro101 </option>\n                    </select> */}\n                    <input type=\"text\"\n                    ref={this.productRef}\n                    placeholder=\"e.g. pro101\" \n                    value={this.state.proName} \n                    onChange={this.onChange}/>\n        \n                      <input \n                      style= {{cursor:'pointer'}}\n                      className=\"btn-alt\"\n                      type=\"submit\"\n                      onClick = {this.viewSpecs}\n                      value=\"VIEW PRODUCT SPECS\"/>\n\n                    <div className='product-data-container'>\n                        {this.state.specs}\n                    </div>\n                    {/* <h4>Choose Material</h4>\n                     <input onChange= { this.onChange } type=\"text\" id=\"product-name\" \n                    placeholder=\"Enter Material Name\" autoComplete=\"off\"/>  \n                    <select id= \"materials\"\n                     value={this.state.materialName} \n                     onChange = {this.onChange} \n                     ref ={this.materialRef} >\n                        <option id='1' value='vitamin-a'>VITAMIN A </option>\n                        <option id='2' value='vitmain-b-complex'>VITAMIN B COMPLEX</option>\n                        <option id='3' value='vitamin-c-extract'>VITAMIN C EXTRACT</option>\n                        <option id='4' value='vitamin-d'>VITAMIN D</option>\n                        <option id='5' value='potassium'>POTASSIUM</option>\n                        <option id='6' value='zinc'>ZINC</option>\n                        <option id='7' value='plastic'>PLASTIC</option>\n                        <option id='8' value='glass'>GLASS</option>\n                        <option id='9' value='wood'>WOOD</option>\n                    </select> */}\n\n                    <h4>Enter Supplier ID</h4>\n                        <input\n                        type=\"text\" id=\"supplier-id\" \n                        value = {this.state.supplier}\n                        placeholder=\"e.g. 0x49A504f461b36A9337Ddaf1f63c3A3AAD0242E81\"\n                        autoComplete=\"off\"\n                        onChange = {this.onChange}\n                        ref={this.supplierRef}/> \n                        <input style= {{ cursor:'pointer'}} className=\"btn\" type=\"submit\" value=\"SEARCH FOR MATERIAL\"/> \n                </div>\n                \n                {/* <div id= 'material-content' className={`material-card ${vis}`} >   \n                    <ul>\n                        <li><strong>SUPPLIER:</strong> {suppliers[0]} </li>\n                        <li><strong>MATERIAL ID:</strong> uid{14+2} </li>\n                        <li><strong>MATERIAL NAME:</strong> {this.state.input.toUpperCase()} </li> \n                        <li> <strong>MATERIAL TYPE: </strong> {types[0]}</li>\n                        <li> <strong>UNIT COST: {costs[1]} </strong> </li>\n                    </ul>\n                    <input  type=\"number\" placeholder=\"amount (KGs)\"/> \n                    <button onClick = {this.fakeTransact} className='btn'> REQUEST </button>\n                </div>\n                <div id= 'material-content' className={`material-card ${vis}`} >   \n                    <ul>\n                        <li><strong>SUPPLIER:</strong> {suppliers[1]} </li>\n                        <li><strong>MATERIAL ID:</strong> uid{21+12} </li>\n                        <li><strong>MATERIAL NAME:</strong> {this.state.input.toUpperCase()} </li> \n                        <li> <strong>MATERIAL TYPE: </strong> {types[0]}</li>\n                        <li> <strong>UNIT COST: {costs[3]} </strong> </li>\n                    </ul> \n                    <input  type=\"number\" placeholder=\"amount (KGs)\"/> \n                    <button onClick = {this.fakeTransact} className='btn'> REQUEST </button>\n                </div> */}\n\n            </form>\n            \n         );\n\n        \n\n    }\n}\n\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}