{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    console.log(this.props.time);\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../valid.svg\"),\n      width: \"90px\",\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"head log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", this.props.ship), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"TEMP:\"), \" \", this.props.temp), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"HUMIDITY:\"), \"  \", this.props.humid), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"STATUS:\"), \" \", React.createElement(\"span\", {\n      className: \"notify-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.material), \" \")));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      if (this.state.requestID !== \"\") {\n        let response = await this.props.contract.methods.getTrackLogs(id).call();\n\n        if (response.length === 0) {\n          this.setState({\n            msg: 'No tracking log is available for this request, please try again later.'.toUpperCase\n          });\n        }\n\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 3000);\n        let log = response.map((item, index) => {\n          const shipStatus = item.shipStatus;\n          const matStatus = item.materialStatus;\n          const temp = item.currentTemp;\n          const humid = item.currentHumidity;\n          const time = item.logTime;\n          const timeUTC = new Date();\n          console.log(index, shipStatus, matStatus, temp, humid, time, timeUTC);\n          this.setState({\n            shipStatus,\n            matStatus,\n            temp,\n            humid,\n            time\n          });\n          return React.createElement(TrackRecord, {\n            key: index,\n            status: item,\n            time: this.state.time,\n            ship: this.state.shipStatus,\n            material: this.state.matStatus,\n            temp: this.state.temp,\n            humid: this.state.humid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          response,\n          log\n        });\n      } else {\n        this.setState({\n          msg: 'Please Enter The Request ID!'.toUpperCase\n        });\n      }\n\n      this.setState({\n        requestID: \"\"\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW SHIPMENT STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: '40px 0px'\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.msg, \" \"), React.createElement(\"div\", {\n      className: \"response-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.log));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","TrackRecord","render","console","log","props","time","dateStr","Date","toString","dateArr","split","timestamp","join","require","ship","temp","humid","material","Track","constructor","state","logs","componentDidMount","requestID","handleSubmit","e","preventDefault","id","parseInt","response","contract","methods","getTrackLogs","call","length","setState","msg","toUpperCase","setTimeout","map","item","index","shipStatus","matStatus","materialStatus","currentTemp","currentHumidity","logTime","timeUTC","handleChange","requestIdRef","current","value","createRef","bind","acc","account","cont","marginRight","cursor","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    console.log(this.props.time)\n    const dateStr = new Date(this.props.time*1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp  = dateArr.join(\" \")\n    return (\n      <div className=\"track-record-container\"> \n      <img src={require(\"../valid.svg\")} width = '90px' alt= 'valid'/>\n      <ul className='record-list'>\n         <li className=\"timestamp log-item\"> {timestamp}</li>\n         <li className=\"head log-item\"> {this.props.ship}</li>\n         <hr className='custom-hr-full'/>\n         <li className=\"log-item\"><strong>TEMP:</strong> {this.props.temp}</li>\n         <li className=\"log-item\"> <strong>HUMIDITY:</strong>  {this.props.humid}</li>\n         <li className=\"log-item\"> <strong>STATUS:</strong> <span className=\"notify-text\">{this.props.material}</span> </li>\n      </ul>\n      \n      </div>\n    );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [] };\n\n  componentDidMount = async () => {};\n\n  state = { requestID: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n   \n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    if(this.state.requestID !== \"\") {\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      if(response.length === 0) {\n        this.setState({msg: 'No tracking log is available for this request, please try again later.'.toUpperCase});\n      }\n      setTimeout(() => {\n        this.setState({ msg: \" \" });\n      }, 3000);\n      let log = response.map((item,index) => {\n  \n        const shipStatus = item.shipStatus;\n        const matStatus = item.materialStatus;\n        const temp = item.currentTemp;\n        const humid = item.currentHumidity;\n        const time  = item.logTime;\n        const timeUTC = new Date();\n        console.log(index,shipStatus,matStatus,temp,humid,time,timeUTC)\n        this.setState({shipStatus,matStatus,temp,humid,time})\n        return <TrackRecord key={index}\n        status = {item}\n        time = {this.state.time}\n        ship = {this.state.shipStatus}\n        material = {this.state.matStatus}\n        temp = {this.state.temp}\n        humid = {this.state.humid}\n         />\n      });\n\n      this.setState({ response, log });\n    } else {\n      this.setState ({msg: 'Please Enter The Request ID!'.toUpperCase})\n    }\n    \n    \n \n    this.setState({\n      requestID: \"\",\n    });\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{marginRight: '5px'}}> Request ID: </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n          />\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW SHIPMENT STATUS\"\n          />\n        </div>\n\n        <div style= {{margin: '40px 0px'}} className=\"query-result\">\n            {this.state.msg} </div>\n        <div className=\"response-text\">{this.state.log}</div>\n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}