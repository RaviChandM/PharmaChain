{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport Header from \"./components/Header\";\nimport SupplyForm from \"./components/SupplyForm\";\nimport Track from \"./components/TrackForm\";\nimport Inventory from \"./components/Inventory\";\nimport AddProduct from \"./components/AddProduct\";\nimport FinancialLog from \"./components/FinancialLog\";\nimport NewDemoTestContract from \"./contracts/NewDemoTest.json\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      accounts: null,\n      contract: null,\n      isMenuToggled: true\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts();\n        const balance = web3.utils.fromWei((await web3.eth.getBalance(accounts[0])), \"ether\"); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = NewDemoTestContract.networks[networkId];\n        const instance = new web3.eth.Contract(NewDemoTestContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        // this.setState({ web3, accounts, contract: instance }, this.runExample);\n\n        this.setState({\n          web3,\n          accounts,\n          balance,\n          contract: instance\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load Web3. Please check your web3 connection and try again!\"); //  console.error(error);\n      }\n    };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  //  runExample = async () => {\n  //  const {contract, accounts } = this.state;\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   const supplier =  await contract.methods.getSupplier('0xf333028b8Fc7a030F1186Db50BceF0C0607c2CF2').call();\n  // await contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: accounts[0]})\n  // const response = await contract.methods.getTrackLogs(1).call()\n  //   // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n  //   // Update state with the result.\n  //   this.setState({ supplier });\n  // this.setState({response});\n  //  };\n  toggleMenu() {\n    this.setState({\n      isMenuToggled: !this.state.isMenuToggled\n    });\n  }\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    let toggle;\n    this.state.isMenuToggled ? toggle = 'show' : toggle = 'hide';\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Header, {\n      accounts: this.state.accounts,\n      balance: this.state.balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggleMenu,\n      className: \"responsive-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"hamburger-menu\",\n      width: \"20px\",\n      src: require(\"../src/hamburger-menu.svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"navbar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/add-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"ADD PRODUCT\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/supply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"REQUEST MATERIAL\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/track\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"TRACK REQUESTS\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/inventory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"VIEW INVENTORY\"), \" \"), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      to: \"/financial-log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"FINANCIAL LOG\"), \" \"))), React.createElement(Route, {\n      path: \"/supply\",\n      exact: true,\n      render: props => React.createElement(SupplyForm, Object.assign({}, props, {\n        Web3: this.state.web3,\n        account: this.state.accounts,\n        contract: this.state.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/inventory\",\n      exact: true,\n      component: Inventory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/track\",\n      exact: true,\n      render: props => React.createElement(Track, Object.assign({}, props, {\n        account: this.state.accounts,\n        contract: this.state.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/add-product\",\n      exact: true,\n      render: props => React.createElement(AddProduct, Object.assign({}, props, {\n        accounts: this.state.accounts,\n        contract: this.state.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/financial-log\",\n      exact: true,\n      render: props => React.createElement(FinancialLog, Object.assign({}, props, {\n        accounts: this.state.accounts,\n        contract: this.state.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" \", this.state.response, \" \")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/App.js"],"names":["React","Component","getWeb3","Header","SupplyForm","Track","Inventory","AddProduct","FinancialLog","NewDemoTestContract","BrowserRouter","Route","NavLink","App","constructor","props","state","web3","accounts","contract","isMenuToggled","componentDidMount","eth","getAccounts","balance","utils","fromWei","getBalance","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","error","alert","toggleMenu","bind","render","toggle","require","response"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport Header from \"./components/Header\";\nimport SupplyForm from \"./components/SupplyForm\";\nimport Track from \"./components/TrackForm\";\nimport Inventory from \"./components/Inventory\";\nimport AddProduct from \"./components/AddProduct\";\nimport FinancialLog from \"./components/FinancialLog\";\nimport NewDemoTestContract from \"./contracts/NewDemoTest.json\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // state = { storageValue: 0, web3: null, accounts: null, contract: null };\n  state = { web3: null, accounts: null, contract: null , isMenuToggled: true };\n\n  constructor(props) {\n    super(props);\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      const balance = web3.utils.fromWei(\n      await web3.eth.getBalance(accounts[0]),\n        \"ether\"\n      );\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = NewDemoTestContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        NewDemoTestContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      // this.setState({ web3, accounts, contract: instance }, this.runExample);\n      this.setState({ web3, accounts, balance, contract: instance });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(`Failed to load Web3. Please check your web3 connection and try again!`);\n      //  console.error(error);\n    }\n  };\n\n  //  runExample = async () => {\n  //  const {contract, accounts } = this.state;\n\n  //   // Stores a given value, 5 by default.\n  //   // await contract.methods.set(5).send({ from: accounts[0] });\n  //   const supplier =  await contract.methods.getSupplier('0xf333028b8Fc7a030F1186Db50BceF0C0607c2CF2').call();\n  // await contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: accounts[0]})\n  // const response = await contract.methods.getTrackLogs(1).call()\n\n  //   // Get the value from the contract to prove it worked.\n  //   // const response = await contract.methods.get().call();\n\n  //   // Update state with the result.\n  //   this.setState({ supplier });\n  // this.setState({response});\n  //  };\n\n  toggleMenu() {\n    this.setState({isMenuToggled: !this.state.isMenuToggled})\n    \n  }\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    let toggle\n    this.state.isMenuToggled ?  toggle = 'show' : toggle = 'hide'\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header accounts={this.state.accounts} balance={this.state.balance} />\n          <button onClick={this.toggleMenu} className=\"responsive-menu\">\n            <img\n            alt = \"hamburger-menu\"\n            width = \"20px\"\n            src={require(\"../src/hamburger-menu.svg\")}/>\n            </button>\n          <div className=\"navbar-container\">\n            <ul className={`nav-list`}>\n              <li className=\"nav-item\">\n                <NavLink to=\"/add-product\">ADD PRODUCT</NavLink>{\" \"}\n              </li>\n              <li className=\"nav-item\">\n                {\" \"}\n                <NavLink to=\"/supply\">REQUEST MATERIAL</NavLink>{\" \"}\n              </li>\n              <li className=\"nav-item\">\n                {\" \"}\n                <NavLink to=\"/track\">TRACK REQUESTS</NavLink>{\" \"}\n              </li>\n              <li className=\"nav-item\">\n                {\" \"}\n                <NavLink to=\"/inventory\">VIEW INVENTORY</NavLink>{\" \"}\n              </li>\n              <li className=\"nav-item\">\n                {\" \"}\n                <NavLink to=\"/financial-log\">FINANCIAL LOG</NavLink>{\" \"}\n              </li>\n            </ul>\n          </div>\n\n          {/* <Route path=\"/\" exact component={App} /> */}\n          {/* <Route path=\"/add-product\" exact \n        render={(props) => (\n          <AddProduct {...props} accounts={this.state.accounts} contract={this.state.contract} />\n        )} /> */}\n\n          <Route\n            path=\"/supply\"\n            exact\n            render={(props) => (\n              <SupplyForm\n                {...props}\n                Web3={this.state.web3}\n                account={this.state.accounts}\n                contract={this.state.contract}\n              />\n            )}\n          />\n          <Route path=\"/inventory\" exact component={Inventory} />\n          <Route\n            path=\"/track\"\n            exact\n            render={(props) => (\n              <Track\n                {...props}\n                account={this.state.accounts}\n                contract={this.state.contract}\n              />\n            )}\n          />\n          <Route\n            path=\"/add-product\"\n            exact\n            render={(props) => (\n              <AddProduct\n                {...props}\n                accounts={this.state.accounts}\n                contract={this.state.contract}\n              />\n            )}\n          />\n          <Route path=\"/financial-log\" exact\n          render={(props) => (\n            <FinancialLog\n              {...props}\n              accounts={this.state.accounts}\n              contract={this.state.contract}\n            />\n          )}/>\n          {/* <Navbar /> */}\n          {/* <ProductForm contract = {this.state.contract} accounts = {this.state.accounts} /> */}\n          {/* <Inventory /> */}\n          {/* <MaterialsList/> */}\n          {/* <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <p>\n          Try changing the value stored on <strong>line 40</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div> */}\n          <div> {this.state.response} </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}