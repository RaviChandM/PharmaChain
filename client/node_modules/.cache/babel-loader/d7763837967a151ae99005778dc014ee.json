{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass HistoryChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: this.props.chartData,\n      tempSet: this.props.temp,\n      humidSet: this.props.humid,\n      timeSet: this.props.timestamp\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.temp !== this.props.temp || prevProps.humid !== this.props.humid || prevProps.timestamp !== this.props.timestamp) {\n      let chartData = this.state.chartData;\n      chartData.labels = this.props.timestamp;\n      chartData.datasets[0].data = this.props.temp;\n      chartData.datasets[1].data = this.props.humid;\n      this.setState({\n        chartData\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Line, {\n      data: this.state.chartData,\n      width: 650,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/invalid-1.svg\"),\n      alt: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/valid-3.svg\"),\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n}\n\nclass TrackRecord extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tempHistory: [],\n      humidHistory: []\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (this.props.ship === \"ABNORMAL\" ? statusColor = \"alert-text\" : statusColor = \"good-text\") return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(TrackImg, {\n      status: this.props.ship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"head log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", this.props.request), React.createElement(\"li\", {\n      style: {\n        fontStyle: \"normal\"\n      },\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", \"SHIPMENT VERIFIED\"), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.description, \".\"), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"STATUS:\"), React.createElement(\"span\", {\n      className: \"\".concat(statusColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" \", this.props.ship))));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      wholeActive: false,\n      isTab1Active: false,\n      isTab2Active: false,\n      requestID: \"\",\n      chartData: {}\n    };\n\n    this.componentWillMount = async () => {\n      this.getChartData();\n    };\n\n    this.toggleSection1 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab1Active: !this.state.isTab1Active,\n        active: !this.state.active\n      });\n    };\n\n    this.toggleSection2 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab2Active: !this.state.isTab2Active,\n        active: !this.state.active\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call();\n      let tempHistory = trackHistory.temp;\n      let humidHistory = trackHistory.humid;\n      let events = await this.props.contract.getPastEvents(\"DataSent\", {\n        fromBlock: 0\n      });\n      let timeLogs = events.map((log, index) => {\n        let logTime = new Date(log.returnValues.timestamp * 1000);\n        let hours = logTime.getUTCHours();\n        let minutes = logTime.getUTCMinutes().toString().padStart(2, \"0\");\n        let day = logTime.getUTCDay();\n        let month = logTime.getUTCMonth() + 1;\n        let year = logTime.getUTCFullYear();\n        let timestamp = day + \"/\" + month + \"/\" + year + \" \" + hours + \":\" + minutes; // const dateArr =time.split(\" \", 5);\n        // const timestamp = dateArr.join(\" \");\n\n        return timestamp;\n      });\n      this.setState({\n        trackHistory,\n        tempHistory,\n        humidHistory,\n        timeLogs\n      }); // send data to chart\n\n      this.getChartData(tempHistory, humidHistory, timeLogs);\n\n      if (response.length === 0) {\n        this.setState({\n          msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase(),\n          wholeActive: false\n        });\n      } else {\n        this.setState({\n          wholeActive: true\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \"\"\n        });\n      }, 3000);\n      let log = response.map((item, index) => {\n        const shipmentStatus = item.shipmentStatus;\n        const requestStatus = item.requestStatus;\n        const loggedBy = item.logger;\n        const description = item.description;\n        const time = item.logTime;\n        this.setState({\n          shipmentStatus,\n          requestStatus,\n          loggedBy,\n          description,\n          time\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.state.time,\n          request: this.state.requestStatus,\n          ship: this.state.shipmentStatus,\n          logger: this.state.loggedBy,\n          description: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \" \",\n        isTab1Active: true\n      });\n    };\n\n    this.getChartData = async (temp, humid, timestamp) => {\n      this.setState({\n        responsive: \"true\",\n        chartData: {\n          labels: timestamp,\n          datasets: [{\n            label: \"Temperature (Â°C)\",\n            data: temp,\n            backgroundColor: [\"rgba(255, 99, 132, 0)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\"],\n            pointBackgroundColor: \"rgba(255, 99, 132, 0.9)\",\n            borderWidth: 2\n          }, {\n            label: \"Humidity (%)\",\n            data: humid,\n            backgroundColor: [\"rgba(54, 162, 235, 0)\"],\n            borderColor: [\"rgba(54, 162, 235, 1)\"],\n            pointBackgroundColor: \"rgba(54, 162, 235, 0.9)\",\n            borderWidth: 2\n          }]\n        }\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  render() {\n    let view1, view2, wholeView;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.wholeActive ? wholeView = \"show\" : wholeView = \"hide\";\n    this.state.isTab1Active ? view1 = \"show\" : view1 = \"hide\";\n    this.state.isTab2Active ? view2 = \"show\" : view2 = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \" Tracking Number : \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"div\", {\n      className: \" \".concat(wholeView, \" accordion-tabs\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection1,\n      className: \" accordion-toggle one \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"+ TRACKING SUMMARY\"), React.createElement(\"div\", {\n      className: \"\".concat(view1, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.log), React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection2,\n      className: \" accordion-toggle two \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"+ TEMPRATURE HISTORY\"), React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      className: \" \".concat(view2, \" response-logs tab2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(view2, \" chart-container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(HistoryChart, {\n      style: {\n        marginBottom: \"30px\"\n      },\n      tempData: this.state.tempHistory,\n      HumidData: this.state.HumidData,\n      chartData: this.state.chartData,\n      temp: this.state.tempHistory,\n      humid: this.state.humidHistory,\n      timestamp: this.state.timeLogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","Line","HistoryChart","constructor","props","state","chartData","tempSet","temp","humidSet","humid","timeSet","timestamp","componentDidUpdate","prevProps","labels","datasets","data","setState","render","maintainAspectRatio","TrackImg","status","require","TrackRecord","tempHistory","humidHistory","statusColor","dateStr","Date","time","toString","dateArr","split","join","ship","request","fontStyle","description","Track","logs","wholeActive","isTab1Active","isTab2Active","requestID","componentWillMount","getChartData","toggleSection1","e","preventDefault","active","toggleSection2","handleSubmit","id","parseInt","response","contract","methods","getTrackLogs","call","trackHistory","getShipmentTrackData","events","getPastEvents","fromBlock","timeLogs","map","log","index","logTime","returnValues","hours","getUTCHours","minutes","getUTCMinutes","padStart","day","getUTCDay","month","getUTCMonth","year","getUTCFullYear","length","msg","toUpperCase","setTimeout","item","shipmentStatus","requestStatus","loggedBy","logger","responsive","label","backgroundColor","borderColor","pointBackgroundColor","borderWidth","handleChange","requestIdRef","current","value","createRef","bind","view1","view2","wholeView","acc","account","cont","marginRight","cursor","margin","height","marginBottom","HumidData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass HistoryChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: this.props.chartData,\n      tempSet: this.props.temp,\n      humidSet: this.props.humid,\n      timeSet: this.props.timestamp,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.temp !== this.props.temp ||\n      prevProps.humid !== this.props.humid ||\n      prevProps.timestamp !== this.props.timestamp\n    ) {\n      let { chartData } = this.state;\n      chartData.labels = this.props.timestamp;\n      chartData.datasets[0].data = this.props.temp;\n      chartData.datasets[1].data = this.props.humid;\n      this.setState({ chartData });\n    }\n  }\n\n  render() {\n    return (\n      <Line\n        data={this.state.chartData}\n        width={650}\n        options={{ maintainAspectRatio: false }}\n      />\n    );\n  }\n}\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return <img src={require(\"../assets/invalid-1.svg\")} alt=\"invalid\" />;\n  } else {\n    return <img src={require(\"../assets/valid-3.svg\")} alt=\"valid\" />;\n  }\n}\nclass TrackRecord extends Component {\n  state = { tempHistory: [], humidHistory: [] };\n  // constructor(props) {\n  //   super(props);\n\n  // }\n\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (\n      this.props.ship === \"ABNORMAL\"\n        ? (statusColor = \"alert-text\")\n        : (statusColor = \"good-text\")\n    )\n      return (\n        <div className=\"track-record-container\">\n          <TrackImg status={this.props.ship} />\n          <ul className=\"record-list\">\n            <li className=\"timestamp log-item\"> {timestamp}</li>\n            <li className=\"head log-item\"> {this.props.request}</li>\n            <li style={{ fontStyle: \"normal\" }} className=\"timestamp log-item\">\n              {\" \"}\n              SHIPMENT VERIFIED\n            </li>\n            <hr className=\"custom-hr-full\" />\n            <li className=\"log-item\">{this.props.description}.</li>\n            {/* <li className=\"log-item\">\n              <strong>TEMP:</strong> {this.props.temp} Â°C \n            </li>\n            <li className=\"log-item\">\n              <strong>HUMIDITY:</strong>  {this.props.humid} %\n            </li> */}\n            <li className=\"log-item\">\n              <strong>STATUS:</strong>\n              <span className={`${statusColor}`}> {this.props.ship}</span>\n            </li>\n          </ul>\n        </div>\n      );\n  }\n}\n\nclass Track extends Component {\n  state = {\n    logs: [],\n    wholeActive: false,\n    isTab1Active: false,\n    isTab2Active: false,\n    requestID: \"\",\n    chartData: {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  componentWillMount = async () => {\n    this.getChartData();\n  };\n\n  toggleSection1 = async (e) => {\n    e.preventDefault();\n    this.setState({\n      isTab1Active: !this.state.isTab1Active,\n      active: !this.state.active,\n    });\n  };\n  toggleSection2 = async (e) => {\n    e.preventDefault();\n    this.setState({\n      isTab2Active: !this.state.isTab2Active,\n      active: !this.state.active,\n    });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    let trackHistory = await this.props.contract.methods\n      .getShipmentTrackData(id)\n      .call();\n    let tempHistory = trackHistory.temp;\n    let humidHistory = trackHistory.humid;\n\n    let events = await this.props.contract.getPastEvents(\"DataSent\", {\n      fromBlock: 0,\n    });\n    let timeLogs = events.map((log, index) => {\n      let logTime = new Date(log.returnValues.timestamp * 1000);\n      let hours = logTime.getUTCHours();\n      let minutes = logTime.getUTCMinutes().toString().padStart(2, \"0\");\n      let day = logTime.getUTCDay();\n      let month = logTime.getUTCMonth() + 1;\n      let year = logTime.getUTCFullYear();\n      let timestamp =\n        day + \"/\" + month + \"/\" + year + \" \" + hours + \":\" + minutes;\n\n      // const dateArr =time.split(\" \", 5);\n      // const timestamp = dateArr.join(\" \");\n\n      return timestamp;\n    });\n    this.setState({ trackHistory, tempHistory, humidHistory, timeLogs });\n\n    // send data to chart\n    this.getChartData(tempHistory, humidHistory, timeLogs);\n\n    if (response.length === 0) {\n      this.setState({\n        msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase(),\n        wholeActive: false,\n      });\n    } else {\n      this.setState({ wholeActive: true });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \"\" });\n    }, 3000);\n\n    let log = response.map((item, index) => {\n      const shipmentStatus = item.shipmentStatus;\n      const requestStatus = item.requestStatus;\n      const loggedBy = item.logger;\n      const description = item.description;\n      const time = item.logTime;\n      this.setState({\n        shipmentStatus,\n        requestStatus,\n        loggedBy,\n        description,\n        time,\n      });\n\n      return (\n        <TrackRecord\n          key={index}\n          status={item}\n          time={this.state.time}\n          request={this.state.requestStatus}\n          ship={this.state.shipmentStatus}\n          logger={this.state.loggedBy}\n          description={this.state.description}\n        />\n      );\n    });\n\n    this.setState({ response, log });\n    this.setState({\n      requestID: \" \",\n      isTab1Active: true,\n    });\n  };\n\n  getChartData = async (temp, humid, timestamp) => {\n    this.setState({\n      responsive: \"true\",\n      chartData: {\n        labels: timestamp,\n        datasets: [\n          {\n            label: \"Temperature (Â°C)\",\n            data: temp,\n            backgroundColor: [\"rgba(255, 99, 132, 0)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\"],\n            pointBackgroundColor: \"rgba(255, 99, 132, 0.9)\",\n            borderWidth: 2,\n          },\n          {\n            label: \"Humidity (%)\",\n            data: humid,\n            backgroundColor: [\"rgba(54, 162, 235, 0)\"],\n            borderColor: [\"rgba(54, 162, 235, 1)\"],\n            pointBackgroundColor: \"rgba(54, 162, 235, 0.9)\",\n            borderWidth: 2,\n          },\n        ],\n      },\n    });\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let view1, view2, wholeView;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    this.state.wholeActive ? (wholeView = \"show\") : (wholeView = \"hide\");\n    this.state.isTab1Active ? (view1 = \"show\") : (view1 = \"hide\");\n    this.state.isTab2Active ? (view2 = \"show\") : (view2 = \"hide\");\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{ marginRight: \"5px\" }}> Tracking Number : </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n            required=\"required\"\n          />\n\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW STATUS\"\n          />\n        </div>\n\n        <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n          {this.state.msg}\n        </div>\n        <div className={` ${wholeView} accordion-tabs`}>\n          <a\n            href=\"/track\"\n            onClick={this.toggleSection1}\n            className={` accordion-toggle one `}\n          >\n            + TRACKING SUMMARY\n          </a>\n          <div className={`${view1} response-logs tab`}>{this.state.log}</div>\n          <a\n            href=\"/track\"\n            onClick={this.toggleSection2}\n            className={` accordion-toggle two `}\n          >\n            + TEMPRATURE HISTORY\n          </a>\n          <div\n            style={{ height: \"200px\" }}\n            className={` ${view2} response-logs tab2`}\n          >\n            {/* 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 */}\n            {/* {this.state.tempTrackHistory}\n            {this.state.humidTrackHistory} */}\n            {/* <p> Chart Goes here </p> */}\n            <div className={`${view2} chart-container`}>\n              <HistoryChart\n\n                style={{ marginBottom: \"30px\" }}\n                tempData={this.state.tempHistory}\n                HumidData={this.state.HumidData}\n                chartData={this.state.chartData}\n                temp={this.state.tempHistory}\n                humid={this.state.humidHistory}\n                timestamp={this.state.timeLogs}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}