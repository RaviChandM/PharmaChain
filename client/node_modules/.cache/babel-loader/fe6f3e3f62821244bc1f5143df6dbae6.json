{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(this.props.time);\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../valid.svg\"),\n      width: \"70px\",\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" \", this.props.ship), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", this.props.temp), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" \", this.props.humid), React.createElement(\"li\", {\n      className: \"log-item\",\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" \", this.props.material, \" \")));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: []\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\"\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call(); // let log1 = response[0]\n\n      let log = response.map((item, index) => {\n        // response.forEach( (element,index) => {\n        //   const shipStatus = element.shipStatus;\n        //   const matStatus = element.materialStatus;\n        //   const temp = element.currentTemp;\n        //   const humid = element.currentHumidity;\n        //   const time  = element.logTime;\n        //   const timeUTC = new Date(0);\n        //   console.log(index,shipStatus,matStatus,temp,humid,time,timeUTC)\n        //   this.setState({shipStatus,matStatus,temp,humid,time})\n        // });\n        const shipStatus = item.shipStatus;\n        const matStatus = item.materialStatus;\n        const temp = item.currentTemp;\n        const humid = item.currentHumidity;\n        const time = item.logTime;\n        const timeUTC = new Date();\n        console.log(index, shipStatus, matStatus, temp, humid, time, timeUTC);\n        this.setState({\n          shipStatus,\n          matStatus,\n          temp,\n          humid,\n          time\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.state.time,\n          ship: this.state.shipStatus,\n          material: this.state.matStatus,\n          temp: this.state.temp,\n          humid: this.state.humid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \"\"\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" Request ID: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW SHIPMENT STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"response-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.log));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","TrackRecord","constructor","props","render","console","log","time","dateStr","Date","toString","dateArr","split","timestamp","join","require","ship","temp","humid","color","material","Track","state","logs","componentDidMount","requestID","handleSubmit","e","preventDefault","id","parseInt","response","contract","methods","getTrackLogs","call","map","item","index","shipStatus","matStatus","materialStatus","currentTemp","currentHumidity","logTime","timeUTC","setState","handleChange","requestIdRef","current","value","createRef","bind","acc","account","cont","marginRight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass TrackRecord extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    console.log(this.props.time)\n    const dateStr = new Date(this.props.time*1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp  = dateArr.join(\" \")\n    return (\n      <div className=\"track-record-container\"> \n      <img src={require(\"../valid.svg\")} width = '70px' alt= 'valid'/>\n      <ul className='record-list'>\n         <li className=\"log-item\"> {timestamp}</li>\n         <li className=\"log-item\"> {this.props.ship}</li>\n         <li className=\"log-item\"> {this.props.temp}</li>\n         <li className=\"log-item\"> {this.props.humid}</li>\n         <li className=\"log-item\" style={{color: 'green'}}> {this.props.material} </li>\n      </ul>\n      \n      </div>\n    );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [] };\n\n  componentDidMount = async () => {};\n\n  state = { requestID: \"\" };\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    // let log1 = response[0]\n    let log = response.map((item,index) => {\n      // response.forEach( (element,index) => {\n      //   const shipStatus = element.shipStatus;\n      //   const matStatus = element.materialStatus;\n      //   const temp = element.currentTemp;\n      //   const humid = element.currentHumidity;\n      //   const time  = element.logTime;\n      //   const timeUTC = new Date(0);\n      //   console.log(index,shipStatus,matStatus,temp,humid,time,timeUTC)\n      //   this.setState({shipStatus,matStatus,temp,humid,time})\n      // });\n\n      const shipStatus = item.shipStatus;\n      const matStatus = item.materialStatus;\n      const temp = item.currentTemp;\n      const humid = item.currentHumidity;\n      const time  = item.logTime;\n      const timeUTC = new Date();\n      console.log(index,shipStatus,matStatus,temp,humid,time,timeUTC)\n      this.setState({shipStatus,matStatus,temp,humid,time})\n      return <TrackRecord key={index}\n      status = {item}\n      time = {this.state.time}\n      ship = {this.state.shipStatus}\n      material = {this.state.matStatus}\n      temp = {this.state.temp}\n      humid = {this.state.humid}\n       />\n    })\n    this.setState({ response, log });\n    this.setState({\n      requestID: \"\",\n    });\n  };\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{marginRight: '5px'}}> Request ID: </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n          />\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW SHIPMENT STATUS\"\n          />\n        </div>\n\n        <div className=\"response-text\">{this.state.log}</div>\n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}