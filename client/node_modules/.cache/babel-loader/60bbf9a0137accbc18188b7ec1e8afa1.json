{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/BankAccounts.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      address: \"\",\n      accName: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const accountName = this.state.accName;\n      console.log(accountName);\n      await this.props.contract.methods.selfCreateBankAccount(accountName).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"account was created successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 3000);\n      });\n      this.setState({\n        address: \"\",\n        accName: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        accName: this.accNameRef.current.value\n      });\n    };\n\n    this.accNameRef = React.createRef();\n    this.accAddrRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" Your Name: \"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      ref: this.accNameRef,\n      type: \"text\",\n      placeholder: \"e.g. MY COMPANY PHARMACEUTICAL INDUSTRIES\",\n      value: this.state.accName,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"CREATE ACCOUNT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass Deposit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      depositAmount: 0,\n      usrAddr: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const amount = parseInt(this.state.depositAmount, 10);\n      await this.props.contract.methods.selfDeposit(amount).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"deposit was completed successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 3000);\n      });\n      this.setState({\n        depositAmount: \"\",\n        usrAddr: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        depositAmount: this.amountRef.current.value\n      });\n    };\n\n    this.amountRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \" newform-container bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" Deposit \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" Enter Amount: \"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      ref: this.amountRef,\n      type: \"number\",\n      placeholder: \"e.g. 125000\",\n      value: this.state.depositAmount,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"DEPOSIT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass Withdraw extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      withdrawalAmount: 0,\n      usrAddr: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const amount = parseInt(this.state.withdrawalAmount, 10);\n      await this.props.contract.methods.selfWithdraw(amount).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Withdrawal completed successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 3000);\n      });\n      this.setState({\n        withdrawalAmount: \"\",\n        usrAddr: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        withdrawalAmount: this.amountRef.current.value\n      });\n    };\n\n    this.amountRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \" newform-container bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Withdraw \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" Enter Amount: \"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      ref: this.amountRef,\n      type: \"number\",\n      placeholder: \"e.g. 125000\",\n      value: this.state.withdrawalAmount,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"WITHDRAW\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass Transfer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\",\n      transferAmount: 0,\n      fromAddr: \"\",\n      toAddr: \"\"\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const to = this.state.toAddr;\n      const amount = parseInt(this.state.transferAmount, 10);\n      await this.props.contract.methods.selfTransfer(to, amount).send({\n        from: this.props.account[0]\n      }).once(\"receipt\", receipt => {\n        this.setState({\n          msg: \"Transfer was completed successfully!\"\n        });\n        setTimeout(() => {\n          this.setState({\n            msg: \" \"\n          });\n        }, 3000);\n      });\n      this.setState({\n        transferAmount: \"\",\n        fromAddr: \"\",\n        toAddr: \"\"\n      });\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        transferAmount: this.amountRef.current.value,\n        toAddr: this.toRef.current.value\n      });\n    };\n\n    this.amountRef = React.createRef();\n    this.toRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \" newform-container bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \" Transfer \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \" Enter Amount: \"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      ref: this.amountRef,\n      type: \"number\",\n      placeholder: \"e.g. 125000\",\n      value: this.state.transferAmount,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \" Transfer to: \"), React.createElement(\"input\", {\n      onChange: this.onChange,\n      ref: this.toRef,\n      type: \"text\",\n      placeholder: \"e.g. 0x9F04c9437De819788e7f35D25ed236A6EfA1653B\",\n      value: this.state.toAddr,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"TRANSFER\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      className: \"notify-data-container notify-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.state.msg));\n  }\n\n}\n\nclass ManageAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msg: \"\",\n      userAddr: \"\",\n      userName: \"\",\n      bankAddr: \"0x00\",\n      balance: 0\n    };\n\n    this.componentDidMount = async () => {\n      const bank = await this.props.contract.methods.getBank().call();\n      const balance = await this.props.contract.methods.getBalance(this.props.account[0]).call();\n      const balanceUSD = balance.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n      const userInfo = await this.props.contract.methods.getAccountDetails(this.props.account[0]).call();\n      const addr = userInfo.userId;\n      const name = userInfo.userName;\n      const accState = userInfo.isActive;\n      this.setState({\n        bank,\n        balanceUSD,\n        userAddr: addr,\n        userName: name,\n        accState\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  //   this.accAddrRef = React.createRef();\n  //   this.onSubmit = this.onSubmit.bind(this);\n  //   this.onChange = this.onChange.bind(this);\n  // }\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web3 = this.props.web3;\n\n    if (!acc || !cont || !web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    if (!this.state.accState) {\n      return React.createElement(\"div\", {\n        className: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \" \", \"You don't have a bank account to manage! Please create an account and try again!\");\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        margin: \"0\",\n        padding: \"0\"\n      },\n      className: \"newform-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"account-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Bank ID:\"), \" \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, this.state.bank), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \" Account ID:\"), \" \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, this.state.userAddr), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" Username:\"), \" \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, this.state.userName), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \" Current Balance:\"), \" \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, this.state.balance, \" \"))), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(Deposit, {\n      account: this.props.account,\n      contract: this.props.contract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"custom-hr-half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(Withdraw, {\n      account: this.props.account,\n      contract: this.props.contract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"custom-hr-half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Transfer, {\n      account: this.props.account,\n      contract: this.props.contract,\n      web3: this.props.web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass BankAccounts extends Component {\n  // constructor(props) {\n  //     super(props);\n  // }\n  render() {\n    let acc = this.props.accounts;\n    let cont = this.props.contract;\n    let web3 = this.props.web3;\n\n    if (!acc || !cont || !web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"product-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"side-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"mini-nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/bank-account/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"+ CREATE ACCOUNT\")), React.createElement(\"li\", {\n      className: \"link-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/bank-account/manage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"+ MANAGE ACCOUNT\")))), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/bank-account/new\",\n      exact: true,\n      render: props => React.createElement(CreateAccount, Object.assign({}, props, {\n        account: this.props.accounts,\n        contract: this.props.contract,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/bank-account/manage\",\n      exact: true,\n      render: props => React.createElement(ManageAccount, Object.assign({}, props, {\n        account: this.props.accounts,\n        contract: this.props.contract,\n        web3: this.props.web3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default BankAccounts;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/BankAccounts.js"],"names":["React","Component","BrowserRouter","Route","NavLink","CreateAccount","constructor","props","state","msg","address","accName","onSubmit","e","preventDefault","accountName","console","log","contract","methods","selfCreateBankAccount","send","from","account","once","receipt","setState","setTimeout","onChange","accNameRef","current","value","createRef","accAddrRef","bind","render","acc","cont","marginTop","Deposit","depositAmount","usrAddr","amount","parseInt","selfDeposit","amountRef","Withdraw","withdrawalAmount","selfWithdraw","Transfer","transferAmount","fromAddr","toAddr","to","selfTransfer","toRef","ManageAccount","userAddr","userName","bankAddr","balance","componentDidMount","bank","getBank","call","getBalance","balanceUSD","toLocaleString","style","currency","userInfo","getAccountDetails","addr","userId","name","accState","isActive","web3","margin","padding","BankAccounts","accounts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\n\nclass CreateAccount extends Component {\n  state = { msg: \"\", address: \"\", accName: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.accNameRef = React.createRef();\n    this.accAddrRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const accountName = this.state.accName;\n    console.log(accountName);\n\n    await this.props.contract.methods\n      .selfCreateBankAccount(accountName)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"account was created successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 3000);\n      });\n\n    this.setState({ address: \"\", accName: \"\" });\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      accName: this.accNameRef.current.value,\n    });\n  };\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    return (\n      <form onSubmit={this.onSubmit} className=\"newform-container\">\n        <label> Your Name: </label>\n        <input\n          onChange={this.onChange}\n          ref={this.accNameRef}\n          type=\"text\"\n          placeholder=\"e.g. MY COMPANY PHARMACEUTICAL INDUSTRIES\"\n          value={this.state.accName}\n          required = \"required\"\n        />\n        <div>\n          <input className=\"btn\" type=\"submit\" value=\"CREATE ACCOUNT\" />\n        </div>\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text \"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\nclass Deposit extends Component {\n  state = { msg: \"\", depositAmount: 0, usrAddr: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.amountRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const amount = parseInt(this.state.depositAmount, 10);\n\n    await this.props.contract.methods\n      .selfDeposit(amount)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"deposit was completed successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 3000);\n      });\n\n    this.setState({ depositAmount: \"\", usrAddr: \"\" });\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      depositAmount: this.amountRef.current.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\" newform-container bank\">\n        <h4> Deposit </h4>\n        <label> Enter Amount: </label>\n        <input\n          onChange={this.onChange}\n          ref={this.amountRef}\n          type=\"number\"\n          placeholder=\"e.g. 125000\"\n          value={this.state.depositAmount}\n          required = \"required\"\n        />\n        <div>\n          <input className=\"btn\" type=\"submit\" value=\"DEPOSIT\" />\n        </div>\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text \"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass Withdraw extends Component {\n  state = { msg: \"\", withdrawalAmount: 0, usrAddr: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.amountRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const amount = parseInt(this.state.withdrawalAmount, 10);\n    await this.props.contract.methods\n      .selfWithdraw(amount)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Withdrawal completed successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 3000);\n      });\n\n    this.setState({ withdrawalAmount: \"\", usrAddr: \"\" });\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      withdrawalAmount: this.amountRef.current.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\" newform-container bank\">\n        <h4> Withdraw </h4>\n        <label> Enter Amount: </label>\n        <input\n          onChange={this.onChange}\n          ref={this.amountRef}\n          type=\"number\"\n          placeholder=\"e.g. 125000\"\n          value={this.state.withdrawalAmount}\n          required = \"required\"\n        />\n        <div>\n          <input className=\"btn\" type=\"submit\" value=\"WITHDRAW\" />\n        </div>\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text \"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass Transfer extends Component {\n  state = { msg: \"\", transferAmount: 0, fromAddr: \"\", toAddr: \"\" };\n\n  constructor(props) {\n    super(props);\n    this.amountRef = React.createRef();\n    this.toRef = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const to = this.state.toAddr;\n    const amount = parseInt(this.state.transferAmount, 10);\n    await this.props.contract.methods\n      .selfTransfer(to, amount)\n      .send({ from: this.props.account[0] })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ msg: \"Transfer was completed successfully!\" });\n        setTimeout(() => {\n          this.setState({ msg: \" \" });\n        }, 3000);\n      });\n\n    this.setState({ transferAmount: \"\", fromAddr: \"\", toAddr: \"\" });\n  };\n\n  onChange = async (e) => {\n    this.setState({\n      transferAmount: this.amountRef.current.value,\n      toAddr: this.toRef.current.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className=\" newform-container bank\">\n        <h4> Transfer </h4>\n        <label> Enter Amount: </label>\n        <input\n          onChange={this.onChange}\n          ref={this.amountRef}\n          type=\"number\"\n          placeholder=\"e.g. 125000\"\n          value={this.state.transferAmount}\n          required = \"required\"\n        />\n        <label> Transfer to: </label>\n        <input\n          onChange={this.onChange}\n          ref={this.toRef}\n          type=\"text\"\n          placeholder=\"e.g. 0x9F04c9437De819788e7f35D25ed236A6EfA1653B\"\n          value={this.state.toAddr}\n          required = \"required\"\n        />\n        <div>\n          <input className=\"btn\" type=\"submit\" value=\"TRANSFER\" />\n        </div>\n        <div\n          style={{ marginTop: \"20px\" }}\n          className=\"notify-data-container notify-text \"\n        >\n          {this.state.msg}\n        </div>\n      </form>\n    );\n  }\n}\n\nclass ManageAccount extends Component {\n  state = { msg: \"\", userAddr: \"\", userName: \"\", bankAddr: \"0x00\", balance: 0 };\n\n  componentDidMount = async () => {\n    const bank = await this.props.contract.methods.getBank().call();\n    const balance = await this.props.contract.methods\n      .getBalance(this.props.account[0])\n      .call();\n      const balanceUSD = balance.toLocaleString('en-US',{style: 'currency', currency: 'USD'})\n    const userInfo = await this.props.contract.methods\n      .getAccountDetails(this.props.account[0])\n      .call();\n    const addr = userInfo.userId;\n    const name = userInfo.userName;\n    const accState = userInfo.isActive;\n    this.setState({ bank, balanceUSD, userAddr: addr, userName: name, accState });\n  };\n  // constructor(props) {\n  //   super(props);\n  //   this.accAddrRef = React.createRef();\n  //   this.onSubmit = this.onSubmit.bind(this);\n  //   this.onChange = this.onChange.bind(this);\n  // }\n\n  render() {\n    let acc = this.props.account;\n    let cont = this.props.contract;\n    let web3 = this.props.web3;\n    if (!acc || !cont || !web3) {\n      return <div> Loading..... </div>;\n    }\n    if (!this.state.accState) {\n      return (\n        <div className=\"alert\">\n          {\" \"}\n          You don't have a bank account to manage! Please create an account and\n          try again!\n        </div>\n      );\n    }\n    return (\n      <div style={{ margin: \"0\", padding: \"0\" }} className=\"newform-container\">\n        <div className=\"account-details\">\n          <p>\n            {\" \"}\n            <strong>Bank ID:</strong> <em>{this.state.bank}</em>{\" \"}\n          </p>\n          <p>\n            {\" \"}\n            <strong> Account ID:</strong> <em>{this.state.userAddr}</em>{\" \"}\n          </p>\n          <p>\n            {\" \"}\n            <strong> Username:</strong> <em>{this.state.userName}</em>{\" \"}\n          </p>\n          <p>\n            {\" \"}\n            <strong> Current Balance:</strong> <em>{this.state.balance} </em>\n          </p>\n        </div>\n        <hr className=\"custom-hr-full\" />\n        <Deposit account={this.props.account} contract={this.props.contract} />\n        <hr className=\"custom-hr-half\" />\n        <Withdraw account={this.props.account} contract={this.props.contract} />\n        <hr className=\"custom-hr-half\" />\n        <Transfer\n          account={this.props.account}\n          contract={this.props.contract}\n          web3={this.props.web3}\n        />\n      </div>\n    );\n  }\n}\n\nclass BankAccounts extends Component {\n  // constructor(props) {\n  //     super(props);\n  // }\n\n  render() {\n    let acc = this.props.accounts;\n    let cont = this.props.contract;\n    let web3 = this.props.web3;\n    if (!acc || !cont || !web3) {\n      return <div> Loading..... </div>;\n    }\n\n    return (\n      <BrowserRouter>\n        <div className=\"product-form-container\">\n          <div className=\"side-nav\">\n            <ul className=\"mini-nav-list\">\n              <li className=\"link-item\">\n                <NavLink to=\"/bank-account/new\">+ CREATE ACCOUNT</NavLink>\n              </li>\n              <li className=\"link-item\">\n                <NavLink to=\"/bank-account/manage\">+ MANAGE ACCOUNT</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main-content\">\n            <Route\n              path=\"/bank-account/new\"\n              exact\n              render={(props) => (\n                <CreateAccount\n                  {...props}\n                  account={this.props.accounts}\n                  contract={this.props.contract}\n                />\n              )}\n            />\n            <Route\n              path=\"/bank-account/manage\"\n              exact\n              render={(props) => (\n                <ManageAccount\n                  {...props}\n                  account={this.props.accounts}\n                  contract={this.props.contract}\n                  web3={this.props.web3}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default BankAccounts;\n"]},"metadata":{},"sourceType":"module"}