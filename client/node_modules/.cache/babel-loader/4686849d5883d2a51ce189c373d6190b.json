{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\n\nclass HistoryChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: this.props.chartData,\n      tempSet: this.props.temp,\n      humidSet: this.props.humid\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.temp !== this.props.temp || prevProps.humid !== this.props.humid) {\n      let chartData = this.state.chartData;\n      chartData.datasets[0].data = this.props.temp;\n      chartData.datasets[1].data = this.props.humid;\n      this.setState({\n        chartData\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Line, {\n      data: this.state.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/invalid-1.svg\"),\n      alt: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/valid-3.svg\"),\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n}\n\nclass TrackRecord extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tempHistory: [],\n      humidHistory: []\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (this.props.ship === \"ABNORMAL\" ? statusColor = \"alert-text\" : statusColor = \"good-text\") return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TrackImg, {\n      status: this.props.ship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"head log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", this.props.request), React.createElement(\"li\", {\n      style: {\n        fontStyle: 'normal'\n      },\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" SHIPMENT VERIFIED\"), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.props.description, \".\"), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"STATUS:\"), React.createElement(\"span\", {\n      className: \"\".concat(statusColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" \", this.props.ship))));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      wholeActive: false,\n      isTab1Active: false,\n      isTab2Active: true,\n      requestID: \"\",\n      chartData: {}\n    };\n\n    this.componentWillMount = async () => {\n      this.getChartData();\n    };\n\n    this.toggleSection1 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab1Active: !this.state.isTab1Active,\n        active: !this.state.active\n      });\n    };\n\n    this.toggleSection2 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab2Active: !this.state.isTab2Active,\n        active: !this.state.active\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call();\n      let tempHistory = trackHistory.temp;\n      let humidHistory = trackHistory.humid;\n      console.log(tempHistory, humidHistory); //   myContract.getPastEvents('MyEvent', {\n      //     filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n      //     fromBlock: 0,\n      //     toBlock: 'latest'\n      // }, function(error, events){ console.log(events); })\n      // .then(function(events){\n      //     console.log(events) // same results as the optional callback above\n      // });\n\n      let events = await this.props.contract.getPastEvents('DataSent', {\n        fromBlock: 0\n      });\n      this.setState({\n        trackHistory,\n        tempHistory,\n        humidHistory\n      }); // send data to chart\n\n      this.getChartData(id, tempHistory, humidHistory);\n\n      if (response.length === 0) {\n        this.setState({\n          msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase()\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \"\"\n        });\n      }, 3000);\n      let log = response.map((item, index) => {\n        const shipmentStatus = item.shipmentStatus;\n        const requestStatus = item.requestStatus;\n        const loggedBy = item.logger;\n        const description = item.description;\n        const time = item.logTime;\n        this.setState({\n          shipmentStatus,\n          requestStatus,\n          loggedBy,\n          description,\n          time\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.state.time,\n          request: this.state.requestStatus,\n          ship: this.state.shipmentStatus,\n          logger: this.state.loggedBy,\n          description: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \" \",\n        isTab1Active: true,\n        wholeActive: true\n      });\n    };\n\n    this.getChartData = async (id, temp, humid) => {\n      this.setState({\n        chartData: {\n          labels: ['1/2', '2/2', '3/2', '4/2', '5/2', '6/2', '7/2'],\n          datasets: [{\n            label: 'Temperature (Â°C)',\n            data: temp,\n            backgroundColor: ['rgba(255, 99, 132, 0)'],\n            borderColor: ['rgba(255, 99, 132, 1)'],\n            pointBackgroundColor: 'rgba(255, 99, 132, 0.9)',\n            borderWidth: 2\n          }, {\n            label: 'Humidity (%)',\n            data: humid,\n            backgroundColor: ['rgba(54, 162, 235, 0)'],\n            borderColor: ['rgba(54, 162, 235, 1)'],\n            pointBackgroundColor: 'rgba(54, 162, 235, 0.9)',\n            borderWidth: 2\n          }]\n        }\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  render() {\n    let view1, view2, wholeView, activated;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.wholeActive ? wholeView = \"show\" : wholeView = \"hide\";\n    this.state.isTab1Active ? view1 = \"show\" : view1 = \"hide\";\n    this.state.isTab2Active ? view2 = \"show\" : view2 = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \" Tracking Number : \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"div\", {\n      className: \" \".concat(wholeView, \" accordion-tabs\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection1,\n      className: \"\".concat(activated, \"  accordion-toggle one \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"+ TRACKING SUMMARY  \"), React.createElement(\"div\", {\n      className: \"\".concat(view1, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, this.state.log), React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection2,\n      className: \"\".concat(this.state.active, \"  accordion-toggle two \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"+ TEMPRATURE HISTORY \"), React.createElement(\"div\", {\n      style: {\n        height: '200px'\n      },\n      className: \" \".concat(view2, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(HistoryChart, {\n      tempData: this.state.tempHistory,\n      HumidData: this.state.HumidData,\n      chartData: this.state.chartData,\n      temp: this.state.tempHistory,\n      humid: this.state.humidHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","Line","HistoryChart","constructor","props","state","chartData","tempSet","temp","humidSet","humid","componentDidUpdate","prevProps","datasets","data","setState","render","TrackImg","status","require","TrackRecord","tempHistory","humidHistory","statusColor","dateStr","Date","time","toString","dateArr","split","timestamp","join","ship","request","fontStyle","description","Track","logs","wholeActive","isTab1Active","isTab2Active","requestID","componentWillMount","getChartData","toggleSection1","e","preventDefault","active","toggleSection2","handleSubmit","id","parseInt","response","contract","methods","getTrackLogs","call","trackHistory","getShipmentTrackData","console","log","events","getPastEvents","fromBlock","length","msg","toUpperCase","setTimeout","map","item","index","shipmentStatus","requestStatus","loggedBy","logger","logTime","labels","label","backgroundColor","borderColor","pointBackgroundColor","borderWidth","handleChange","requestIdRef","current","value","createRef","bind","view1","view2","wholeView","activated","acc","account","cont","marginRight","cursor","margin","height","HumidData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Line} from 'react-chartjs-2'\n\nclass HistoryChart extends Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData:this.props.chartData,\n      tempSet: this.props.temp,\n      humidSet: this.props.humid\n    }\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.temp !== this.props.temp || prevProps.humid !== this.props.humid) {\n\n     let {chartData} = this.state;\n     chartData.datasets[0].data = this.props.temp\n     chartData.datasets[1].data = this.props.humid\n     this.setState({chartData});\n\n    }\n  }\n\n  render() {\n   \n    return(\n      <Line \n      data={this.state.chartData} />\n      \n    );\n  }\n}\n  \n\n\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return <img src={require(\"../assets/invalid-1.svg\")} alt=\"invalid\" />;\n  } else {\n    return <img src={require(\"../assets/valid-3.svg\")} alt=\"valid\" />;\n  }\n}\nclass TrackRecord extends Component {\n  state = {tempHistory: [], humidHistory:[]}\n  // constructor(props) {\n  //   super(props);\n\n  // }\n\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (\n      this.props.ship === \"ABNORMAL\"\n        ? (statusColor = \"alert-text\")\n        : (statusColor = \"good-text\")\n    )\n      return (\n        <div className=\"track-record-container\">\n          <TrackImg status={this.props.ship} />\n          <ul className=\"record-list\">\n            <li className=\"timestamp log-item\"> {timestamp}</li>\n            <li className=\"head log-item\"> {this.props.request}</li>\n            <li style={{fontStyle: 'normal'}}className=\"timestamp log-item\"> SHIPMENT VERIFIED</li>\n            <hr className=\"custom-hr-full\" />\n            <li className=\"log-item\">\n            {this.props.description}.\n            </li>\n            {/* <li className=\"log-item\">\n              <strong>TEMP:</strong> {this.props.temp} Â°C \n            </li>\n            <li className=\"log-item\">\n              <strong>HUMIDITY:</strong>  {this.props.humid} %\n            </li> */}\n            <li className=\"log-item\">\n              <strong>STATUS:</strong>\n              <span className={`${statusColor}`}> {this.props.ship}</span>\n            </li>\n          </ul>\n        </div>\n      );\n  }\n}\n\nclass Track extends Component {\n\n\n  state = { logs: [], wholeActive:false, \n            isTab1Active: false\n            , isTab2Active: true\n            , requestID: \"\" \n            , chartData: {}\n         };\n\n\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  componentWillMount = async() => {\n    this.getChartData();\n  }\n  \n  \n\n  toggleSection1= async(e) => {\n    e.preventDefault();\n    this.setState({isTab1Active: !this.state.isTab1Active ,\n     active: !this.state.active})\n    \n  }\n  toggleSection2= async(e) => {\n    e.preventDefault();\n    this.setState({isTab2Active: !this.state.isTab2Active,\n       active: !this.state.active})\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call()\n    let tempHistory = trackHistory.temp;\n    let humidHistory = trackHistory.humid;\n    console.log( tempHistory, humidHistory);\n\n\n  //   myContract.getPastEvents('MyEvent', {\n  //     filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n  //     fromBlock: 0,\n  //     toBlock: 'latest'\n  // }, function(error, events){ console.log(events); })\n  // .then(function(events){\n  //     console.log(events) // same results as the optional callback above\n  // });\n    let events = await this.props.contract.getPastEvents('DataSent',\n      {fromBlock: 0})\n    this.setState({trackHistory, tempHistory,humidHistory})\n\n\n    // send data to chart\n    this.getChartData(id,tempHistory,humidHistory);\n\n    if (response.length === 0) {\n      this.setState({\n        msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase(),\n      });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \"\" });\n    }, 3000);\n\n    let log = response.map((item, index) => {\n      const shipmentStatus = item.shipmentStatus;\n      const requestStatus = item.requestStatus;\n      const loggedBy = item.logger;\n      const description = item.description;\n      const time = item.logTime;\n      this.setState({ shipmentStatus, requestStatus, loggedBy, description,\n         time });\n\n      return (\n        <TrackRecord\n          key={index}\n          status={item}\n          time={this.state.time}\n          request={this.state.requestStatus}\n          ship={this.state.shipmentStatus}\n          logger ={this.state.loggedBy}\n          description = {this.state.description}\n        />\n      );\n    });\n\n    this.setState({ response, log });\n    this.setState({\n      requestID: \" \",\n      isTab1Active: true,\n      wholeActive:  true\n    });\n    \n  };\n\n\n  getChartData = async(id,temp,humid) => {\n    this.setState({\n      chartData: {\n        labels: ['1/2', '2/2' , '3/2' , '4/2' , '5/2' , '6/2' , '7/2'],\n        datasets: [{\n            label: 'Temperature (Â°C)',\n            data:  temp,\n            backgroundColor: [\n                'rgba(255, 99, 132, 0)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n            ],\n            pointBackgroundColor: 'rgba(255, 99, 132, 0.9)',\n            borderWidth: 2,\n        },\n        {\n          label: 'Humidity (%)',\n          data: humid,\n          backgroundColor: [\n              'rgba(54, 162, 235, 0)',\n          ],\n          borderColor: [\n\n              'rgba(54, 162, 235, 1)',\n          ],\n          pointBackgroundColor:  'rgba(54, 162, 235, 0.9)',\n          borderWidth: 2,\n      }\n      ]\n    }\n    })\n  }\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    \n    let view1, view2, wholeView , activated;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    this.state.wholeActive ? wholeView =\"show\" : wholeView =\"hide\"\n    this.state.isTab1Active ? view1 =\"show\": view1 =\"hide\" \n    this.state.isTab2Active ? view2 =\"show\" : view2 =\"hide\" \n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{ marginRight: \"5px\" }}> Tracking Number : </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n            required = \"required\"\n          />\n\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW STATUS\"\n          />\n        </div>\n\n        <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n          {this.state.msg}\n        </div>\n        <div className={` ${wholeView} accordion-tabs`}>\n        <a href=\"/track\" onClick={this.toggleSection1}\n         className=  {`${activated}  accordion-toggle one `} >\n          + TRACKING SUMMARY  </a>\n          <div className={`${view1} response-logs tab`}>\n            {this.state.log} \n          </div>\n          <a href=\"/track\" onClick={this.toggleSection2}\n            className=  {`${this.state.active}  accordion-toggle two `} >\n          + TEMPRATURE HISTORY </a>\n          <div style={{height: '200px'}} className={` ${view2} response-logs tab`}>\n          \n            {/* 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 */}\n            {/* {this.state.tempTrackHistory}\n            {this.state.humidTrackHistory} */}\n            {/* <p> Chart Goes here </p> */}\n              <div className=\"chart-container\" >\n                <HistoryChart\n                 tempData = {this.state.tempHistory}\n                 HumidData = {this.state.HumidData}\n                 chartData = {this.state.chartData}\n                 temp = {this.state.tempHistory}\n                 humid = {this.state.humidHistory} />\n              </div>\n          </div>\n        </div>  \n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}