{"ast":null,"code":"var _jsxFileName = \"/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js\";\nimport React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\n\nclass HistoryChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: this.props.chartData,\n      tempSet: this.props.temp,\n      humidSet: this.props.humid\n    };\n    console.log(tempSet, humidSet);\n  }\n\n  render() {\n    return React.createElement(Line, {\n      data: this.state.chartData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/invalid-1.svg\"),\n      alt: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"img\", {\n      src: require(\"../assets/valid-3.svg\"),\n      alt: \"valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n}\n\nclass TrackRecord extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tempHistory: [],\n      humidHistory: []\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (this.props.ship === \"ABNORMAL\" ? statusColor = \"alert-text\" : statusColor = \"good-text\") return React.createElement(\"div\", {\n      className: \"track-record-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TrackImg, {\n      status: this.props.ship,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"record-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", timestamp), React.createElement(\"li\", {\n      className: \"head log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", this.props.request), React.createElement(\"li\", {\n      style: {\n        fontStyle: 'normal'\n      },\n      className: \"timestamp log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" SHIPMENT VERIFIED\"), React.createElement(\"hr\", {\n      className: \"custom-hr-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.description, \".\"), React.createElement(\"li\", {\n      className: \"log-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"STATUS:\"), React.createElement(\"span\", {\n      className: \"\".concat(statusColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", this.props.ship))));\n  }\n\n}\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      wholeActive: false,\n      isTab1Active: false,\n      isTab2Active: true\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      requestID: \"\",\n      chartData: {}\n    };\n\n    this.componentWillMount = async () => {\n      this.getChartData();\n    };\n\n    this.toggleSection1 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab1Active: !this.state.isTab1Active,\n        active: !this.state.active\n      });\n    };\n\n    this.toggleSection2 = async e => {\n      e.preventDefault();\n      this.setState({\n        isTab2Active: !this.state.isTab2Active,\n        active: !this.state.active\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = parseInt(this.state.requestID, 10); // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n\n      let response = await this.props.contract.methods.getTrackLogs(id).call();\n      let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call();\n      let tempHistory = trackHistory.temp;\n      let humidHistory = trackHistory.humid;\n      console.log(tempHistory, humidHistory);\n      this.setState({\n        trackHistory,\n        tempHistory,\n        humidHistory\n      });\n\n      if (response.length === 0) {\n        this.setState({\n          msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase()\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          msg: \"\"\n        });\n      }, 3000);\n      let log = response.map((item, index) => {\n        const shipmentStatus = item.shipmentStatus;\n        const requestStatus = item.requestStatus;\n        const loggedBy = item.logger;\n        const description = item.description;\n        const time = item.logTime;\n        this.setState({\n          shipmentStatus,\n          requestStatus,\n          loggedBy,\n          description,\n          time\n        });\n        return React.createElement(TrackRecord, {\n          key: index,\n          status: item,\n          time: this.state.time,\n          request: this.state.requestStatus,\n          ship: this.state.shipmentStatus,\n          logger: this.state.loggedBy,\n          description: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      });\n      this.setState({\n        response,\n        log\n      });\n      this.setState({\n        requestID: \" \",\n        isTab1Active: true,\n        wholeActive: true\n      });\n    };\n\n    this.getChartData = async () => {\n      this.setState({\n        chartData: {\n          labels: this.state.tempHistory,\n          datasets: [{\n            label: 'Temprature Tracking History',\n            data: this.state.tempHistory,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'Humidity Tracking History',\n            data: this.state.humidHistory,\n            backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n            borderColor: ['rgba(54, 162, 235, 1)'],\n            borderWidth: 1\n          }]\n        }\n      });\n    };\n\n    this.handleChange = async e => {\n      this.setState({\n        requestID: this.requestIdRef.current.value\n      });\n    };\n\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  render() {\n    let view1, view2, wholeView, activated;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \" Loading..... \");\n    }\n\n    this.state.wholeActive ? wholeView = \"show\" : wholeView = \"hide\";\n    this.state.isTab1Active ? view1 = \"show\" : view1 = \"hide\";\n    this.state.isTab2Active ? view2 = \"show\" : view2 = \"hide\";\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Track Requested Shipments \"), React.createElement(\"label\", {\n      style: {\n        marginRight: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \" Tracking Number : \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g 101\",\n      value: this.state.requestID,\n      ref: this.requestIdRef,\n      onChange: this.handleChange,\n      required: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      type: \"submit\",\n      className: \"btn\",\n      value: \"VIEW STATUS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: \"10px 0px\"\n      },\n      className: \"query-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"div\", {\n      className: \" \".concat(wholeView, \" accordion-tabs\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection1,\n      className: \"\".concat(activated, \"  accordion-toggle one \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"+ TRACKING SUMMARY  \"), React.createElement(\"div\", {\n      className: \"\".concat(view1, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, this.state.log), React.createElement(\"a\", {\n      href: \"/track\",\n      onClick: this.toggleSection2,\n      className: \"\".concat(this.state.active, \"  accordion-toggle two \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"+ TEMPRATURE HISTORY \"), React.createElement(\"div\", {\n      style: {\n        height: '200px'\n      },\n      className: \" \".concat(view2, \" response-logs tab\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(HistoryChart, {\n      tempData: this.state.tempHistory,\n      HumidData: this.state.HumidData,\n      chartData: this.state.chartData,\n      temp: this.state.tempHistory,\n      humid: this.state.humid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/mohamedkaram/Documents/Demo-sandbox/client/src/components/TrackForm.js"],"names":["React","Component","Line","HistoryChart","constructor","props","state","chartData","tempSet","temp","humidSet","humid","console","log","render","TrackImg","status","require","TrackRecord","tempHistory","humidHistory","statusColor","dateStr","Date","time","toString","dateArr","split","timestamp","join","ship","request","fontStyle","description","Track","logs","wholeActive","isTab1Active","isTab2Active","componentDidMount","requestID","componentWillMount","getChartData","toggleSection1","e","preventDefault","setState","active","toggleSection2","handleSubmit","id","parseInt","response","contract","methods","getTrackLogs","call","trackHistory","getShipmentTrackData","length","msg","toUpperCase","setTimeout","map","item","index","shipmentStatus","requestStatus","loggedBy","logger","logTime","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","handleChange","requestIdRef","current","value","createRef","bind","view1","view2","wholeView","activated","acc","account","cont","marginRight","cursor","margin","height","HumidData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Line} from 'react-chartjs-2'\n\nclass HistoryChart extends Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData:this.props.chartData,\n      tempSet: this.props.temp,\n      humidSet: this.props.humid\n    }\n\n    console.log(tempSet,humidSet)\n  }\n\n\n  render() {\n    return(\n      <Line data={this.state.chartData} />\n    );\n  }\n}\n  \n\n\n\nfunction TrackImg(props) {\n  if (props.status === \"ABNORMAL\") {\n    return <img src={require(\"../assets/invalid-1.svg\")} alt=\"invalid\" />;\n  } else {\n    return <img src={require(\"../assets/valid-3.svg\")} alt=\"valid\" />;\n  }\n}\nclass TrackRecord extends Component {\n  state = {tempHistory: [], humidHistory:[]}\n  // constructor(props) {\n  //   super(props);\n\n  // }\n\n  render() {\n    let statusColor;\n    const dateStr = new Date(this.props.time * 1000).toString();\n    const dateArr = dateStr.split(\" \", 5);\n    const timestamp = dateArr.join(\" \");\n    if (\n      this.props.ship === \"ABNORMAL\"\n        ? (statusColor = \"alert-text\")\n        : (statusColor = \"good-text\")\n    )\n      return (\n        <div className=\"track-record-container\">\n          <TrackImg status={this.props.ship} />\n          <ul className=\"record-list\">\n            <li className=\"timestamp log-item\"> {timestamp}</li>\n            <li className=\"head log-item\"> {this.props.request}</li>\n            <li style={{fontStyle: 'normal'}}className=\"timestamp log-item\"> SHIPMENT VERIFIED</li>\n            <hr className=\"custom-hr-full\" />\n            <li className=\"log-item\">\n            {this.props.description}.\n            </li>\n            {/* <li className=\"log-item\">\n              <strong>TEMP:</strong> {this.props.temp} °C \n            </li>\n            <li className=\"log-item\">\n              <strong>HUMIDITY:</strong>  {this.props.humid} %\n            </li> */}\n            <li className=\"log-item\">\n              <strong>STATUS:</strong>\n              <span className={`${statusColor}`}> {this.props.ship}</span>\n            </li>\n          </ul>\n        </div>\n      );\n  }\n}\n\nclass Track extends Component {\n  state = { logs: [], wholeActive:false, isTab1Active: false , isTab2Active: true };\n\n  componentDidMount = async () => {\n\n    \n  };\n\n  state = { requestID: \"\" , chartData: {}};\n\n  constructor(props) {\n    super(props);\n    this.requestIdRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSection1 = this.toggleSection1.bind(this);\n    this.toggleSection2 = this.toggleSection2.bind(this);\n  }\n\n  componentWillMount = async() => {\n    this.getChartData();\n  }\n  \n  \n\n  toggleSection1= async(e) => {\n    e.preventDefault();\n    this.setState({isTab1Active: !this.state.isTab1Active ,\n     active: !this.state.active})\n    \n  }\n  toggleSection2= async(e) => {\n    e.preventDefault();\n    this.setState({isTab2Active: !this.state.isTab2Active,\n       active: !this.state.active})\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    let id = parseInt(this.state.requestID, 10);\n    // await this.props.contract.methods.createLog(1, 'SHIPPED' ,'20C', '25%', 'NORMAL').send({from: this.props.account})\n    let response = await this.props.contract.methods.getTrackLogs(id).call();\n    let trackHistory = await this.props.contract.methods.getShipmentTrackData(id).call()\n    let tempHistory = trackHistory.temp;\n    let humidHistory = trackHistory.humid;\n    console.log( tempHistory, humidHistory);\n    this.setState({trackHistory, tempHistory,humidHistory})\n\n    if (response.length === 0) {\n      this.setState({\n        msg: \"No tracking logs are available for this request, please try again later!\".toUpperCase(),\n      });\n    }\n    setTimeout(() => {\n      this.setState({ msg: \"\" });\n    }, 3000);\n\n    let log = response.map((item, index) => {\n      const shipmentStatus = item.shipmentStatus;\n      const requestStatus = item.requestStatus;\n      const loggedBy = item.logger;\n      const description = item.description;\n      const time = item.logTime;\n      this.setState({ shipmentStatus, requestStatus, loggedBy, description,\n         time });\n\n      return (\n        <TrackRecord\n          key={index}\n          status={item}\n          time={this.state.time}\n          request={this.state.requestStatus}\n          ship={this.state.shipmentStatus}\n          logger ={this.state.loggedBy}\n          description = {this.state.description}\n        />\n      );\n    });\n\n    this.setState({ response, log });\n    this.setState({\n      requestID: \" \",\n      isTab1Active: true,\n      wholeActive:  true\n    });\n    \n  };\n\n  getChartData = async() => {\n    this.setState({\n      chartData: {\n        labels: this.state.tempHistory,\n        datasets: [{\n            label: 'Temprature Tracking History',\n            data: this.state.tempHistory,\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n            ],\n            borderWidth: 1\n        },\n        {\n          label: 'Humidity Tracking History',\n          data: this.state.humidHistory,\n          backgroundColor: [\n              'rgba(54, 162, 235, 0.2)',\n          ],\n          borderColor: [\n\n              'rgba(54, 162, 235, 1)',\n          ],\n          borderWidth: 1\n      }\n      ]\n    }\n    })\n  }\n\n  handleChange = async (e) => {\n    this.setState({\n      requestID: this.requestIdRef.current.value,\n    });\n  };\n\n  render() {\n    \n    let view1, view2, wholeView , activated;\n    let acc = this.props.account;\n    let cont = this.props.contract;\n\n    if (!acc || !cont) {\n      return <div> Loading..... </div>;\n    }\n    this.state.wholeActive ? wholeView =\"show\" : wholeView =\"hide\"\n    this.state.isTab1Active ? view1 =\"show\": view1 =\"hide\" \n    this.state.isTab2Active ? view2 =\"show\" : view2 =\"hide\" \n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <div className=\"form-row\">\n          <h4>Track Requested Shipments </h4>\n          <label style={{ marginRight: \"5px\" }}> Tracking Number : </label>\n          <input\n            type=\"text\"\n            placeholder=\"e.g 101\"\n            value={this.state.requestID}\n            ref={this.requestIdRef}\n            onChange={this.handleChange}\n            required = \"required\"\n          />\n\n          <input\n            style={{ cursor: \"pointer\" }}\n            type=\"submit\"\n            className=\"btn\"\n            value=\"VIEW STATUS\"\n          />\n        </div>\n\n        <div style={{ margin: \"10px 0px\" }} className=\"query-result\">\n          {this.state.msg}\n        </div>\n        <div className={` ${wholeView} accordion-tabs`}>\n        <a href=\"/track\" onClick={this.toggleSection1}\n         className=  {`${activated}  accordion-toggle one `} >\n          + TRACKING SUMMARY  </a>\n          <div className={`${view1} response-logs tab`}>\n            {this.state.log} \n          </div>\n          <a href=\"/track\" onClick={this.toggleSection2}\n            className=  {`${this.state.active}  accordion-toggle two `} >\n          + TEMPRATURE HISTORY </a>\n          <div style={{height: '200px'}} className={` ${view2} response-logs tab`}>\n          \n            {/* 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 */}\n            {/* {this.state.tempTrackHistory}\n            {this.state.humidTrackHistory} */}\n            {/* <p> Chart Goes here </p> */}\n              <div className=\"chart-container\" >\n                <HistoryChart\n                 tempData = {this.state.tempHistory}\n                 HumidData = {this.state.HumidData}\n                 chartData = {this.state.chartData}\n                 temp = {this.state.tempHistory}\n                 humid = {this.state.humid} />\n              </div>\n          </div>\n        </div>  \n      </form>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}